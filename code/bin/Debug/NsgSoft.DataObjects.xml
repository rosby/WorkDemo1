<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NsgSoft.DataObjects</name>
    </assembly>
    <members>
        <member name="T:NsgSoft.DataObjects.NsgReferentsFilterAttribute">
            <summary>
            Атрибут для свойства доступного в отчете.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReferentsFilterAttribute.FilterList">
            <summary>
            Получение видимости свойства.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.INsgTable">
            <summary>
            Интерфейс таблицы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.GetRow(System.Int32)">
            <summary>
            Получить строку таблицы по номеру среди видимых строк.
            </summary>
            <param name="number">Номер видимой строки.</param>
            <returns>Возвращает строку, если она найдена, иначе null.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgTable.RowsList">
            <summary>
            Список строк.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgTable.AllRowsCount">
            <summary>
            Возвращает количество всех строк таблицы независимо от наложенных в данный момент фильтров.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.ColumnToArray(System.String,NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Выгрузить указанную колонку в массив
            </summary>
            <param name="colName">Имя колонки</param>
            <param name="compare">Условия выгрузки. Будут выгружены только строки, удовлетворяющие условию.
            Если условие не указано - будут выгружены все строки</param>
            <param name="needCollapse">Если true - то будут выгружены только уникальные значения</param>
            <returns>Массив выбраных значений</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.CopyTo(NsgSoft.DataObjects.NsgMemoryTable,System.String[])">
            <summary>
            Cкопировать все строки, выбранные колонки данной таблицы в указанную
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="fieldNames">Имена колонок для копирования</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.CopyTo(NsgSoft.DataObjects.NsgMemoryTable,System.Boolean)">
            <summary>
            Cкопировать все строки и все колонки данной таблицы в указанную
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="useClone">Если true, то все ссылочные типы будут клонированы, иначе просто скопированы</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.CopyTo(NsgSoft.DataObjects.NsgMemoryTable)">
            <summary>
            Cкопировать все строки и все колонки данной таблицы в указанную
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgTable.Count">
            <summary>
            Возвращает количество строк таблицы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.CountAll(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения количества строк в таблице, удовлетворяющих заданным условиям.
             Поиск по всем строкам, в том числе и скрытым.
            </summary>
            <param name="compare">Критерии поиска.</param>
            <returns>Возвращает количество.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.DeleteAll">
            <summary>
            Удаляет все строки таблицы (при вызове метода Post строки будут удалены из базы)
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.DeleteRow(System.Int32)">
            <summary>
            Удаление строки таблицы по номеру среди видимых строк.
            </summary>
            <param name="rowNumber">Номер видимой удаляемой строки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.Edit(System.String[])">
            <summary>
            Метод редактирования строки объекта.
            </summary>
            <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.Filter(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод фильтрации таблицы по указанным параметрам.
             Отфильтрованные строки не удаляются, а переходят 
             в "скрытое" состояние.
            </summary>
            <param name="paramAll">Параметры для фильтрации.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.FullClear">
            <summary>
            Полная очистка таблицы от строк.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgTable.HiddenCount">
            <summary>
            Возвращает количество скрытых строк таблицы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.IsLock">
            <summary>
            Метод проверки блокировки объекта
             Блокируется объект - владелец
            </summary>
            <returns>Возвращает true, если объект заблокирован. Иначе false</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.MoveRow(System.Int32,System.Int32)">
            <summary>
            Поменять две видимые строки местами.
            </summary>
            <param name="oneNumber">Номер первой видимой строки.</param>
            <param name="twoNumber">Номер второй видимой строки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.ResetAllRowsRoot">
            <summary>
            Метод переприсваивания родителя всем строкам.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgTable.Root">
            <summary>
            Объект - владелец табличной части
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgTable.Selected">
            <summary>
            Проверка, присвоено ли объекту не пустое значение
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.Sort(NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Метод сортировки таблицы по указанным полям.
             В случае NsgDataDocument сортировка идет по дате документа,
             NsgMultipleObject - по маске (object.ToString()).
             В остальных случаях - по значению
            </summary>
            <param name="sorting">Параметры для сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.Sort(System.String[])">
            <summary>
            Метод сортировки таблицы по указанным полям.
            </summary>
            <param name="columns">Список полей для сортировки через запятую.
             После имени поля может идти "+" - по возврастанию, "-" - по убыванию </param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.SumByColumn(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения суммы по указанной колонке.
             Суммирование по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colName">Имя колонки по которой производится суммирование.</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <returns>Возвращает сумму по колонке.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.SumByColumnCirculation(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Получить сумму по указанным колонкам Circulation.
             Определение по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colNames">Имена колонок по которым производится суммирование.</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <returns>Dictionary с результатами суммирования. В качесве ключей - имена колонок.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.SumByColumns(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения суммы по указанным колонкам.
             Суммирование по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colNames">Имена колонок по которым производится суммирование.
             Список разделен запятыми (Пример: 'Column1,Column2 , Column3').</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <returns>Возвращает Dictionary с результатами суммирования.
             В качестве ключей - имена колонок.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.SumByColumnsCirculation(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Получить сумму по указанным колонкам Circulation.
             Определение по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colNames">Имена колонок по которым производится суммирование.</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <returns>Dictionary с результатами суммирования. В качесве ключей - имена колонок.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgTable.TableSubType">
            <summary>
            Тип таблицы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgTable.ObjectList">
            <summary>
            Получение объекта управления списком вложенных объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgTable.Item(System.String)">
            <summary>
            Получение копии объекта по пути.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.ToString(System.String)">
            <summary>
            Метод получения строкового представления объекта по шаблону
            </summary>
            <param name="mask">Шаблон.</param>
            <returns>Стока представления.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.NewRow">
            <summary>
            Добавить новую строку в таблицу
            </summary>
            <returns>Новая строка, уже добавленная в таблицу</returns>
            <remarks>По завершению редактирования новой строки, у нее необходимо вызвать метод Post(), иначе она не будет участвовать в сортировке</remarks>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgTable.Rows">
            <summary>
            Получение списка строк таблицы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.CopyTo(NsgSoft.DataObjects.INsgTable,NsgSoft.DataObjects.INsgDataTableRow[],NsgSoft.DataObjects.NsgCompare,System.String[],NsgSoft.Common.NsgRenameTable,NsgSoft.DataObjects.TableCopyToParams)">
            <summary>
            Копирование строк в указанную таблицу
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="copyRows">Список строк, которые надо скопировать, если null то все</param>
            <param name="copyFilter">Фильтр, будут скопированы тольок те строки, который удовлетворяют фильтру, если null то нет фильтра</param>
            <param name="copyColumns">Список колонок, которые надо скопировать, если null то все</param>
            <param name="rename">Таблица переименований колонок при копировании, rename[имя в исходной таблице] = имя в результирующей таблице</param>
            <param name="param">Параметры копирования</param>
            <returns>Ошибка, если была, иначе null</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.ColumnToString(System.String,NsgSoft.DataObjects.NsgCompare,System.String)">
            <summary>
            Составить строку из значений, хранящихся в указанной колонке, разделенных указанным разделителем
            </summary>
            <param name="colName">Имя колонки</param>
            <param name="compare">Условие отбора строк. Если не требуется - передавать null</param>
            <param name="separator">Разделитель между значениями колонок</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.ReadAllRequestedReferences(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод, вызывающий дочитывание всех параметров, перечисленных в cmp как параметры сравнения
            </summary>
            <param name="cmp">NsgCompare из которого будут извлечены все ссылки для дочитывания</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.Collapse(System.String[],System.String[])">
            <summary>
            Сворачивание таблицы по указанным полям, при этом производится суммирование.
            </summary>
            <param name="collapsedFields">Список полей через запятую по которым производится сворачивание</param>
            <param name="sumFields">Список полей через запятую по которым производится суммирование</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.CreateIndex(System.String[])">
            <summary>
            Создание индекса по колонкам
            </summary>
            <param name="columns">имена колонок</param>
            <returns>индекс</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.SetValue(System.String,System.Object)">
            <summary>
            Метод присвоения значения в строках таблицы по заданной колонке.
             Присвоение только по видимым строкам таблицы.
            </summary>
            <param name="columnName">Имя колонки.</param>
            <param name="newValue">Значение.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgTable.SetValue(System.String,System.Object,System.Boolean)">
            <summary>
            Метод присвоения значения в строках таблицы по заданной колонке.
            </summary>
            <param name="columnName">Имя колонки.</param>
            <param name="newValue">Значение.</param>
            <param name="allRowsFind">Флаг замены по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgDataTableRow.Post">
            <summary>
            Метод изменения объекта в базе.
            </summary>
            <returns>Возвращает true при удачном изменении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.#ctor">
            <summary>
            Конструктор класса Документ по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Документ первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Документ из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegisterCorrection.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.FillRests">
            <summary>
            Создание записей остатков на дату документа
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.FillRests(NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Создание записей остатков на дату документа
            </summary>
            <param name="compare">Условие для выборки остатков</param>
            <param name="active">Флаг активности остатков после создания, true после проведения документа, false после отмены проведения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.ClearRests">
            <summary>
            Удаление остатков, рассчитанных данным документом
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.ClearMovements(NsgSoft.DataObjects.NsgDataRegister)">
            <summary>
            Удаление движений по регистру до даты документа
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.ClearDocuments(NsgSoft.DataObjects.NsgDataDocument)">
            <summary>
            Удаление документов, помеченных на удаление, до даты документа
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.DeactivateMovements">
            <summary>
            Деактивация движений по регистру до даты документа
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.GetMovementsCount(System.Boolean,NsgSoft.DataObjects.NsgDataRegister)">
            <summary>
            Получение количества движений по обрабатываемому регистру до даты документа
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegisterCorrection.GetDocumentsCount(NsgSoft.DataObjects.NsgDataDocument)">
            <summary>
            Получение количества помеченных на удаление документов до даты документа
            </summary>
            <returns></returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataServerJob">
            <summary>
            Класс сложного элемента данных - Серверная задача.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataServerJob.FieldNames">
            <summary>
            Класс имен полей объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.StartedDate">
            <summary>
            Дата запуска задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.RunDate">
            <summary>
            Дата начала исполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.CompleteDate">
            <summary>
            Дата окончания исполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.Priority">
            <summary>
            Приоритет задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.Object">
            <summary>
             Обрабатываемый объект
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.TypeObject">
            <summary>
            Тип обрабатываемого объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.Action">
            <summary>
            Действие, выполняемое над объектом
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.Author">
            <summary>
            Автор задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.IsNotificateAuthor">
            <summary>
            Признак уведомления автора задания о результате выполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.AdditionalReceiver">
            <summary>
            Пользователь, которому можно сообщить результат выполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.TryCount">
            <summary>
            Количество попыток постановки задания на обработку
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.FieldNames.Options">
            <summary>
            Опции
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames">
            <summary>
            Класс имен свойств объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.StartedDate">
            <summary>
            Дата запуска задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.RunDate">
            <summary>
            Дата начала исполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.CompleteDate">
            <summary>
            Дата окончания исполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.Priority">
            <summary>
            Приоритет задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.Object">
            <summary>
             Обрабатываемый объект
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.TypeObject">
            <summary>
            Тип обрабатываемого объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.Action">
            <summary>
            Действие, выполняемое над объектом
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.Author">
            <summary>
            Автор задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.IsNotificateAuthor">
            <summary>
            Признак уведомления автора задания о результате выполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.AdditionalReceiver">
            <summary>
            Пользователь, которому можно сообщить результат выполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.TryCount">
            <summary>
            Количество попыток постановки задания на обработку
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.PropertyNames.Options">
            <summary>
            Опции
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames">
            <summary>
            Класс имен описаний свойств объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.StartedDate">
            <summary>
            Дата запуска задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.RunDate">
            <summary>
            Дата начала исполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.CompleteDate">
            <summary>
            Дата окончания исполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.Priority">
            <summary>
            Приоритет задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.Object">
            <summary>
             Обрабатываемый объект
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.TypeObject">
            <summary>
            Тип обрабатываемого объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.Action">
            <summary>
            Действие, выполняемое над объектом
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.Author">
            <summary>
            Автор задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.IsNotificateAuthor">
            <summary>
            Признак уведомления автора задания о результате выполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.AdditionalReceiver">
            <summary>
            Пользователь, которому можно сообщить результат выполнения задания
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.TryCount">
            <summary>
            Количество попыток постановки задания на обработку
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.DescriptionNames.Options">
            <summary>
            Опции
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataServerJob.#ctor">
            <summary>
            Конструктор класса Серверная задача по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataServerJob.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataServerJob.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Документ из XML.
            </summary>
            <param name="elem">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataServerJob.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Серверная задача первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.CanHandle">
            <summary>
            Может ли документ проводиться.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataServerJob.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataServerJob.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataServerJob.Handling">
            <summary>
            Метод проведения объекта Серверная Задача.
            </summary>
            <returns>Возвращает булевый результат проведения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataServerJob.InteractiveNew">
            <summary>
            Метод, вызываемый при интерактивном создании нового элемента.
             Может перекрываться в наследниках для начального заполнения полей объекта.
             Не вызывается при копировании и вводе на основании.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataServerJob.AddJob(System.DateTime,NsgSoft.DataObjects.NsgPriority,NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgServerJobAction,System.Boolean,NsgSoft.DataObjects.NsgDataDictionary,System.String)">
            <summary>
            Метод добавления новой задачи на сервер.
            </summary>
            <param name="startedDate">Дата запуска задания.</param>
            <param name="priority">Приоритет задания.</param>
            <param name="obj">Обрабатываемый объект задания.</param>
            <param name="action">Действие, выполняемое над объектом.</param>
            <param name="notificateAuthor">Признак уведомления автора задания о результате его выполнения.</param>
            <param name="additionalReceiver">Пользователь, которому можно сообщить результат выполнения задания.</param>
            <param name="options">Настройки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataServerJob.ImageKey(NsgSoft.DataObjects.NsgBaseObject.ImageKeyPrefics)">
            <summary>
            Метод получения имени картинки для объекта с префиксом.
            </summary>
            <param name="prefics">Префикс.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgReportObject">
            <summary>
            Класс сложного элемента данных - Отчет.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReportObject.#ctor">
            <summary>
            Конструктор класса Справочник по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReportObject.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Справочник первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReportObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Справочник из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReportObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReportObject.CreateDefaultFields">
            <summary>
            Добавление рекомендованных реквизитов при создании из Конфигуратора
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReportObject.GetSubTypesForAdding">
            <summary>
            Метод получения списка групп доступных для добавления в объект типов.
            </summary>
            <returns>Список групп.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReportObject.GetTypesForAdding(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Метод получения списка доступных для добавления в объект типов по группе.
            </summary>
            <param name="group">Тип группы.</param>
            <returns>Список типов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReportObject.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataCharacteristics">
            <summary>
            Класс сложного элемента данных - Регистр характеристик.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataCharacteristics._DATE_DEPENDENCE">
            <summary>
            Признак зависимости значений регистра от времени.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.#ctor">
            <summary>
            Конструктор класса Регистр по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Регистр первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.#ctor(NsgSoft.DataObjects.NsgDataDocument)">
            <summary>
            Конструктор класса Регистр для документа. При этом, все движения, сделанные указанным документом при проведении
            будут автоматически удалены в случае отмены проведения данного документа.
            </summary>
            <param name="doc"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Регистр из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataCharacteristics.DateDependence">
            <summary>
            Признак зависимости данный от времени.
            Если true - автоматически создаются измерение Дата и КонецПериода
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataCharacteristics.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.CheckPredefinedFields">
            <summary>
            Проверяет наличие необходимых предопределенных полей, 
            создает недостающие, удаляет лишние
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.GetSubTypesForAdding">
            <summary>
            Метод получения списка групп доступных для добавления в объект типов.
            </summary>
            <returns>Список групп.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.GetTypesForAdding(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Метод получения списка доступных для добавления в объект типов по группе.
            </summary>
            <param name="group">Тип группы.</param>
            <returns>Список типов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.GetEmptyRestsMemoryTable(System.String[])">
            <summary>
            Получение пустой MemoryTable для записи в нее полученных остатков.
            </summary>
            <param name="fields">Список полей.</param>
            <returns>Возвращает MemoryTable.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.GetRest(System.DateTime)">
            <summary>
            По заполненным измерениям регистра возвращает значения ресурсов на указанную дату.
            Полученные результаты помещает в ресурсы регистра.
            </summary>
            <param name="dateTime">Момент времени, на который получаются значения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.FindRowWithMaxWeigth(NsgSoft.DataObjects.NsgMemoryTable)">
            <summary>
            Метод поиска наиболее подходящей строки( т.е. с максимальным весом по заданным реквизитам)
            </summary>
            <param name="table">Таблица строк</param>
            <returns>Строку таблицы</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.GetRest">
            <summary>
            По заполненным измерениям регистра возвращает значения ресурсов на рабочую дату.
            Полученные результаты помещает в ресурсы регистра.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.GetRests(System.String[])">
            <summary>
            По заполненным измерениям регистра возвращает остатки.
            Полученные результаты помещает в возвращаему таблицу.
            </summary>
            <returns>NsgMemoryTable содержащая остатки.</returns>
            <param name="resultRequisits">Результирующий набор реквизитов</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.GetRests(NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            По заполненным измерениям регистра возвращает остатки.
            Полученные результаты помещает в возвращаему таблицу.
            </summary>
            <param name="compare">Содержит параметры в соответствии с которыми будут запрошены остатки.</param>
            <returns>NsgMemoryTable содержащая остатки.</returns>
            <param name="resultRequisits">Результирующий набор реквизитов</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.GetRests(System.DateTime,System.String[])">
            <summary>
            По заполненным измерениям регистра возвращает остатки.
            Полученные результаты помещает в возвращаемую таблицу.
            </summary>
            <returns>NsgMemoryTable содержащая результат.</returns>
            <param name="dateTime">Дата на которую запрашиваются остатки</param>
            <param name="resultRequisits">Результирующий набор реквизитов</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.GetRests(System.DateTime,NsgSoft.DataObjects.NsgCompare,System.Collections.Generic.List{System.String},System.String[])">
            <summary>
            По переданным параметрам возвращает остатки на указанную дату.
            Полученные результаты помещает в возвращаемую таблицу.
            </summary>
            <returns>NsgMemoryTable содержащая результат.</returns>
            <param name="dateTime">Дата на которую запрашиваются остатки</param>
            <param name="inCompare">Содержит параметры в соответствии с которыми будут запрошены остатки.</param>
            <param name="resultRequisits">Результирующий набор реквизитов</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.BasePost">
            <summary>
            Запись сделанных движений в регистр
            </summary>
            <returns>true - запись успешно выполнена</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.New">
            <summary>
            Метод подготовки объекта к записи новых значений.
            </summary>
            <remarks>Данный метод необходимо вызывать перед началом добавления данных для записи в БД.
            Непосредственно добавление данных осуществляется методом AddMovement(), а запись в БД - методом Post</remarks>
            <example>
            Цены регЦен = Цены.Новый();
            регЦен.New();
            foreach (ОбработкиИзменениеЦенТабличнаяЧасть.Строка строка in Таблица.Value.Rows)
            {
               .....
               //необходимее действия
               .....
               регЦен.Валюта = строка.Валюта;
               регЦен.Дата = ДатаЗначений.Value;
               регЦен.ЕдиницаИзмерения = строка.ЕдиницаИзмерения;
               регЦен.Номенклатура = строка.Номенклатура;
               регЦен.ТипЦены = строка.ТипыЦены;
               регЦен.Фирма = строка.Фирма;
               регЦен.Цена = строка.Цена;
               регЦен.AddMovement();
            }
            регЦен.Post();
            
            //подробнее смотрите в исхониках Торговли 2008, Обработки.ИзменениеЦен.Форма.cs 
            </example>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.DeleteMovements(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Удаление движений, сделанных документом в регистре. Без необходимости, данный метод не следует вызывать самостоятельно, т.к. движения
            удаляются автоматически при снятии документа с проведения.
            </summary>
            <param name="nsgDataDocument">Документ, выполнивший движения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.DeleteMovement(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Удаление одного движения из регистра
            </summary>
            <param name="movementToDelete">Удаляемая запись регистра характеристик</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCharacteristics.OnRequisiteRequestForEdit(System.String)">
            <summary>
            Метод запроса реквизитом разрешения на редактирование.
            </summary>
            <param name="requisiteName">Имя реквизита.</param>
            <returns>Возвращает true, если редактирование разрешено, иначе false.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataCustomObject">
            <summary>
            Класс сложного элемента данных - Таблица.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCustomObject.#ctor">
            <summary>
            Конструктор класса Таблица по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCustomObject.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Таблица первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCustomObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Таблица из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCustomObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCustomObject.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCustomObject.InternalPost(System.Collections.Generic.List{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{NsgSoft.DataObjects.NsgMultipleObject}})">
            <summary>
            Не имеет смысла у данного объекта, всегда возвращает true.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCustomObject.BasePost">
            <summary>
            Не имеет смысла у данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCustomObject.GetLogicType">
            <summary>
            Возвращает лочичесокий тип объекта 
            </summary>
            <returns>Лочичесокий тип объекта</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataEnum">
            <summary>
            Класс сложного элемента данных - Перечисление.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataEnum._NUMBER_LIST">
            <summary>
            Таблица для поиска значения по номеру.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.#ctor">
            <summary>
            Конструктор класса Перечисление по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.#ctor(System.Int32)">
            <summary>
            Создание объекта с установленным значением
            </summary>
            <param name="inValue">Значение</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.#ctor(System.String)">
            <summary>
            Создание объекта с установленным значением
            </summary>
            <param name="inValue">Значение</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Перечисление из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataEnum.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataEnum.NumberList">
            <summary>
            Список для поиска названий перечислений по их номеру
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.Find(NsgSoft.Common.NsgDataFixedFields,System.Object,System.String[])">
            <summary>
            Метод поиска в БД на полное совпадение по одному реквизиту c заполнением текущего объекта.
            </summary>
            <remarks>
            Результатом является первая попавшаяся строка, удовлетворяющая
             критериям поиска. Заполняет текущий объект в случае удачного поиска.
            </remarks>
            <param name="inName">Идентификатор реквизита.</param>
            <param name="inValue">Значение для поиска. Условие поиска - полное совпадение.</param>
            <returns>Возвращает true при удачном поиске и false в противном случае.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataEnum.IsActive">
            <summary>
            Активность элемента перечисления, если false, то значение не имеет смысла в контексте и не будеи предлагаться в интерактивном редактировании
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.GetAllValues">
            <summary>
            Все значения перечисления как объекты
            </summary>
            <returns>Массив объектов</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.GetAllValuesAsInt">
            <summary>
            Все значения перечисления как индексы
            </summary>
            <returns>Массив индексов перечисления</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.GetAllValuesAsString">
            <summary>
            Все значения перечисления как строки
            </summary>
            <returns>Массив строк</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.GetAllValuesAsPresentation">
            <summary>
            Все значения перечисления как Представления
            </summary>
            <returns>Массив строк</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.GetSubTypesForAdding">
            <summary>
            Метод получения списка групп доступных для добавления в объект типов.
            </summary>
            <returns>Список групп.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.GetTypesForAdding(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Метод получения списка доступных для добавления в объект типов по группе.
            </summary>
            <param name="group">Тип группы.</param>
            <returns>Список типов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.CreateDefaultFields">
            <summary>
            Добавление рекомендованных реквизитов при создании из Конфигуратора
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataEnum.Value">
            <summary>
            Получение / установка текущего значения перечисления
            Возвращает числовое значение. 
            При установке значения, если оно не найдено в ObjectList, присваивается пустое значение
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.ToString">
            <summary>
            Возвращает строковое представление значения в соответствии с тем, как оно задано в конфигураторе
            </summary>
            <returns>Строковое представление текущего значения</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.GetReference(System.String)">
            <summary>
            Возвращает типизированную ссылку на объект данного типа
            </summary>
            <param name="Name">Имя создаваемой ссылки</param>
            <returns>Новая типизированная ссылка</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.op_Equality(NsgSoft.DataObjects.NsgDataEnum,NsgSoft.DataObjects.NsgDataEnum)">
            <summary>
            Перекрытие оператора ==
            </summary>
            <param name="one">первый объект</param>
            <param name="two">второй объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.op_Inequality(NsgSoft.DataObjects.NsgDataEnum,NsgSoft.DataObjects.NsgDataEnum)">
            <summary>
            Перекрытие оператора !=
            </summary>
            <param name="one">первый объект</param>
            <param name="two">второй объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.Equals(System.Object)">
            <summary>
            Перекрытие операции сравнения
            </summary>
            <param name="obj">Объект типа NsgDataEnum</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnum.GetHashCode">
            <summary>
            Получение HashCode объекта
            </summary>
            <returns>HashCode объекта</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataFastRegister">
            <summary>
            Класс сложного элемента данных - Быстрый регистр.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataFastRegister._TOTAL_LIST">
            <summary>
            Список свойств регистра.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataFastRegister.ReHandle">
            <summary>
            Признак что документ перепроводится по регистру
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.#ctor">
            <summary>
            Конструктор класса Регистр по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Регистр первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Регистр из XML.
            </summary>
            <param name="elem">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.#ctor(NsgSoft.DataObjects.NsgDataDocument)">
            <summary>
            Конструктор класса Регистр для документа
            </summary>
            <param name="doc"></param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFastRegister.Total">
            <summary>
            Список итогов измерений регистра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFastRegister.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFastRegister.DateTimeEnd">
            <summary>
            Получение / установка момента времени конца дейсвтвия данного движения
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.CreatePreDefinedFields">
            <summary>
            Проверяет наличие необходимых предопределенных полей, 
            создает недостающие, удаляет лишние
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.CheckPredefinedFields">
            <summary>
            Проверяет наличие необходимых предопределенных полей, 
            создает недостающие, удаляет лишние
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.BasePost">
            <summary>
            Сохранение движений в БД
            </summary>
            <returns>True, если запись завершилась успешно</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.CompareRow(NsgSoft.DataObjects.NsgDataTableRow,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Сравнивает две строки по дате движения и ресурсам
            </summary>
            <param name="row"></param>
            <param name="exist"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFastRegister.ReHandling(NsgSoft.DataObjects.NsgDataTable)">
            <summary>
            Перепроведение документа
            </summary>
            <param name="oldMovements"></param>
            <returns></returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgVirtualMultipleObject">
            <summary>
            Класс сложного элемента данных - Виртуальная таблица регистра.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualMultipleObject.#ctor(System.Type)">
            <summary>
            Конструктор класса по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualMultipleObject.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualMultipleObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Перечисление из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualMultipleObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualMultipleObject.GetSubTypesForAdding">
            <summary>
            Метод получения списка групп доступных для добавления в объект типов.
            </summary>
            <returns>Список групп.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualMultipleObject.GetTypesForAdding(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Метод получения списка доступных для добавления в объект типов по группе.
            </summary>
            <param name="group">Тип группы.</param>
            <returns>Список типов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualMultipleObject.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualMultipleObject.CreateDefaultFields">
            <summary>
            Добавление рекомендованных реквизитов при создании из Конфигуратора
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualMultipleObject.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualMultipleObject.Value">
            <summary>
            Получение / установка текущего значения перечисления
            Возвращает числовое значение. 
            При установке значения, если оно не найдено в ObjectList, присваивается пустое значение
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualMultipleObject.GetReference(System.String)">
            <summary>
            Возвращает типизированную ссылку на объект данного типа
            </summary>
            <param name="Name">Имя создаваемой ссылки</param>
            <returns>Новая типизированная ссылка</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgBaseObject">
            <summary>
            Класс базового абстрактного объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject.CODEIDENT">
            <summary>
            Отступ на кодогенерации.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject._NAME">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject._LOCKED">
            <summary>
            Флаг блокировки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject._GUID">
            <summary>
            Идентификатор объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject._CHANGED_PROPERTIES">
            <summary>
            Список измененных свойств.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject._PROPERTIES_TO_SAVE">
            <summary>
            Список свойств на сохранение.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject._TYPELOCALNAME">
            <summary>
            Локализованное имя типа для кодогенерации.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject._TYPENAME">
            <summary>
            Локализованное имя типа для интерфейса.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject._CODE_LANGUAGE">
            <summary>
            Язык кодогенерации
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgBaseObject.ImageKeyPrefics">
            <summary>
            Перечисление префиксов картинок.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject.ImageKeyPrefics.None">
            <summary>
            Без префикса.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject.ImageKeyPrefics.ShortCut">
            <summary>
            Ссылка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject.ImageKeyPrefics.Warning">
            <summary>
            Предупреждение.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.#ctor">
            <summary>
            Конструктор класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор класса для клонирования.
            </summary>
            <param name="obj">Объект для клонирования.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.CodeLanguage">
            <summary>
            Язык кодогенерации
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.Name">
            <summary>
            Получение и установка имени объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.internalName">
            <summary>
            Получение и установка имени объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.CanPropertiesChange">
            <summary>
            Получение флага возможности модификации свойств объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.IsLoadedFromDll">
            <summary>
            Получение и установка флага загрузки из DLL.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.Guid">
            <summary>
            Получение и установка идентификатора объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.ChangedProperties">
            <summary>
            Получение списка измененных свойств.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.PropertiesToSave">
            <summary>
            Получение списка свойств на сохранение.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.CodeGenerationNameSuffics">
            <summary>
            Возвращает суффикс имени файла для кодогенерации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.ParentClassName">
            <summary>
            Имя базового класса формы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.ClassName">
            <summary>
            Имя класса в кодогенерации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.IsCodeGenerationNeeded">
            <summary>
            Получить флаг необходимости кодогенерации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.TypeLocalName">
            <summary>
            Получение локализованного имени типа объекта
             с соблюдением правил формирования имен переменных для C#,
             для кодогенерации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.TypeName">
            <summary>
            Получение локализованного имени типа объекта,
             без соблюдения правил формирования имен переменных для C#,
             для отображения в интерфейсе.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.SaveConfig(System.Configuration.ConfigXmlDocument)">
            <summary>
            Метод сохранения объектом самого себя во фрагмент XML документа.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.SaveConfig(System.IO.Stream)">
            <summary>
            Метод сохранения объектом самого себя в поток в виде XML.
            </summary>
            <param name="stream">Поток для сохранения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.SaveContent(System.Configuration.ConfigXmlDocument)">
            <summary>
            Метод записи объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.LoadContent(System.Xml.XmlElement)">
            <summary>
            Метод загрузки объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.ImageKey">
            <summary>
            Метод получения имени картинки для объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.ImageKey(NsgSoft.DataObjects.NsgBaseObject.ImageKeyPrefics)">
            <summary>
            Метод получения имени картинки для объекта с префиксом.
            </summary>
            <param name="prefics">Префикс.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.BaseImageKey">
            <summary>
            Имя для создания картинки
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.GetWarnings">
            <summary>
            Получение предупреждений о неправильном или сомнительном заполнении объектов
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.CreateByGuid(System.Guid)">
            <summary>
            Метод получения объекта из метаданных по идентификатору.
            </summary>
            <param name="guid">Идентификатор объекта.</param>
            <returns>Возвращает объект, если найден, иначе null.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.RemoveChangedProperty(System.String)">
            <summary>
            Метод добавления измененного свойства.
            </summary>
            <param name="name">Имя измененного свойства.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.AddChangedProperty(System.String)">
            <summary>
            Метод добавления измененного свойства.
            </summary>
            <param name="name">Имя измененного свойства.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.IsPropertyFromDll(System.String)">
            <summary>
            Метод проверки свойства на загрузку из DLL.
            </summary>
            <param name="name">Имя свойства.</param>
            <returns>Возвращает true, если из DLL, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.GetPropertiesForSave(NsgSoft.DataObjects.NsgXmlNameAttribute.ObligatoryTypes)">
            <summary>
            Метод получения списка свойств для сохранения в XML и генерации кода.
            </summary>
            <returns>Возвращает список свойств для сохранения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.GetInitializeCode(System.String)">
            <summary>
            Возвращает С# код для инициализации объекта
            </summary>
            <param name="objectName">Имя объекта.</param>
            <returns>Возвращает строку генерированного кода.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.GetPropertiesInitializeCode(System.String)">
            <summary>
            Возвращает С# код для инициализации свойств объекта
            </summary>
            <param name="objectName">Имя объекта.</param>
            <returns>Возвращает строку генерированного кода.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.SetCodeIdent(System.String,System.String)">
            <summary>
            TODO: Comment.
            </summary>
            <param name="code"></param>
            <param name="codeident"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.ObjectToCodeString(System.Object)">
            <summary>
            Возвращает С# код для инициализации переданного объекта
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.IEnumerableToCodeString(System.Collections.IEnumerable)">
            <summary>
            TODO: Comment
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.objectToCodeString(System.Object)">
            <summary>
            TODO: Comment
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.OnAfterRename(System.String)">
            <summary>
            Вызывается после изменение имени объекта.
            </summary>
            <param name="oldName">Старое имя.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.tryLocalize(System.String)">
            <summary>
            TODO: Comment
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.ToColumns">
            <summary>
            TODO: Comment
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.GetFullObjectName">
            <summary>
            TODO: Comment
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.GetNsgType(System.Type)">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <param name="result">Тип.</param>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.addProperty(System.String,System.Object)">
            <summary>
            Добавление свойства
            </summary>
            <param name="name">имя свойства</param>
            <param name="value">знание свойства</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:NsgSoft.DataObjects.NsgBaseObject.getProperty(System.String)" -->
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.AddUserProperty(System.String,System.Object)">
            <summary>
            Добавление свойства
            </summary>
            <param name="name">имя свойства</param>
            <param name="value">знание свойства</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:NsgSoft.DataObjects.NsgBaseObject.GetUserProperty(System.String)" -->
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.CopyUserProperties(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Копирование дополнительных свойств
            </summary>
            <param name="from">ОБъект, из которого копировать свойства</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.DeleteUserProperty(System.String)">
            <summary>
            Удаление дополнительного свойства
            </summary>
            <param name="name">имя свойства</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.ClearUserProperties">
            <summary>
            Очистка дополнительных свойств
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.ContainsProperty(System.String)">
            <summary>
            Проверка наличия дополнительного свойства
            </summary>
            <param name="name">имя свойства</param>
            <returns>результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.Dispose">
            <summary>
            Уничтожение
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgBaseObject.isDisposed">
            <summary>
            Флаг что объект помечен на удаление
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgBaseObject.IsDisposed">
            <summary>
            Флаг что объект помечен на удаление
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.Dispose(System.Boolean)">
            <summary>
            Метод для уничтожения
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.Finalize">
            <summary>
            Финализатор
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgBaseObject.DisposeOnClose">
            <summary>
            Если где то есть поле в закрываемой форме, то 
            уничтожить его явно
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectIndex`1.createIndexKey(System.Object)">
            <summary>
            Создание эдемента ключа для индекса
            </summary>
            <param name="obj">ключевой объект индекса</param>
            <returns>элемент ключа</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectIndex`1.GetValuesByMultipleObject(NsgSoft.DataObjects.NsgMultipleObject,System.String[])">
            <summary>
            Получение объекта
            </summary>
            <param name="MO">Объект метаданных</param>
            <param name="rekvisits">список имен ключевых реквизитов</param>
            <returns>массив объектов, удовлетворяющих индексу</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectIndex`1.GetValuesByRow(NsgSoft.DataObjects.INsgDataTableRow,System.String[])">
            <summary>
            Получение объекта
            </summary>
            <param name="row">Строка таблицы</param>
            <param name="rekvisits">список имен ключевых реквизитов</param>
            <returns>массив объектов, удовлетворяющих индексу</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectIndex`1.AddValue(`0,System.Object[])">
            <summary>
            Добавление объекта
            </summary>
            <param name="value">объект</param>
            <param name="keys">ключи индекса, если объект NsgMultipleObject или INsgDataTableRow и ключ строка, то ключем является реквизит с таким имененм</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObjectDescriptor.External">
            <summary>
            Флаг, объект находится в отдельной библиотеке или внутри сборки
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObjectDescriptor.CheckOperationAccess(NsgSoft.Common.NsgMultipleObjectOperation,System.Boolean)">
            <summary>
            Метод проверки доступа по операции для текущего пользователя.
            </summary>
            <param name="operation">Операция.</param>
            <param name="raiseException">Вызывать исключение при отсутствии доступа.</param>
            <returns>Возвращает булевый флаг доступа по операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObjectDescriptor.GetCurrentUserRights">
            <summary>
            Метод получения прав по объекту для текущего пользователя.
            </summary>
            <returns>Возвращает права на данный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObjectDescriptor.GetRights(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Метод получения прав по объекту для заданного пользователя.
            </summary>
            <param name="user">Пользователь.</param>
            <returns>Возвращает права на данный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObjectDescriptor.GetAvailableOpertions">
            <summary>
            Метод получения доступных операций по данному метаданных.
            </summary>
            <returns>Возвращает список перечисление операций.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObjectDescriptor.#ctor">
            <summary>
            Конструтор класса NsgObjectDescriptor по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.#ctor(NsgSoft.DataObjects.NsgDataRegister,NsgSoft.DataObjects.HandlingParams)">
            <summary>
            Конструктор
            </summary>
            <param name="Register">Регистр по которому беруться остатки и делаются движения. Должен быть создан
            конструктором с передачей документа, совершающего движения</param>
            <param name="HandlingParams">Параметры проведения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.#ctor(NsgSoft.DataObjects.INsgTable)">
            <summary>
            Конструктор
            </summary>
            <param name="Table">Таблица значений</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.#ctor(NsgSoft.DataObjects.NsgDataRegister,NsgSoft.DataObjects.INsgTable,NsgSoft.DataObjects.HandlingParams)">
            <summary>
            Конструктор
            </summary>
            <param name="Register">Регистр по которому беруться остатки и делаются движения. Должен быть создан
            конструктором с передачей документа, совершающего движения</param>
            <param name="Table">Таблица значений</param>
            <param name="HandlingParams">Параметры проведения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.#ctor(NsgSoft.DataObjects.NsgDataRegister,NsgSoft.DataObjects.INsgTable)">
            <summary>
            Конструктор
            </summary>
            <param name="Register">Регистр по которому беруться остатки и делаются движения. Должен быть создан
            конструктором с передачей документа, совершающего движения</param>
            <param name="Table">Таблица значений</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgRegisterMovement.Document">
            <summary>
            Документ, проводящий движения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgRegisterMovement.HandlingParams">
            <summary>
            Параметры проведения
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.HandlingCompare">
            <summary>
            Условие на проведение строки, если не выполняется строка будет пропущена
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.HandlingErrorCompare">
            <summary>
            Условие на проведение строки, если не выполняется будет выдана ошибка
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.HandlingWarningCompare">
            <summary>
            Условие на проведение строки, если не выполняется будет выдано предупреждение
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.AdditionalRegisters">
            <summary>
            Дополнтельные регистры
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgRegisterMovement.Register">
            <summary>
            Регистр, для проведения движений, при присвоении сбрасываются все настройки и значения класса
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.Reset">
            <summary>
            Сбросить настройки
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgRegisterMovement.Table">
            <summary>
            Таблица значений
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.ReserveArgumentName">
            <summary>
            Имя реквизита, по которому ищется и списывается резерв
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.DocumentRowName">
            <summary>
            Имя колонки в таблице движений регистра, в которой будет хранится ссылка на строку документа, сформировавшую движение.
            Если в процессе проведения в таблице окажется колонка с таким именем, то будет создано новое имя, и изменена эта переменная
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.AdditionalDistributedColumns">
            <summary>
            Дополнительные распределяемые колонки, которых нет в регистре, но они есть в исходной таблице
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.AdditionalColumns">
            <summary>
            Дополнительные колонки, которых нет в регистре, но они есть в исходной таблице
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.NegativeValues">
            <summary>
            Значения, проставляемые при отрицательном остатке
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.RegisterTable">
            <summary>
            Таблица движений регистра
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.RestsTable">
            <summary>
            Таблица остатков, содержит остатки после проведения документа
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.DataFilled">
            <summary>
            Флаг заполненности данных, сбрасывается при присвоении регистра и проставляется после FillData
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.RestsFilled">
            <summary>
            Флаг заполненности остатков, сбрасывается при присвоении регистра и проставляется после FillRests
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.DataPosted">
            <summary>
            Флаг примененности движений регистра, сбрасывается при присвоении регистра и FillData и проставляется после PostData
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgRegisterMovement.AllowNegativeRests">
            <summary>
            Флаг разрешения отрицательных остатков, сбрасывается при присвоении регистра и проставляется после FillRests и FillData
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.KoefficientName">
            <summary>
            Имя (в документе/таблице) распределяемого коэффициента для количества
            </summary>
            <remarks>Например, для регистра ОстаткиНоменклатуры это Коэффициент</remarks>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.StornoDocumentName">
            <summary>
            Имя (в документе/таблице) сторнируемого документа
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.QuantityName">
            <summary>
            Имя (в регистре) распределяемого количества
            </summary>
            <remarks>Например, для регистра ОстаткиНоменклатуры это Количество</remarks>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.RenameColumns">
            <summary>
            Таблица переименований колонок, соответсвие имени в документе/таблице имени в регистре (Имя в регистре = Имя в таблице)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.NegativeRestsMessage">
            <summary>
            Шаблон сообщения о недостаточном количестве распределяемого
            </summary>
            <remarks>Например, для регистра ОстаткиНоменклатуры "На складе {СкладОтправитель} нет необходимого количества {_NegativeRest} {Единица} товара {Номенклатура}."</remarks>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.RestsMessage">
            <summary>
            Шаблон сообщения об остатке на складе
            </summary>
            <remarks>Например, для регистра ОстаткиНоменклатуры "В наличии {_Rest} {Единица}."</remarks>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.ReservedMessage">
            <summary>
            Шаблон сообщения о резерве на складе
            </summary>
            <remarks>Например, для регистра ОстаткиНоменклатуры "Зарезервированно {_Reserved} {Единица}."</remarks>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.ExpectedMessage">
            <summary>
            Шаблон сообщения об ожидаемом поступлении
            </summary>
            <remarks>Например, для регистра ОстаткиНоменклатуры "Ожидается поступление {_Expected} {Единица}."</remarks>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.RowErrorMessage">
            <summary>
            Шаблон сообщения об ошибке в исходной строке
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.InvalidStornoMessage">
            <summary>
            Шаблон сообщения о недостаточном сторнируемом количестве
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.RowWarningMessage">
            <summary>
            Шаблон сообщения о предупреждении в исходной строке
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.ReserveStornoMessage">
            <summary>
            Шаблон сообщения о списании из резерва
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.Errors">
            <summary>
            Ошибки, возникшие при заполнении данных
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterMovement.Warnings">
            <summary>
            Предупреждения, возникшие при заполнении данных
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.tableRekvisitName(System.String)">
            <summary>
            Получение имени реквизита таблицы, соответсвующего реквизиту регистра
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.GetNeededColumns">
            <summary>
            Возвращает имена колонок, которые необходимы для проведения, состоит из DestributedNames, DestributedQuantityName, DestributedQuantityKoefficientName ...
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.CheckRegister">
            <summary>
            Проверка регистра
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.FillRests">
            <summary>
            Заполнение таблицы остатков
            </summary>
            <returns>True если нет ошибок, иначе список ошибок в this.Errors</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.SortRests(NsgSoft.DataObjects.NsgDataRegister,NsgSoft.DataObjects.NsgMemoryTable)">
            <summary>
            Метод сортировки таблицы остатков
            </summary>
            <param name="register">Регистр</param>
            <param name="RestsTable">Таблица остатков</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.GetRestsGrouping(NsgSoft.DataObjects.NsgDataRegister)">
            <summary>
            Метод формирования списка измерений, по которым должны группироваться результаты остатков
            </summary>
            <param name="register">Регистр</param>
            <returns>Список измерений</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.GetRestsCompare(NsgSoft.DataObjects.NsgDataRegister,NsgSoft.Common.NsgRenameTable)">
            <summary>
            Метод создания условия для получения остатков по регистру
            </summary>
            <param name="register">Регистр</param>
            <param name="renameTable">Таблица переименований реквизитов</param>
            <returns>Условие для выборки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.addErrors(NsgSoft.DataObjects.NsgRegisterMovement)">
            <summary>
            Добавление ошибок дополнительного регистра в список
            </summary>
            <param name="mov"></param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgRegisterMovement.isStorno">
            <summary>
            Флаг сторнирования
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgRegisterMovement.registerSign">
            <summary>
            Знак движения по регистру
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.FillData">
            <summary>
            Заполнение таблицы движений регистра
            </summary>
            <returns>True если нет ошибок, иначе список ошибок в this.Errors</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.GetRestQuantity(NsgSoft.DataObjects.NsgMemoryTableRow)">
            <summary>
            Возвращает количество остатка из строки остатка
            </summary>
            <param name="rest">Строка таблицы остатков</param>
            <returns>Количество остатка</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.GetReserveArgument(NsgSoft.DataObjects.NsgMemoryTableRow)">
            <summary>
            Возвращает аргумент аргумент по которому списывается резерв
            </summary>
            <param name="rest">Строка таблицы остатков</param>
            <returns>Аргумент резерва</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.GetRestsForRow(NsgSoft.DataObjects.INsgDataTableRow)">
            <summary>
            Возвращает остатки из таблицы остатков для строки исходной таблицы
            </summary>
            <param name="row">Строка исходной таблицы</param>
            <returns>Сстатки</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgRegisterMovement.NegativeRestEventHandler">
            <summary>
            Делегат получения движения при отрицательном остатке.
            </summary>
            <param name="sender">Источник.</param>
            <param name="tools">Заполненная строка движения.</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgRegisterMovement.NegativeRest">
            <summary>
            Получение движения при отрицательном остатке.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgRegisterMovement.ProcessRowEventHandler">
            <summary>
            Делегат получения движения при обработке строки документа.
            </summary>
            <param name="sender">Источник.</param>
            <param name="tools">Заполненные строки движения.</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgRegisterMovement.ProcessRow">
            <summary>
            Получение движения при обработке строки документа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.Execute(NsgSoft.DataObjects.HandlingParams)">
            <summary>
            Выполнить действия в соответсвии с заданными параментрами
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.Execute">
            <summary>
            Выполнить действия в соответсвии с заданными параментрами
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.PostData">
            <summary>
            Запись значений в регистр
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.ShowMessages">
            <summary>
            Вывод сообщений
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.PostData(NsgSoft.Common.NsgRenameTable)">
            <summary>
            Запись значений в регистр
            </summary>
            <param name="rename">Таблица переименований из регистра в заполненной таблицы движений</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.AddNegativeValue(System.String,System.Object)">
            <summary>
            Добавить значение для заполнения отрицательны остатков
            </summary>
            <param name="ColumnName">Имя измерения</param>
            <param name="Value">Значение</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.AddAdditionalRegister(System.String,NsgSoft.DataObjects.HandlingParams)">
            <summary>
            Добавление вспомогательного регистра
            </summary>
            <param name="RegisterName">Имя регистра</param>
            <param name="Params">Параметры проведения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.GetResourcesNames">
            <summary>
            Получить имена ресурсов регистра
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.Collapse(System.String[])">
            <summary>
            Свернуть таблицу движений по полям, все ресурсы будут добавлены в суммируемые поля
            </summary>
            <param name="fields">Поля, по которым сворачивать</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterMovement.Collapse(System.String[],System.String[],System.String[],System.Boolean)">
            <summary>
            Свернуть таблицу движений
            </summary>
            <param name="collapsedFields">Поля, по которым сворачивать</param>
            <param name="sumFields">Поля, по которым суммировать</param>
            <param name="excludeFields">Исключить поля из суммирования</param>
            <param name="sumResources">Добавить ресурсы регистра к суммируемым полям</param>
        </member>
        <member name="F:NsgSoft.DataObjects.HandlingParams.None">
            <summary>
            Простое проведение
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.HandlingParams.CalcRests">
            <summary>
            Списывать по остаткам
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.HandlingParams.ReverseNegativeRests">
            <summary>
            Списывать по остатким и сторнировать отрицательные остатки
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.HandlingParams.AllowNegаtiveRests">
            <summary>
            Разрешить отрицательные остатки
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.HandlingParams.IncreaseRests">
            <summary>
            Уменьшить остатки в определении возможности проведения
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.HandlingParams.DecreaseRests">
            <summary>
            Уменьшить остатки в определении возможности проведения
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.HandlingParams.FillMovements">
            <summary>
            Заполнить движения
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.HandlingParams.Handle">
            <summary>
            Провести движения
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.HandlingParams.Return">
            <summary>
            Возврат
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.HandlingParams.Storno">
            <summary>
            Сторнировать движения
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.HandlingParams.AddMovements">
            <summary>
            Добавить движения к существующим
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgHandlingWarnings.None">
            <summary>
            Никаких предупреждений
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgHandlingWarnings.NegativeRests">
            <summary>
            Предупреждать об отрицательных остатках
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgHandlingWarnings.Other">
            <summary>
            
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgSimpleObject">
            <summary>
            Абстрактный класс простого логического объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._FIELDNAME">
            <summary>
            Имя физичекого объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._INDEXTYPE">
            <summary>
            Тип индекса.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._SUBTYPE">
            <summary>
            Тип реквизита для объекта "Регистр".
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._NULLALLOW">
            <summary>
            Разрешать ли вставлять пустые значения в базу.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._SAVE_IN_DATABASE">
            <summary>
            Определяет, нужно ли хранить данное поле в базе данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._PERIODIC_TYPE">
            <summary>
            Определяет, является ли реквизит периодическим, и если да, то как хранится.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._INCLUDE_IN_PREDEFINED">
            <summary>
            Определяет, является ли реквизит предопределенным.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._VIRTUAL_CONTAINERS">
            <summary>
            Список виртуальных полей, в которых участвует объект.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._INFORM_METADATA_ON_VALUE_CHANGED">
            <summary>
            Вызавать метод у метаданных OnBeforeObjectListPropertyChanged
             в случае изменения значения данного объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._REQUIRED">
            <summary>
            Обязательный реквизит.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._EMPTY_VALUE">
            <summary>
            Пустое значение.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._CHARACTERISTIC_COMPARE_TYPE">
            <summary>
            Тип сравнения для использования в качестве измерения в регистре характеристик.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._CHARACTERISTIC_WEIGHT">
            <summary>
            Вес сравнения для использования в качестве измерения в регистре характеристик.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObject._REGISTERDISTRIBUTIONTYPE">
            <summary>
            
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.#ctor">
            <summary>
            Конструктор абстрактного класса простого логического объекта по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.#ctor(System.String)">
            <summary>
            Конструктор абстрактного класса простого логического объекта.
            </summary>
            <param name="name">Имя простого логического объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор абстрактного класса простого логического объекта данных из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="root">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.Finalize">
            <summary>
            Деструктор класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.StringFormat">
            <summary>
            Формат представления в строке.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.NullValue">
            <summary>
            Пустое значение объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.SubType">
            <summary>
            Получение и установка признака реквизита в Регистре.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.Standard">
            <summary>
            Получение эталонного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.IncludeInPredefined">
            <summary>
            Флаг включения реквизита в предопределенныое значение
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.VirtualContainers">
            <summary>
            Список виртуальных полей, в которых участвует объект.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.CanBeUsedInPredefined">
            <summary>
            Флаг возможности использования данного реквизита в предопределенных значениях.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.PeriodicType">
            <summary>
            TODO: Кучмасов комменты
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.IsPeriodic">
            <summary>
            TODO: Кучмасов комменты
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.isValidInContext">
            <summary>
            РПизнак применимости объекта в данном контексте, например реквизит группы справочника в элементе справочника.
            </summary>
            <returns></returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.Required">
            <summary>
            Обязательный реквизит.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.EmptyValue">
            <summary>
            Получение и установка отображения пустого значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.PeriodicTable">
            <summary>
            таблица базы данных для хранения периодических значений.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.IsModify">
            <summary>
            Флаг изменений в объекте.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.NullAllow">
            <summary>
            разрешать ли вставлять пустые значения в базу
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.IndexType">
            <summary>
            Получение типа индекса объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.Self">
            <summary>
            Для конфигуратора выбор типа объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.FieldName">
            <summary>
            Получение и установка имени физичекого объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.FullName">
            <summary>
            Получение полное имени логического объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.DatabaseManager">
            <summary>
            Получение объекта доступа к базе данных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.MetaData">
            <summary>
            Получение объекта доступа к метаданным.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.SaveInDatabase">
            <summary>
            Определяет нужно ли хранить данное поле в базе данных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.ReadOnly">
            <summary>
            Флаг запрета изменения значения свойства.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.NameForObjectList">
            <summary>
            TODO: Кучмасов комменты
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.IsCodeGenerationNeeded">
            <summary>
            TODO: Кучмасов комменты
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.RegisterDistributionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.CharacteristicCompareType">
            <summary>
            Тип сравнения для использования в качестве измерения в регистре характеристик.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.CharactericticWeight">
            <summary>
            Вес сравнения для использования в качестве измерения в регистре характеристик
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSimpleObject.InformMetaDataOnValueChanged">
            <summary>
            Вызавать метод у метаданных OnBeforeObjectListPropertyChanged и OnAfterObjectListPropertyChanged в случае изменения значения данного объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.Validate">
            <summary>
            Метод проверки значения реквизита
            </summary>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.GetDescriptor">
            <summary>
            Метод получения описателя для объекта.
            </summary>
            <returns>Возвращает описатель объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.CopyProperies(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Копирует значения свойств из переданного объекта.
            </summary>
            <param name="from">объект из которого копировать</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.GetSortingParam">
            <summary>
            Метод получения параметра сортировки на основе данного реквизита.
            </summary>
            <returns>Параметр сортировки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.GetSortingParam(NsgSoft.Database.NsgSortDirection)">
            <summary>
            Метод получения параметра сортировки на основе данного реквизита.
            </summary>
            <param name="direct">Направление сортировки.</param>
            <returns>Параметр сортировки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.GetCompareParam">
            <summary>
            Метод получения параметра сравнения на основе данного реквизита.
            </summary>
            <returns>Параметр сортировки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.GetCompareParam(System.Object)">
            <summary>
            Метод получения параметра сравнения на основе данного реквизита.
            </summary>
            <param name="inValue">Значение для сравнения.</param>
            <returns>Параметр сортировки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.GetCompareParam(System.Object,NsgSoft.Database.NsgComparison)">
            <summary>
            Метод получения параметра сравнения на основе данного реквизита.
            </summary>
            <param name="inValue">Значение для сравнения.</param>
            <param name="inCompOperator">Оператор сравнения.</param>
            <returns>Параметр сортировки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.ToString">
            <summary>
            Метод приведения к строке.
            </summary>
            <returns>Строковое представление.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.OnToString(System.String)">
            <summary>
            Обработка преобразования к строке
            </summary>
            <param name="Text">результат внтреннего преобразования</param>
            <returns>результат</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.ToDBField">
            <summary>
            Преобразование в вид для параметров поиска БД.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.ToDBField(System.Boolean)">
            <summary>
            Метод преобразования объекта к полю базы данных.
            </summary>
            <returns>Список заполненных полей БД.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.ToDBField(System.Object)">
            <summary>
            Метод преобразования объекта к полю базы данных.
            </summary>
            <param name="initialValue">Значение для инициализации поля.</param>
            <returns>Список заполненных полей БД.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.ToDBQueue(System.Collections.Generic.Queue{NsgSoft.Database.NsgDBField})">
            <summary>
            Метод добавления объекта в очередь
            </summary>
            <param name="dbQueue">Очередь</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.FromDBQueue(System.Collections.Generic.Queue{NsgSoft.Database.NsgDBField})">
            <summary>
            Метод извлечения объекта из очереди
            </summary>
            <param name="dbQueue">Очередь</param>
            <returns>Возвращает кол-во извлеченных полей из очереди</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.SplitString(System.String)">
            <summary>
            Метод разделения строки на части.
            </summary>
            <param name="curValue">Строка для разделения.</param>
            <returns>Массив отдельных строк.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.FromDBField(NsgSoft.Database.NsgDBField)">
            <summary>
            Метод получения объекта из поля БД.
            </summary>
            <param name="dbFields">Поле БД.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.Compare(System.Object)">
            <summary>
            Сравнение объекта с переданным объектом.
            </summary>
            <param name="obj">Объект с которым прорисходит сравнение.</param>
            <returns>Возвращает меньше ноля, если this меньше obj,
             ноль, если this равен obj,
             больше ноля, если this больше obj.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.OnAfterRename(System.String)">
            <summary>
            Вызывается после изменение имени объекта.
            </summary>
            <param name="oldName">Старое имя.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.LoadDataFromXML(System.Xml.XmlReader)">
            <summary>
            Восстановить значение объекта и всех его свойств из XML
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSimpleObject.GetAllowedNsgComparisonTypes(NsgSoft.DataObjects.NsgSimpleObject.AllowedComparisonTypesFlag)">
            <summary>
            Допустимые типы фильтров для 
            </summary>
            <returns></returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataForm">
            <summary>
            Класс простого элемента данных - Форма.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataForm._FORM_CLASS_NAME">
            <summary>
            Имя класса формы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.#ctor">
            <summary>
            Конструктор абстрактного класса логического объекта данных 
             для использования в сгенерированных объектах.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.#ctor(System.String)">
            <summary>
            Конструктор класса Ссылка по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Строка из XML.
            </summary>
            <param name="elem">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataForm.FormClassName">
            <summary>
            Полный путь к данной ссылке в виде 
            "ИмяКонфигурации.ИмяМетаданных.ИмяОбъекта.ИмяСсылки"
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataForm.SaveInDatabase">
            <summary>
            Признак, является ли данное поле хранимым в БД. Для данного типа - всегда false.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataForm.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataForm.Value">
            <summary>
            Значение ссылки. Преедставляет из себя уже созданную форму.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataForm.TypeLocalName">
            <summary>
            Локализованное название типа
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.ResetValue">
            <summary>
            Очистить значение. Для данного типа никаких действий не выполняет.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.CreateForm">
            <summary>
            Метод создания формы.
            </summary>
            <returns>Возвращает форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.GetInitializeCode(System.String)">
            <summary>
            Сгенерировать код C# для данной ссылки
            </summary>
            <param name="ObjectName"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataForm.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataTableReference">
            <summary>
            Класс простого элемента данных - Таблица документа или справочника.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableReference.#ctor">
            <summary>
            Конструктор абстрактного класса логического объекта данных 
             для использования в сгенерированных объектах.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableReference.#ctor(System.String)">
            <summary>
            Конструктор класса Ссылка по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableReference.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Ссылка по полному имени объекта для ссылки.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
            <param name="inReferentFullName">Полное имя объекта для ссылки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableReference.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Строка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableReference.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableReference.ClassName">
            <summary>
            Имя класса в кодогенерации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableReference.TableName">
            <summary>
            Получение и установка имени таблицы базы данных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableReference.DbManagerForConfigurator">
            <summary>
            Получение и установка имени базы данных из Конфигуратора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableReference.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableReference.Validate">
            <summary>
            Метод проверки значения реквизита
            </summary>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableReference.LoadDataFromXML(System.Xml.XmlReader)">
            <summary>
            Восстановить значение объекта и всех его свойств из XML
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableReference.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableReference.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableReference.SaveInDatabase">
            <summary>
            Признак, является ли данное поле хранимым в БД. Для данного типа - всегда false.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataAggregate">
            <summary>
            Класс простого элемента данных - Агрегатные значения.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataAggregate._REFERENT_NAME">
            <summary>
            Имя таблицы, по которой будет вычисляться итог.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataAggregate._REFERENT_FIELDNAME">
            <summary>
            Имя поля таблицы, по которому будет вычисляться итог.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAggregate.#ctor">
            <summary>
            Конструктор класса по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAggregate.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Конструктор класса с указанием длины и точности чисел.
            </summary>
            <param name="name">Имя логического объекта.</param>
            <param name="inLength">Длина целой части.</param>
            <param name="inPrecision">Точность после запятой.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAggregate.#ctor(System.String)">
            <summary>
            Конструктор класса с указанием имени.
            </summary>
            <param name="name">Имя логического объекта.</param>
            <param name="inLength">Длина целой части.</param>
            <param name="inPrecision">Точность после запятой.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAggregate.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Вещественное число из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAggregate.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.ReferentName">
            <summary>
            Имя таблицы по которой будет вычисляться итог
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.ReferentFieldName">
            <summary>
            Имя поля таблицы по которому будет вычисляться итог
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.Max">
            <summary>
            Получение и установка Максимума.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.Min">
            <summary>
            Получение и установка Минимума.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.Avg">
            <summary>
            Получение и установка среднего
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.Count">
            <summary>
            Получение и установка количества
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.Sum">
            <summary>
            Получение и установка суммы
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.Stdev">
            <summary>
            Получение и установка Статистическое среднеквадратичное отклонение 
            для всех значений выражения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.Stdevp">
            <summary>
            Получение и установка Статистическое среднеквадратичное отклонение 
            для заполнения по всем значениям выражения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.Var">
            <summary>
            Получение и установка Статистическая дисперсия для всех значений выражения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.Varp">
            <summary>
            Получение и установка Статистическая дисперсия 
            для заполнения по всем значениям выражения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAggregate.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAggregate.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.Root">
            <summary>
            Получение объекта-владелеца.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.Value">
            <summary>
            Значение как таковое для данного класса смысла не имеет, т.к. он содержит в себе множество значений.
            Однако, Value можно присваивать, передавая в него NsgDataAgregate. В этом случае, все значения будут скопированы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAggregate.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAggregate.ToDBField">
            <summary>
            Метод преобразования объекта к полю базы данных.
            </summary>
            <returns>Структуру, хранящую информацию о поле БД</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAggregate.SaveInDatabase">
            <summary>
            Определяет, хранится ли данной поле в БД.
             Возвращает true, если задан referentName
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAggregate.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAggregate.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataCirculation">
            <summary>
            Класс простого элемента данных - Оборот по ресурсу регистра.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.#ctor">
            <summary>
            Конструктор класса по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Конструктор класса с указанием длины и точности чисел.
            </summary>
            <param name="name">Имя логического объекта.</param>
            <param name="inLength">Длина целой части.</param>
            <param name="inPrecision">Точность после запятой.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.#ctor(System.String)">
            <summary>
            Конструктор класса с указанием имени.
            </summary>
            <param name="name">Имя логического объекта.</param>
            <param name="inLength">Длина целой части.</param>
            <param name="inPrecision">Точность после запятой.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Вещественное число из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataCirculation.Value">
            <summary>
            Получение суммарного значения Приход - Расход.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataCirculation.Sum">
            <summary>
            Получение суммарного значения Приход - Расход.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataCirculation.Credit">
            <summary>
            Получение и установка Прихода.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataCirculation.Debit">
            <summary>
            Получение и установка Расхода.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataCirculation.Begin">
            <summary>
            Получение и установка остатка на начало периода
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataCirculation.End">
            <summary>
            Получение и установка остатка на конец периода
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataCirculation.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.FromDBField(NsgSoft.Database.NsgDBField)">
            <summary>
            Метод получения объекта из поля БД.
            </summary>
            <param name="dbFields">Поле БД.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.ToDBField">
            <summary>
            Метод преобразования объекта к полю базы данных.
            </summary>
            <returns>Список заполненных полей БД.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.CompareTo(System.Object)">
            <summary>
            Сравнение объекта с переданным объектом.
            </summary>
            <param name="obj">Объект с которым прорисходит сравнение.</param>
            <returns>Возвращает меньше ноля, если this меньше obj,
             ноль, если this равен obj,
             больше ноля, если this больше obj.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.Increment(System.Object)">
            <summary>
            Увеличивает значение Value на переданное значение
             Имеет смысл только для числовых типов данных.
            </summary>
            <param name="inValue"> Оборот по ресурсу регистра.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.Multiply(System.Object)">
            <summary>
            умнажает значение Value на переданное значение
            </summary>
            <param name="inValue"> множитель</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.Decrement(System.Object)">
            <summary>
            Уменьшает значение Value на переданное значение
             Имеет смысл только для числовых типов данных.
            </summary>
            <param name="inValue"> Оборот по ресурсу регистра.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataCirculation.ToString">
            <summary>
            Вывод строкового представления объекта
            </summary>
            <returns>Строковое представление</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataEnumReference">
            <summary>
            Класс простого элемента данных - Типизированная Ссылка на NsgDataEnum
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumReference.#ctor">
            <summary>
            Конструктор класса Ссылка по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumReference.#ctor(System.String)">
            <summary>
            Конструктор класса Ссылка по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumReference.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Ссылка по полному имени объекта для ссылки.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
            <param name="inReferentFullName">Полное имя объекта для ссылки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumReference.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Ссылка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumReference.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataEnumReference.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataEnumReference.Value">
            <summary>
            Получение и установка значения.
             В качестве значения может быть только Guid или null.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumReference.ValueType">
            <summary>
            Используется в кодогенерации.
             Возвращает тип значения соответствующего свойства сгенерированного объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumReference.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumReference.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumReference.LoadDataFromXML(System.Xml.XmlReader)">
            <summary>
            Восстановить значение объекта и всех его свойств из XML
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataObject">
            <summary>
            Класс простого элемента данных - Произвольный объект.
            Сериализация в XML
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.#ctor">
            <summary>
            Конструктор класса по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.#ctor(System.Object)">
            <summary>
            Конструктор класса с передачей значения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.#ctor(System.String)">
            <summary>
            Конструктор класса по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Строка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObject.CanBeUsedInPredefined">
            <summary>
            Флаг возможности использования данного реквизита в предопределенных значениях.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObject.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObject.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.ToColumns">
            <summary>
            TODO: Comment
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.FromDBField(NsgSoft.Database.NsgDBField)">
            <summary>
            TODO: Comment
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.GetDescriptor">
            <summary>
            Метод получения описателя для объекта.
            </summary>
            <returns>Возвращает описатель объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.ToDBField">
            <summary>
            Метод преобразования объекта к полю базы данных.
            </summary>
            <returns>Список заполненных полей БД.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.ToXML">
            <summary>
            Сохранение объекта в XML если он реализует интерфейс INsgXMLSerializable
            </summary>
            <returns>Строка, содержащая XML</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObject.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataGuid">
            <summary>
            Класс простого элемента данных - Уникальный идентификатор.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataGuid.#ctor">
            <summary>
            Конструктор класса уникальный идентификатор по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataGuid.#ctor(System.String)">
            <summary>
            Конструктор класса уникальный идентификатор.
            </summary>
            <param name="name">Имя логического объекта уникальный идентификатор.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataGuid.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataGuid.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataGuid.NullValue">
            <summary>
            Пустое значение объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataGuid.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataGuid.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataGuid.Validate">
            <summary>
            Метод проверки значения реквизита
            </summary>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataGuid.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataGuid.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataGuid.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataGuid.Compare(System.Object)">
            <summary>
            Сравнение объекта с переданным объектом.
            </summary>
            <param name="obj">Объект с которым прорисходит сравнение.</param>
            <returns>Возвращает меньше ноля, если this меньше obj,
             ноль, если this равен obj,
             больше ноля, если this больше obj.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataGuid.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataIndex">
            <summary>
            Класс простого элемента данных - Индекс.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataIndex._REQUISITE_LIST">
            <summary>
            Cписок индексируемых реквизитов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.#ctor">
            <summary>
            Конструктор класса Строка по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.#ctor(System.String)">
            <summary>
            Конструктор класса Строка по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Индекс.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Строка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataIndex.RequisiteList">
            <summary>
            Получение и установка строки индексируемых реквизитов.
             Задаются через запятую без пробелов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataIndex.FieldList">
            <summary>
            Получение списка индексируемых реквизитов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataIndex.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataIndex.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataIndex.SaveInDatabase">
            <summary>
            Признак, является ли данное поле хранимым в БД. Для данного типа - всегда false.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Переопределенный метод сохранения атрибутов элемента данных.
            </summary>
            <param name="writer">Объект записи XML текста.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Переопределенный метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataIndex.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataByte.#ctor">
            <summary>
            Конструктор класса Целое число по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataByte.#ctor(System.String)">
            <summary>
            Конструктор класса Целое число.
            </summary>
            <param name="name">Имя логического объекта Целое число.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataByte.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Вещественное число из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataByte.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataByte.Length">
            <summary>
            Получение и установка длины
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataByte.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataByte.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataByte.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataByte.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataByte.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:NsgSoft.DataObjects.NsgDataByte.Compare(System.Object)" -->
        <member name="M:NsgSoft.DataObjects.NsgDataByte.Increment(System.Object)">
            <summary>
            Увеличивает значение Value на переданное значение
            Имеет смысл только для числовых типов данных.
            </summary>
            <param name="inValue">число</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataByte.Decrement(System.Object)">
            <summary>
            Уменьшает значение Value на переданное значение
            Имеет смысл только для числовых типов данных.
            </summary>
            <param name="inValue">число</param>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataPredefinedReference._REQUISITE_VALUES">
            <summary>
            Имя группы для объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPredefinedReference.#ctor">
            <summary>
            Конструктор класса Ссылка по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPredefinedReference.#ctor(System.String)">
            <summary>
            Конструктор класса Ссылка по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPredefinedReference.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Ссылка по полному имени объекта для ссылки.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
            <param name="inReferentFullName">Полное имя объекта для ссылки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPredefinedReference.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Строка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataPredefinedReference.SaveInDatabase">
            <summary>
            Признак, является ли данное поле хранимым в БД. Для данного типа - всегда false.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataPredefinedReference.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPredefinedReference.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPredefinedReference.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPredefinedReference.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPredefinedReference.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataEnumElement">
            <summary>
            Класс простого элемента данных - Элемент перечисления.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataEnumElement._ENUM_INDEX">
            <summary>
            Индекс элемента.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.#ctor">
            <summary>
            Конструктор класса Строка по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.#ctor(System.String)">
            <summary>
            Конструктор класса Строка по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Строка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.#ctor(System.String,System.Int32)">
            <summary>
            Конструктор класса элемент перечисления.
            </summary>
            <param name="name">Имя логического объекта.</param>
            <param name="inLength">Индекс элемента перечисления.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Строка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataEnumElement.Index">
            <summary>
            Получение и установка индекса элемента.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataEnumElement.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataEnumElement.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataEnumElement.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgRegisterTable">
            <summary>
            Класс простого элемента данных - Таблица регистра.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterTable.#ctor(System.String)">
            <summary>
            Конструктор класса Ссылка по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterTable.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Ссылка по полному имени объекта для ссылки.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
            <param name="inReferentFullName">Полное имя объекта для ссылки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterTable.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Строка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterTable.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterTable.#ctor">
            <summary>
            Конструктор абстрактного класса логического объекта данных 
            для использования в сгенерированных объектах.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgRegisterTable.RegisterPeriod">
            <summary>
            Получение и установка вида периода.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgRegisterTable.RegisterPeriodCount">
            <summary>
            Получение и установка длины строки в символах.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgRegisterTable.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterTable.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterTable.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterTable.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterTable.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterTable.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgRegisterTable.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataPeriod">
            <summary>
            Класс простого элемента данных - Временной период.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPeriod.#ctor">
            <summary>
            Конструктор класса Период по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPeriod.#ctor(System.String)">
            <summary>
            Конструктор класса Период.
            </summary>
            <param name="name">Имя логического объекта Период.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPeriod.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Период из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPeriod.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataPeriod.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataPeriod.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPeriod.Validate">
            <summary>
            Метод проверки значения реквизита
            </summary>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPeriod.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPeriod.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPeriod.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataPeriod.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:NsgSoft.DataObjects.NsgDataPeriod.Compare(System.Object)" -->
        <member name="M:NsgSoft.DataObjects.NsgDataPeriod.OnToString(System.String)">
            <summary>
            Обработка преобразования к строке
            </summary>
            <param name="Text">результат внтреннего преобразования</param>
            <returns>результат</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgObjectSelector">
            <summary>
            Класс простого элемента данных - выбор объекта метаданных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.#ctor">
            <summary>
            Конструктор класса выбор объекта метаданных
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.#ctor(System.String)">
            <summary>
            Конструктор класса выбор объекта метаданных по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.#ctor(System.String,NsgSoft.DataObjects.NsgObjectsFilter)">
            <summary>
            Конструктор класса Нетипизированная Ссылка.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Нетипизированная Ссылка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectSelector._TYPE_SELECTOR_NAME">
            <summary>
            Поле того же MultipleObject, которое является владельцем относительно данного поля.
             Например, для поля РасчетныйСчет - Контрагент.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectSelector._REFERENT_FILTER">
            <summary>
            Фильтр объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectSelector.FilterTypeForConfigurator">
            <summary>
            Тип фильтра для конфигуратора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectSelector.FilterForConfigurator">
            <summary>
            Получение списка фильтров для конфигуратора
            </summary>
            [NsgView(NsgViewTypes.Configurator)]
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectSelector.ReferentsList">
            <summary>
            Получение списка объектов ссылки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectSelector.ReferentFilter">
            <summary>
            Метод получения фильтра для объекта в режиме Конфигуратора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectSelector.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.GetDescriptor">
            <summary>
            Метод получения описателя для объекта.
            </summary>
            <returns>Возвращает описатель объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.IsFilteredIn(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод проверки вхождения объекта в условия фильтра.
            </summary>
            <param name="obj">Проверяемый объект.</param>
            <returns>Возвращает true при удачной проверке, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.LoadContent(System.Xml.XmlElement)">
            <summary>
            Метод загрузки объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.SaveContent(System.Configuration.ConfigXmlDocument)">
            <summary>
            Метод записи объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectSelector.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCursorSortingParam">
            <summary>
            Класс параметр сортировки в курсоре.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursorSortingParam.#ctor(NsgSoft.DataObjects.NsgSimpleObject,NsgSoft.Database.NsgSortDirection)">
            <summary>
            Конструктор класса Параметр сортировки.
            </summary>
            <param name="inObj">Объект как параметр сортировки.</param>
            <param name="inDirect">Направление сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursorSortingParam.#ctor(System.String,NsgSoft.Database.NsgSortDirection)">
            <summary>
            Конструктор класса Параметр сортировки.
            </summary>
            <param name="inName">Имя параметра сортировки.</param>
            <param name="inDirect">Направление сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursorSortingParam.#ctor(NsgSoft.Common.NsgDataFixedFields,NsgSoft.Database.NsgSortDirection)">
            <summary>
            Конструктор класса Параметр сортировки.
            </summary>
            <param name="inID">Идентификатор параметра сортировки.</param>
            <param name="inDirect">Направление сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursorSortingParam.#ctor(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Конструктор класса Параметр сортировки c направлением по умолчанию.
            </summary>
            <param name="inName">Имя параметра сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursorSortingParam.#ctor(System.String)">
            <summary>
            Конструктор класса Параметр сортировки c направлением по умолчанию.
            </summary>
            <param name="inName">Имя параметра сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursorSortingParam.#ctor(NsgSoft.Common.NsgDataFixedFields)">
            <summary>
            Конструктор класса Параметр сортировки c направлением по умолчанию.
            </summary>
            <param name="inDirect">Направление сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursorSortingParam.#ctor(NsgSoft.DataObjects.NsgSortingParam)">
            <summary>
            Создание объекта сортировки из объекта базового класса.
            </summary>
            <param name="nsp"></param>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.Updated">
            <summary>
            Время последнего обновления
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.actualPeriod">
            Период обновления
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.lifePeriod">
            Время жизни
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.InQueue">
            <summary>
            Объект в очереди на обноление
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.NeedSyncReload">
            <summary>
            Необходимо ли синхронное перечитывание, в случае если значение еще не получено.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.NeedReload">
            <summary>
            Необходимо ли перечитывание
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.Outdated">
            <summary>
            Moжно ли удалять
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.ActualPeriod">
            <summary>
            Период обновления
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.LifePeriod">
            <summary>
            Время жизни
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.Delete">
            <summary>
            Удаление значений
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.Actualize">
            <summary>
            Акутуализация объекта, должна вызываться в параллельном потоке
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.GetValue(System.Guid)">
            <summary>
            Получение значения
            </summary>
            <param name="ID">Идентифкатор значения</param>
            <returns>Значение</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.Contains(System.Guid)">
            <summary>
            Проверка наличия значения
            </summary>
            <param name="ID">Идентифкатор значения</param>
            <returns>Флаг наличия значения</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.UpdateValue(System.Guid,System.Object)">
            <summary>
            Обновление значения
            </summary>
            <param name="ID">Идентифкатор значения</param>
            <param name="value">Значение</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.actualize">
            <summary>
            Акутуализация объекта, должна вызываться в параллельном потоке
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.delete">
            <summary>
            уделение объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.getValue(System.Guid)">
            <summary>
            Получение значения
            </summary>
            <param name="ID">Идентифкатор значения</param>
            <returns>Значение</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.contains(System.Guid)">
            <summary>
            Проверка наличия значения
            </summary>
            <param name="ID">Идентифкатор значения</param>
            <returns>Флаг наличия значения</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject.updateValue(System.Guid,System.Object)">
            <summary>
            Обновление значения
            </summary>
            <param name="ID">Идентифкатор значения</param>
            <param name="value">Значение</param>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectUpdateSheduler.Objects">
            <summary>
            Список объектов обновления
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.Contains(System.Object)">
            <summary>
            Проверка наличия объекта обновления
            </summary>
            <param name="key">Имя объекта обновления</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.Contains(System.Object,System.Guid)">
            <summary>
            Проверка наличия значения
            </summary>
            <param name="key">Имя объекта обновления</param>
            <param name="ID">ID обновляемого объекта</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.Add(System.Object,NsgSoft.DataObjects.NsgObjectUpdateSheduler.BaseShedulerObject)">
            <summary>
            Добавление объекта обновления
            </summary>
            <param name="key">Имя объекта обновления</param>
            <param name="obj">Объект обновления</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.GetValue(System.Object,System.Guid)">
            <summary>
            Получение значение
            </summary>
            <param name="key">Имя объекта обновления</param>
            <param name="ID">ID обновляемого объекта</param>
            <returns>текущее значение объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.UpdateValue(System.Object,System.Guid,System.Object)">
            <summary>
            Обновление значения
            </summary>
            <param name="key">Имя объекта обновления</param>
            <param name="ID">ID обновляемого объекта</param>
            <param name="value">значение обновляемого объекта</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectUpdateSheduler.Actualize(System.Object,System.Boolean)">
            <summary>
            Запрос на актуализацию значений
            </summary>
            <param name="key">Имя объекта обносления</param>
            <returns></returns>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserSettings.disableSavinSettings">
            <summary>
            Версия формата сохранения настроек 
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserSettings.userSettings">
            <summary>
            Таблица, хранящая настройки пользователя.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserSettings.LoadUserSettings(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgBaseObject,System.Object,System.String)">
            <summary>
            Чтение настроек и базы
            </summary>
            <param name="userID"></param>
            <param name="nsgObject"></param>
            <param name="Object"></param>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgIntPositiveConverter">
            <summary>
            Конвертер числа  с проверкой значения на больше 0
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgIntPositiveConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Метод проверки возможности конвертации из заданного в редакторе значения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgIntPositiveConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Метод конвертиции из заданного в редакторе значения.
            </summary>
            <param name="value">Значение из редактора.</param>
            <returns>Возвращает конвертированное значение.</returns>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgArrayEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgArrayEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgEnumArrayEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgEnumArrayEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSelectComparisonEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Метод редактирования значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSelectComparisonEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Метод установки типа редактора.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSelectRekvisitEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Метод редактирования значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSelectRekvisitEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Метод установки типа редактора.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.INsgObjectFormProvider">
            <summary>
            Интерфейс провайдера форм объектов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowObjectList(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Показать форму списка по-умолчанию для объектов заданного типа.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowObjectList(NsgSoft.DataObjects.NsgMultipleObject,System.String)">
            <summary>
            Показать заданную форму списка для объектов заданного типа.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="formName">Имя формы списка.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowObjectList(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgReferencedObject)">
            <summary>
            Показать заданную форму списка для объектов заданного типа.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="objOwner">Объект - владелец. Устанавливается при открытии формы.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowObjectList(NsgSoft.DataObjects.NsgMultipleObject,System.String,NsgSoft.DataObjects.NsgReferencedObject)">
            <summary>
            Показать заданную форму списка для объектов заданного типа.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="formName">Имя формы списка.</param>
            <param name="objOwner">Объект - владелец. Устанавливается при открытии формы.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.GetObjectListForm(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Получить форму списка по-умолчанию для объектов заданного типа без отображения.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <returns>Возвращает форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.GetObjectListForm(NsgSoft.DataObjects.NsgMultipleObject,System.String)">
            <summary>
            Получить заданную форму списка для объектов заданного типа без отображения.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="formName">Имя формы списка.</param>
            <returns>Возвращает форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.GetObjectListForm(NsgSoft.DataObjects.NsgMultipleObject,System.String,NsgSoft.DataObjects.NsgReferencedObject,System.Boolean)">
            <summary>
            Получить заданную форму списка для объектов заданного типа без отображения.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="formName">Имя формы списка.</param>
            <param name="objOwner">Объект - владелец. Устанавливается при открытии формы.</param>
            <param name="selectionForm">Форма выбора.</param>
            <returns>Возвращает форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowObject(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.INsgObjectForm)">
            <summary>
            Показать форму по умолчанию объекта для просмотра.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="parentForm">Форма - владелец отображенной формы.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowObject(NsgSoft.DataObjects.NsgMultipleObject,System.String,NsgSoft.DataObjects.INsgObjectForm)">
            <summary>
            Показать заданную форму объекта для просмотра.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="formName">Имя формы элемента.</param>
            <param name="parentForm">Форма - владелец отображенной формы.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowObject(NsgSoft.DataObjects.NsgMultipleObject,System.String,NsgSoft.DataObjects.INsgObjectForm,System.Boolean)">
            <summary>
            Показать заданную форму объекта.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="formName">Имя формы элемента.</param>
            <param name="parentForm">Форма - владелец отображенной формы.</param>
            <param name="forEdit">Флаг открытия на редактирование.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.GetObjectForm(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Получить форму по умолчанию объекта без отображения.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <returns>Возвращает форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.GetObjectForm(NsgSoft.DataObjects.NsgMultipleObject,System.String)">
            <summary>
            Получить заданную форму объекта без отображения.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="formName">Имя формы элемента.</param>
            <returns>Возвращает форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.GetObjectForm(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.INsgObjectForm)">
            <summary>
            Получить заданную форму объекта без отображения.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="parentForm">Форма - владелец отображенной формы.</param>
            <returns>Возвращает форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.GetObjectForm(NsgSoft.DataObjects.NsgMultipleObject,System.String,NsgSoft.DataObjects.INsgObjectForm)">
            <summary>
            Получить заданную форму объекта без отображения.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="formName">Имя формы элемента.</param>
            <param name="parentForm">Форма - владелец отображенной формы.</param>
            <returns>Возвращает форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.GetObjectForm(NsgSoft.DataObjects.NsgMultipleObject,System.String,NsgSoft.DataObjects.INsgObjectForm,System.Boolean)">
            <summary>
            Получить заданную форму объекта без отображения.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="formName">Имя формы элемента.</param>
            <param name="parentForm">Форма - владелец отображенной формы.</param>
            <param name="forEdit">Флаг открытия на редактирование.</param>
            <returns>Возвращает форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowObjectSelectionList(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.INsgObjectForm)">
            <summary>
            Показать форму списка по-умолчанию для подбора объектов заданного типа.
            </summary>
            <param name="obj">Объект нужного типа</param>
            <param name="parentForm">Форма - владелец отображенной формы. Из нее открывается подбор.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowObjectSelectionList(NsgSoft.DataObjects.NsgMultipleObject,System.String,NsgSoft.DataObjects.INsgObjectForm)">
            <summary>
            Показать форму списка по-умолчанию для подбора объектов заданного типа.
            </summary>
            <param name="obj">Объект нужного типа</param>
            <param name="formName">Имя формы элемента.</param>
            <param name="parentForm">Форма - владелец отображенной формы. Из нее открывается подбор.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowObjectSelectionList(NsgSoft.DataObjects.NsgMultipleObject,System.String,NsgSoft.DataObjects.INsgObjectForm,NsgSoft.DataObjects.NsgReference)">
            <summary>
            Показать форму списка по-умолчанию для подбора объектов заданного типа.
            </summary>
            <param name="obj">Объект нужного типа</param>
            <param name="formName">Имя формы элемента.</param>
            <param name="parentForm">Форма - владелец отображенной формы. Из нее открывается подбор.</param>
            <param name="referToSelect">Ссылка для задания значения.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowObjectSelectionList(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.INsgObjectForm,NsgSoft.DataObjects.NsgReference)">
            <summary>
            Показать форму списка по-умолчанию для подбора объектов заданного типа.
            </summary>
            <param name="obj">Объект нужного типа</param>
            <param name="parentForm">Форма - владелец отображенной формы. Из нее открывается подбор.</param>
            <param name="referToSelect">Ссылка для задания значения.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.GetObjectSelectionForm(NsgSoft.DataObjects.NsgMultipleObject,System.String,NsgSoft.DataObjects.INsgObjectForm,NsgSoft.DataObjects.NsgReference,NsgSoft.DataObjects.NsgReferencedObject)">
            <summary>
            Показать заданную форму списка для подбора объектов заданного типа.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="formName">Имя формы элемента.</param>
            <param name="parentForm">Форма - владелец отображенной формы.</param>
            <param name="referToSelect">Ссылка для задания значения.</param>
            <returns>Возвращает форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.GetObjectSelectionForm(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.INsgObjectForm,NsgSoft.DataObjects.NsgReference)">
            <summary>
            Показать заданную форму списка для подбора объектов заданного типа.
            </summary>
            <param name="obj">Объект для отображения.</param>
            <param name="parentForm">Форма - владелец отображенной формы.</param>
            <param name="referToSelect">Ссылка для задания значения.</param>
            <returns>Возвращает форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormProvider.ShowDockedForm(System.Windows.Forms.Form)">
            <summary>
            Показать форму.
            </summary>
            <param name="form">Форма для отображения.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.INsgBackgroundProcessor">
            <summary>
            Интерфейс обработчика фоновых процессов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgBackgroundProcessor.ExecuteTime">
            <summary>
            получение и установка типа запуска отчета на исполнение.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgBackgroundProcessor.OwnerForm">
            <summary>
            Получение и установка формы-владелеца компонента.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgBackgroundProcessor.IsProcessing">
            <summary>
            Флаг запущенной обработки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgBackgroundProcessor.RunningThreads">
            <summary>
            Список исполняющихся потоков.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.INsgInvoker">
            <summary>
            Интерфейс для объектов с переносом события на основной поток.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgInvoker.Invoker">
            <summary>
            Объект переноса исполнения событий на основной поток.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.INsgLongOperationHandler">
            <summary>
            Интерфейс обработчика длительных операций.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgLongOperationHandler.BeginLongOperation(NsgSoft.Design.INsgLongOperation)">
            <summary>
            Вызывается перед началом выполнения длительной операции.
            </summary>
            <param name="sender">Источник.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgLongOperationHandler.EndLongOperation(NsgSoft.Design.INsgLongOperation)">
            <summary>
            Вызывается после окончания выполнения длительной операции.
            </summary>
            <param name="sender">Источник.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgFormEventHandler">
            <summary>
            Тип собития, генерируемый формами
            </summary>
            <param name="sender">Источник события.</param>
            <param name="arg">Аргументы события.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgFormGetAvaliablePrintFormsCompleated">
            <summary>
            Делегат события о получении формой зарегистрированных печатных форм.
            </summary>
            <param name="form">Форма, которая отправляет событие.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.INsgMainForm">
            <summary>
            Интерфейс, который должна реализовывать основная форма приложения.
             Ссылка на основную форму должна быть присвоена в NsgSettings.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.AddReplaceForm(NsgSoft.DataObjects.INsgObjectForm,System.Windows.Forms.Form)">
            <summary>
            Добавить подмену формы
            </summary>
            <param name="oldForm">Форма, которую подменяем</param>
            <param name="newForm">Новая форма</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.RemoveReplaceForm(NsgSoft.DataObjects.INsgObjectForm)">
            <summary>
            Удалить подмену формы
            </summary>
            <param name="oldForm">Форма, которую подменяли</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.CloseAllForms">
            <summary>
            Метод закрытия всех дочерних форм (кроме системных).
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.ClearFormsCash">
            <summary>
            Метод очистки кэша окон.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgMainForm.Icon">
            <summary>
            Иконка формы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgMainForm.CurrentUser">
            <summary>
            Текущий пользователь.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgMainForm.CurrentUserName">
            <summary>
            Имя текущего пользователя.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.GetCurrentUserRights(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод получения прав текущего пользователя на заданный объект.
            </summary>
            <param name="metaObject">Объект метаданных.</param>
            <returns>Возвращает права.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.GetCurrentUserRights(System.String)">
            <summary>
            Метод получения прав текущего пользователя на заданный объект.
            </summary>
            <param name="metaObjectFullName">Полное имя объекта метаданных.</param>
            <returns>Возвращает права.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgMainForm.RunningList">
            <summary>
            Список запущенных объектов, подлежащих уничтожению по закрытию формы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.UseLazyWriterForDoc(NsgSoft.DataObjects.NsgDataDocument)">
            <summary>
            Использовать ли для данного объекта механизм отложенного проведения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgMainForm.CreateOnMainThread">
            <summary>
            Получение и установка флага создания форм на основном потоке.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgMainForm.BackgroundMode">
            <summary>
            Режим фонового исполнения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.SetPayMasterView(System.Boolean)">
            <summary>
            Установить вид рабочего места кассира
            </summary>
            <param name="on"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.AddThreadToManager(NsgSoft.DataObjects.NsgThread)">
            <summary>
            Добавить поток в очередь менеджера потоков
            </summary>
            <param name="thread">Поток.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.RemoveThreadFromManager(NsgSoft.DataObjects.NsgThread)">
            <summary>
            Удалить поток из очереди менеджера потоков
            </summary>
            <param name="thread">Поток.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.CreateGraphics">
            <summary>
            Создать Graphics
            </summary>
            <returns>Graphics</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.AddBookmark(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Добавление объекта в закладки
            </summary>
            <param name="??">Объект метаданных, спозиционированный или нет</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.RemoveBookmark(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Удаление объекта из закладок
            </summary>
            <param name="??">Объект метаданных, спозиционированный или нет</param>
        </member>
        <member name="E:NsgSoft.DataObjects.INsgMainForm.FormGetAvaliablePrintFormsCompleated">
            <summary>
            Событие о получении формой зарегистрированных печатных форм.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.LazyHandle(NsgSoft.DataObjects.NsgDataDocument)">
            <summary>
            Использовать отложенное проведение для переданного объекта
            </summary>
            <param name="doc">Переданный объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMainForm.AddNewMessagesInMsgManager(NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Добавить сообщения в менеджер сообщений
            </summary>
            <param name="msgs">Сообщения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMessageOutput.ShowMessage(System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Высветить сообщение в окне сообщений
            </summary>
            <param name="message">Текст сообщения</param>
            <param name="messageType">Тип сообщения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMessageOutput.ShowMessage(System.String)">
            <summary>
            Высветить сообщение в окне сообщений с тип сообщения "информация"
            </summary>
            <param name="message">Текст сообщения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMessageOutput.ShowMessage(System.Exception)">
            <summary>
            Метод отображения сообщения в форме об ошибке по исключению.
            </summary>
            <param name="ex">Исключение.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMessageOutput.ShowMessage(System.String,System.Exception)">
            <summary>
            Метод отображения сообщения в форме об ошибке по исключению.
            </summary>
            <param name="message">Текст сообщения.</param>
            <param name="ex">Исключение.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.INsgMessageWindow">
            <summary>
            Интерфейс окна сообщений.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgMessageWindow.ShowMessage(System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Метод отображения сообщения в форме.
            </summary>
            <param name="message">Текст сообщения.</param>
            <param name="messageType">Тип сообщения.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgNameProvider.Name">
            <summary>
            Имя объекта
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.INsgObjectForm">
            <summary>
            Интерфейс визуальной формы для отображения MultipleObject для просмотра или редактирования
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.IsCreatedNewObject">
            <summary>
            Показывает создала ли форма новый объект.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.HideOnClose">
            <summary>
            Скрывать форму по закрытию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.AllowGroupSelect">
            <summary>
            Режим выбора объекта, выбирать группы или нет
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.OwnerObject">
            <summary>
            Отображаемый или редактируемый объект
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.FormGuid">
            <summary>
            Уникальный идентификатор формы
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.FormName">
            <summary>
            Имя формы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.FormShowMode">
            <summary>
            Режим отображения формы
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.SelectionForm">
            <summary>
            Форма, открытая из данной формы для подбора.
            Если на подбор будет открыта новая форма, то текущая должна быть закрыта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.ParentForm">
            <summary>
            Форма, которая вызвала открытие данной формы для подбора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.ReferenceToSelect">
            <summary>
            Ссылка, в которую надо передать значение по окончанию подбора
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.FormCallingObject">
            <summary>
            Вызвавший форму объект.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.GetAvaliablePrintForms">
            <summary>
            Доступные имена печатных форм.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.SubType">
            <summary>
            Подтип формы (форма списка, форма объекта)
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.CurrentObject">
            <summary>
            Объект, находящийся в CurrentRow у MainVisualMultipleObject
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.Options">
            <summary>
            Дополнительный произвольный объект для нужд программиста
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.Reload">
            <summary>
            Метод перегрузки формы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.ResetData">
            <summary>
            Метод сброса всех данных во всех VMO формы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.IsResetMode">
            <summary>
            Флаг состояния сброса данных в форме.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.Activate">
            <summary>
            Активирование формы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.Focus">
            <summary>
            Фокус на форму.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.Dispose">
            <summary>
            Освобождение ресурсов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.OnSaveUserSettings">
            <summary>
            Записать пользовательские настройки формы в строку в виде XML
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.OnLoadUserSettings(System.String)">
            <summary>
            Прочитать и применить пользовательские настройки формы
            </summary>
            <param name="xmlText">строка в виде XML</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.UpdateData(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Принудительно перечитать данные из БД
            </summary>
            <param name="mainVMOCurentRow">Текущая строка основного объекта формы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.MainVMOCompare(System.Object)">
            <summary>
            Получение параметров поиска MainVisualMultipleObject по заданному владельцу
            </summary>
            <param name="owner">Владелец условия</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.NextInput(System.Windows.Forms.Control)">
            <summary>
            Метод перехода к следующему окну ввода
            </summary>
            <param name="ctrl">Текущий контрол.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.Print(System.String,System.Drawing.Printing.PrinterSettings)">
            <summary>
            Печать.
            </summary>
            <param name="name">Имя печатной формы</param>
            <param name="settings">Настройки печати.</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.Print(System.String,System.Drawing.Printing.PrinterSettings,System.Boolean)">
            <summary>
            Печать.
            </summary>
            <param name="name">Имя печатной формы</param>
            <param name="settings">Настройки печати. Для печати в Stream использовать NsgPrinterSettings</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.ActivateAllMembers">
            <summary>
            Методы активации всех доступных элементов формы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.UpdateAllVMO">
            <summary>
            Метод принудительного обновления всех VMO, стоящих на форме. 
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.UpdateAllVMO(NsgSoft.DataObjects.NsgMultipleObject,System.Object[])">
            <summary>
            Метод принудительного обновления всех VMO, стоящих на форме, 
            если тип находящегося в них объекта совпадает с переданным
            </summary>
            <param name="mo">Объекты какого типа следует обновлять.</param>
            <param name="exluded">Список исключений.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.UpdateAllVMO(System.Boolean,NsgSoft.DataObjects.NsgMultipleObject,System.Object[])">
            <summary>
            Метод принудительного обновления всех VMO, стоящих на форме, 
            если тип находящегося в них объекта совпадает с переданным
            </summary>
            <param name="background">Фоновое обновление, без блокировки.</param>
            <param name="mo">Объекты какого типа следует обновлять.</param>
            <param name="exluded">Список исключений.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.UpdateAutoVMO">
            <summary>
            Метод принудительного обновления всех авто обновляемых VMO, стоящих на форме.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.BeginInitData">
            <summary>
            Блокирует обновления VMO на форме
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.EndInitData(System.Boolean)">
            <summary>
            Снимает блокировку обновлений VMO на форме и вызывает отложенные обновления
            </summary>
            <param name="update">флаг, вызывать ли отложенные обновления</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.SetReadOnlyToAllVMO(System.Boolean,System.Object[])">
            <summary>
            Установить или сбросить флаг ReadOnly у всех VMO
            </summary>
            <param name="mode">устанавливаемое значение</param>
            <param name="exluded">Список исключений.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.GetReportForm(System.String)">
            <summary>
            Метод получения формы отчета.
            </summary>
            <param name="name">Имя отчета.</param>
            <returns>Возвращает форму отчета, если найдена.</returns>
        </member>
        <member name="E:NsgSoft.DataObjects.INsgObjectForm.FormClosed">
            <summary>
            Событие, генерируемое перед закрытием формы.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.INsgObjectForm.FormClosing">
            <summary>
            Событие, генерируемое после закрытия формы.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.INsgObjectForm.FormObjectInitialized">
            <summary>
            Событие об установке актуального объекта формы.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.INsgObjectForm.FormObjectSelectedInNsgIGrid">
            <summary>
            Событие об установке формы объекта из формы списка объектов 
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.INsgObjectForm.ObjectsSelected">
            <summary>
            Событие о выделении объектов на форме подбора.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.INsgObjectForm.GetAvaliablePrintFormsCompleated">
            <summary>
            Закончено получение зарегистрированных печатных форм
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.INsgObjectForm.PrintCompleated">
            <summary>
            Закончена печать.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.INsgObjectForm.InitFinished">
            <summary>
            Сообщение об окончании инициализации
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.BeginInitObject(System.Object)">
            <summary>
            Добавление объекта, проходящего инициализацию
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.EndInitObject(System.Object)">
            <summary>
            Окончание инициализайии объекта
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.IsInitFinished">
            <summary>
            Флаг окончания инициализации объектов
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.WaitInitFinished">
            <summary>
            Ожидание окончания инициализации
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.OnFormObjectSelectedInNsgIGrid">
            <summary>
            Событие о выборе объекта в окне списка, вызванной из данной формы для выбора значения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectForm.SelectedObject">
            <summary>
            Объект, выбранный в форме подбора
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectForm.UserSettingsEditor">
            <summary>
            Форма работы с пользовательскими настройками
            </summary>
            <returns></returns>
        </member>
        <member name="T:NsgSoft.DataObjects.INsgObjectFormBase">
            <summary>
            Интерфейс визуальной формы для отображения MultipleObject для просмотра или редактирования. Базовый.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectFormBase.FormObject">
            <summary>
            Отображаемый или редактируемый объект
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectFormBase.Visible">
            <summary>
            Видимость формы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectFormBase.Enabled">
            <summary>
            Блокировка формы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectFormBase.Editable">
            <summary>
            Режим выбора редактирование или просмотр.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgObjectFormBase.IsDisposed">
            <summary>
            Получение флага уничтоженной формы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormBase.Show">
            <summary>
            Показать форму.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormBase.Hide">
            <summary>
            Погасить форму.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormBase.ShowDialog">
            <summary>
            Показать форму в модальном режиме.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormBase.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>
            Показать форму в модальном режиме.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgObjectFormBase.Close">
            <summary>
            Закрыть форму.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataObjectsLocalizeConverter">
            <summary>
            Класс конвертер для локализации свойств DataObjects.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgInterfaceImplement">
            <summary>
            Класс данных о реализации интерфейса данных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfaceImplement.#ctor(System.String,NsgSoft.Common.RowsImplementation,System.Boolean)">
            <summary>
            Конструктор класса с параметрами.
            </summary>
            <param name="interfaceName">Имя интерфейса.</param>
            <param name="rowsImplement">Реализация для строк.</param>
            <param name="isDateDependent">Флаг истории.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfaceImplement.#ctor">
            <summary>
            Конструктор класса по умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfaceImplement.InterfaceName">
            <summary>
            Получение и установка имени интерфейса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfaceImplement.RowsImplement">
            <summary>
            Получение и установка реализации для строк.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfaceImplement.WriteHistory">
            <summary>
            Получение и установка флага ведения истории.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgInterfaceImplementsCollection">
            <summary>
            Класс коллекции данных о реализации интерфейсов данных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfaceImplementsCollection.Item(System.String)">
            <summary>
            Получение элемента коллекции по имени интерфейса.
            </summary>
            <param name="interfaceName">Имя интерфейса.</param>
            <returns>Возвращает элемент коллекции, если найден, или null в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfaceImplementsCollection.OnItemAdding(NsgSoft.DataObjects.NsgInterfaceImplement)">
            <summary>
            Метод вызывается при добавлении нового элемента.
            </summary>
            <param name="item">Новый элемент.</param>
            <returns>Возвращает результат добавления.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfaceImplementsCollection.IndexOf(System.String)">
            <summary>
            Получение индекса элемента в коллекции.
            </summary>
            <param name="interfaceName">Имя интерфейса.</param>
            <returns>Возвращает индекса элемента в коллекции, если найден, или -1 в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfaceImplementsCollection.Contains(System.String)">
            <summary>
            Метод проверки наличия объекта в коллекции.
            </summary>
            <param name="interfaceName">Имя интерфейса.</param>
            <returns>Возвращает наличие объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfaceImplementsCollection.Remove(System.String)">
            <summary>
            Метод удаления объекта из коллекции.
            </summary>
            <param name="interfaceName">Имя интерфейса.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgInterfacedObject">
            <summary>
            Абстрактный класс Интерфейсный объект. Имеет возможность являться
             интерфейсом данных для других сложных объектов, реализующих интерфейсы.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgInterfacedObject._HAS_TIME_HISTORY">
            <summary>
            Флаг истории.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgInterfacedObject._IMPLEMENT_LIST">
            <summary>
            Список реализующих объектов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgInterfacedObject._CONTAINERS">
            <summary>
            Список ассоциированных полей.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgInterfacedObject._ENTITY_TYPE">
            <summary>
            Тип сущности.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgInterfacedObject._ALIAS">
            <summary>
            Псевдоним интерфейса для кодогенерации.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgInterfacedObject.EntityTypes">
            <summary>
            Перечисление типов сущности.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgInterfacedObject.EntityTypes.Interface">
            <summary>
            Интерфейс.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgInterfacedObject.EntityTypes.Object">
            <summary>
            Объект.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgInterfacedObject.EntityTypes.Mixed">
            <summary>
            Одновременно.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.#ctor">
            <summary>
            Конструктор класса Интерфейсный объект.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Интерфейсный объект. dвести
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Интерфейсный объект из XML.
            </summary>
            <param name="elem">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfacedObject.EntityType">
            <summary>
            Получение и установка флага интерфейса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfacedObject.HasHistory">
            <summary>
            Получение и установка флага временной зависимости.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfacedObject.AssociatedFields">
            <summary>
            Получение списка ассоциированных полей.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfacedObject.FieldsContainersInternal">
            <summary>
            Список ассоциированных полей. Внутренний.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfacedObject.Implements">
            <summary>
            Получение списка имен (FullName) объектов, реализующих данный интерфейс.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfacedObject.ImplementsInternal">
            <summary>
            Получение списка имен (FullName) объектов, реализующих данный интерфейс. Внутренний.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfacedObject.Alias">
            <summary>
            Псевдоним интерфейса для кодогенерации, у класса реализующего интерфейс генерятся свойства-ссылки на интерфейсы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgInterfacedObject.ImplementationObject">
            <summary>
            Объект который реализует интерфейс, или он сам, если он реализует сам себя.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.GetAssociatedField(System.String)">
            <summary>
            Получение ассоциированных полей для конкретного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.setInterfacesEventing">
            <summary>
            Метод привязки обработки событий от коллекции интерфейсов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.ImplementAdding(NsgSoft.Common.NsgCollection{System.String}.CollectionItemChangedEventArgs)">
            <summary>
            Обработчик события от коллекции реализующих данный интерфейс объектов - добавление объекта.
            </summary>
            <param name="args">Параметры события.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.ImplementRemoving(NsgSoft.Common.NsgCollection{System.String}.CollectionItemChangedEventArgs)">
            <summary>
            Обработчик события от коллекции реализующих данный интерфейс объектов - удаление объекта.
            </summary>
            <param name="args">Параметры события.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.AddAssociatedField(System.String)">
            <summary>
            Метод добавления ассоциированного поля в список.
            </summary>
            <param name="fName">Имя ассоциированного поля.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.DeleteAssociatedField(System.String)">
            <summary>
            Метод удаления ассоциированного поля из списка.
            </summary>
            <param name="fName">Имя ассоциированного поля.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.ReplaceAssociatedField(System.String,NsgSoft.DataObjects.NsgDataFieldsContainer)">
            <summary>
            Метод получения замены ассоциированного поля в списке по имени.
            </summary>
            <param name="fName">Имя ассоциированного поля.</param>
            <param name="field">Поле на замену.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.InternalPost(System.Collections.Generic.List{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{NsgSoft.DataObjects.NsgMultipleObject}})">
            <summary>
            Метод изменения объекта в базе. Перекрывается только в пределах сборки NsgSoft.DataObjects.
             Для внутреннего пользования.
            </summary>
            <param name="postedList">Список рекурсивно сохраненных объектов.</param>
            <param name="postedObjects">Список объектов на сохранение по типам.</param>
            <returns>Возвращает true при удачном изменении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.SaveContent(System.Configuration.ConfigXmlDocument)">
            <summary>
            Метод записи объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.LoadContent(System.Xml.XmlElement)">
            <summary>
            Метод загрузки объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgInterfacedObject.CanUseRekvisitInInterface(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Проверяет, можно ли использовать реквизит в интерфейсе
            </summary>
            <param name="SO">реквизит</param>
            <returns></returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgImplementationObject">
            <summary>
            Абстрактный класс Реализующий объект. Имеет возможность 
             реализации интерфейсов данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgImplementationObject._DATA_INTERFACES">
            <summary>
            Список реализуемых интерфейсов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgImplementationObject._INTERFACES_EVENTS_CREATED">
            <summary>
            Флаг подписки на изменение списка интерфейсов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.#ctor">
            <summary>
            Конструктор класса Реализующий объект.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Реализующий объект.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Реализующий объект из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgImplementationObject.DataInterfaces">
            <summary>
            Получение коллекции описателей реализованных интерфейсов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgImplementationObject.InterfacesEventsCreated">
            <summary>
            Флаг подписки на изменение списка интерфейсов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.GetInterfaceImplementation(System.String)">
            <summary>
            Метод проверяет реализует ли данный объект заданный интерфейс.
            </summary>
            <param name="interfaceName">Имя интерфейса.</param>
            <returns>Возвращает результат проверки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.SetInterfaceImplementation(System.String,System.Boolean)">
            <summary>
            Метод устанавливает для данного объект реализацию заданного интерфейса.
            </summary>
            <param name="interfaceName">Имя интерфейса.</param>
            <param name="state">Новое состояние.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.setInterfacesEventing">
            <summary>
            Метод привязки обработки событий от коллекции интерфейсов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.InterfaceAdding(NsgSoft.Common.NsgCollection{NsgSoft.DataObjects.NsgInterfaceImplement}.CollectionItemChangedEventArgs)">
            <summary>
            Обработчик события от коллекции реализуемых интерфейсов - добавление интерфейса.
            </summary>
            <param name="args">Параметры события.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.InterfaceRemoving(NsgSoft.Common.NsgCollection{NsgSoft.DataObjects.NsgInterfaceImplement}.CollectionItemChangedEventArgs)">
            <summary>
            Обработчик события от коллекции реализуемых интерфейсов - удаление интерфейса.
            </summary>
            <param name="args">Параметры события.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.InternalPost(System.Collections.Generic.List{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{NsgSoft.DataObjects.NsgMultipleObject}})">
            <summary>
            Метод изменения объекта в базе. Перекрывается только в пределах сборки NsgSoft.DataObjects.
             Для внутреннего пользования.
            </summary>
            <param name="postedList">Список рекурсивно сохраненных объектов.</param>
            <param name="postedObjects">Список объектов на сохранение по типам.</param>
            <returns>Возвращает true при удачном изменении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.setObjectChanged(NsgSoft.DataObjects.NsgInterfacedObject,System.Boolean@)">
            <summary>
            Метод устанавливает состояние объекта - изменен, 
             дополнительно переводит в редактирование, если необходимо.
            </summary>
            <param name="interfObject">Проверяемый объект.</param>
            <param name="isChanged">Флаг изменений.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.SaveContent(System.Configuration.ConfigXmlDocument)">
            <summary>
            Метод записи объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.LoadContent(System.Xml.XmlElement)">
            <summary>
            Метод загрузки объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgImplementationObject.InterfaceObject(System.String)">
            <summary>
            Получить интерфейсный объект, реализуемый данным объектом. 
            </summary>
            <param name="name">Имя интерфейса</param>
            <returns>Ссылку на объект запрошенного интерфейса, реализуемого данным объектом</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgReferencedObject">
            <summary>
            Абстрактный класс Сылочный объект. На данных объект возможны ссылки.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObject.#ctor">
            <summary>
            Конструктор класса Сылочный объект по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObject.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Сылочный объект.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Сылочный объект из XML.
            </summary>
            <param name="elem">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectListMemoryTable.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectListMemoryTable.Fill(NsgSoft.DataObjects.NsgConfiguration,System.Boolean)">
            <summary>
            Заполнение списка объектов конфигурации
            </summary>
            <param name="Configuration">Конфигурация</param>
            <param name="isDelObjs">True, если запрашиваются только объекты для удаления</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgVirtualCursorMO">
            <summary>
            Класс Курсор - итератор выборки объектов.   
            </summary>
            <typeparam name="NsgMultipleObject">Шаблон сложного объекта, с которым работает курсор.</typeparam>
            <remarks>Курсор следует использовать вместо метода FindAll в тех случаях, когда объем 
            обрабатываемых данных может быть достаточно велик и требуется обрабатывать данные порциями.
            Курсор осуществляет выборку данных порциями (по умолчанию, по 100 объектов). 
            Эта величина может быть изменена с помощью свойства RowToFetch</remarks>
            <example>
            АдресаКонтрагентов спрАдр = АдресаКонтрагентов.Новый();
            NsgVirtualCursor\АдресаКонтрагентов\ курсорАдр = спрАдр.GetNewVirtualCursor\АдресаКонтрагентов\();
            while ((спрАдр = курсорАдр.Next) != null)
            {
                спрАдр.Edit();
                спрАдр.Post();
            }
            </example>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursorMO.innerSorting">
            <summary>
            Внутренние параметры сортировки, с добавлением сортировок по служебным полям.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursorMO.innerCompare">
            <summary>
            Внутренние параметры отбора, с учетом служебных полей.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursorMO.results">
            <summary>
            Очередь выбранных из базы элементов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursorMO.current">
            <summary>
            Текущий выбранный элемент.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursorMO.innerCursor">
            <summary>
            Вложенный курсор.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursorMO.startRow">
            <summary>
            Индекс первой строки в выборке.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursorMO.countRow">
            <summary>
            Количество строк в курсоре текущего уровня вложенности.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.CountRow">
            <summary>
            Кэш для курсока
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.IsHasCount">
            <summary>
            Возвращает true, если количество уже запрошено в БД, иначе false.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursorMO.Level">
            <summary>
            Уровень вложенности курсора (уровень иерархии объекта в курсоре).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursorMO.lastFetchedItemIndex">
            <summary>
            Индекс последней выбранной строки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursorMO.enableHierarchy">
            <summary>
            Выборка с иерархией или нет.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursorMO.FetchGroup">
            <summary>
            Возвращать группы или нет.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.RowToFetch">
            <summary>
            Количество строк считываемых за один запрос, не может быть меньше чем NsgSettings.MaxRowsToFetch
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgVirtualCursorMO.BackgroundReadCompleted">
            <summary>
            Событие об окончании упреждающего чтения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.OnBackgroundReadCompleted">
            <summary>
            Метод вызывает событие об окончании чтения.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgVirtualCursorMO.ReadCompleted">
            <summary>
            Событие об окончании чтения в кэш.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.OnReadCompleted">
            <summary>
            Метод вызывает событие об окончании чтения в кэш.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.#ctor(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Конструктор класса Курсор с открытием.
            </summary>
            <param name="inLock">Признак блокировки данных.</param>
            <param name="inTableName">Имя таблицы БД.</param>
            <param name="inDatabaseMngr">Объект управления БД.</param>
            <param name="inOwner">Сложный объект - владелец курсора.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.#ctor(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Курсор.
            </summary>
            <param name="inLock">Признак блокировки данных.</param>
            <param name="inTableName">Имя таблицы БД.</param>
            <param name="inDatabaseMngr">Объект управления БД.</param>
            <param name="inOwner">Сложный объект - владелец курсора.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.LoadingReferents">
            <summary>
            Список загружаемый для объектов ссылок.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.FirstInCash">
            <summary>
            Первый индекс в кэше.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.LastInCash">
            <summary>
            Последний индекс в кэше.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.Clone">
            <summary>
            Получение клона курсора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.IsLock">
            <summary>
            Получение состояния блокировки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.TableName">
            <summary>
            Получение имени таблицы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.Sorting">
            <summary>
            Получение  и установка сортировки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.Comparison">
            <summary>
            Получение сравнений.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.Next">
            <summary>
            Получение следущей записи курсора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.NextFromChild">
            <summary>
            Очередной элемент по иерархии.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.NextOnSameLevel">
            <summary>
            Очередной объект текущего уровня вложенности.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.GetObject(System.Guid)">
            <summary>
            Метод получения объекта из кэша по идентификатору.
            </summary>
            <param name="value">Идентификатор объекта.</param>
            <returns>Возвращает найденный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.ContainInCash(System.Int32)">
            <summary>
            Метод проверки наличия элемента в кэше по индексу.
            </summary>
            <param name="index">Индекс элемента.</param>
            <returns>Возвращает результат поиска.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.ContainInCash(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод проверки наличия элемента в кэше по значению.
            </summary>
            <param name="index">Значение элемента.</param>
            <returns>Возвращает результат поиска.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.findEndObject(System.Int32,System.Int32@,System.Boolean@)">
            <summary>
            если кэш не пуст найти ближайший объект на который можно опереться для запроса
            </summary>
            <param name="i">индекс запрашиваемого элемента</param>
            <param name="startFetchIndex">позиция с которой начнется выборка данных</param>
            <returns>найденный опорный объект</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.setParentInCompareParam(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Устанавливает в переданный набо параметров параметр - родитель, 
            родителем записывается либо текущий выбранный объект, если он есть, либо
            владелец курсора.
            </summary>
            <param name="nc">Набор параметров в котором нужно изменить родительскую группу.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.getAllMOPresentationValues(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Получения значений врех полей, присутствующих в представлении MultipleObject
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.Create">
            <summary>
            Метод создания курсора.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.AddCompareParam(NsgSoft.DataObjects.NsgCompareParam)">
            <summary>
            Добавляет параметр выборки к условиям.
            </summary>
            <param name="compare">Условие отбора.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.RemoveCompareParam(System.String)">
            <summary>
            Удаляет условие отбора.
            </summary>
            <param name="compare">Удаляемый параметр.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.ClearCompareParam">
            <summary>
            Удаляет все условия выборки.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.InsertSortingParam(System.Int32,NsgSoft.DataObjects.NsgSortingParam)">
            <summary>
            Вставка условия сортировки в определенном порядке.
            </summary>
            <param name="index">Порядок сортировки по столбцу.</param>
            <param name="sort">Параметр сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.InsertSortingParam(NsgSoft.DataObjects.NsgSortingParam)">
            <summary>
            Вставка условия сортировки в последнюю очередь.
            </summary>
            <param name="sort">Параметр сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.RemoveSortingParam(System.String)">
            <summary>
            Удаляет устолвие сортировки.
            </summary>
            <param name="sort">Удаляемое условие.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.ClearSortingParam">
            <summary>
            Удаляет все условия сортировки.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.NextResult(System.Int32,NsgSoft.DataObjects.NsgMultipleObject,System.Boolean)">
            <summary>
            Считывает очередную порцию данных из базы данных.
            </summary>
            <param name="index">Номер первой запрашиваемой строки</param>
            <param name="lastNmo">Последний прочитанный элемент</param>
            <param name="bForward">Если true - направление чтения вперед, иначе - назад</param>
            <returns>Если удалось считать хотя бы одну строку возвращает true,
            иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.NextResult">
            <summary>
            Считывает очередную порцию данных из базы данных.
            </summary>
            <returns>Если удалось считать хотя бы одну строку возвращает true,
            иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.Reset">
            <summary>
            Сбрасывает курсор в начальное состояние.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.GetRowIndex(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод получения индекса строки.
            </summary>
            <param name="obj">Строка.</param>
            <returns>Возвращает индекс. Если не найден, то -1.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.GetRowIndex(NsgSoft.DataObjects.NsgMultipleObject,System.Boolean)">
            <summary>
            Метод получения индекса строки.
            </summary>
            <param name="obj">Строка.</param>
            <param name="putInCash">Добавить полученную строку в кэш.</param>
            <returns>Возвращает индекс. Если не найден, то -1.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.GetRowCashIndex(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод получения индекса строки в кэше.
            </summary>
            <param name="obj">Строка.</param>
            <returns>Возвращает индекс. Если не найден, то -1.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.Equals(NsgSoft.DataObjects.NsgVirtualCursor{NsgSoft.DataObjects.NsgMultipleObject})">
            <summary>
            Сравнение с другим курсором.
            </summary>
            <param name="obj">Другой курсор.</param>
            <returns>Результат сравнения.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.ID">
            <summary>
            Идентификатор.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursorMO.OperationDescription">
            <summary>
            Получение описания операции.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgVirtualCursorMO.BeginOperation">
            <summary>
            Событие BeginOperation. Событие генерируется перед началом запроса данных в текущем потоке.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.OnBeginOperation">
            <summary>
            Вызывается перед началом выполнения длительной операции
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgVirtualCursorMO.EndOperation">
            <summary>
            Событие BeginOperation. Событие генерируется перед началом запроса данных в текущем потоке.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.OnEndOperation">
            <summary>
            Вызывается по окончанию выполнения длительной операции
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursorMO.CancelOperation(System.Object)">
            <summary>
            Метод отмены операции.
            </summary>
            <param name="sender">Источник.</param>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.None">
            <summary>
            Export will not be done. 
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Pdf">
            <summary>
            Adobe PDF format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Xps">
            <summary>
            Adobe PDF format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.HtmlTable">
            <summary>
            HTML Table format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.HtmlSpan">
            <summary>
            HTML Span format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.HtmlDiv">
            <summary>
            HTML Div format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Rtf">
            <summary>
            RTF format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.RtfTable">
            <summary>
            Table in Rtf format for export. 
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.RtfFrame">
            <summary>
            Components of the report will be placed into RTF frames for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.RtfWinWord">
            <summary>
            Components of the report will be placed into RTF frames with borders in Microsoft Word graphic format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.RtfTabbedText">
            <summary>
            Mode for export to the RTF format with Tab symbol as delimiter of the text.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.RtfMode1">
            <summary>
            Please use StiExportFormat.RtfFrame instead.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.RtfMode2">
            <summary>
            StiExportFormat.RtfWinWord should be used instead.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.RtfMode3">
            <summary>
            StiExportFormat.RtfTabbedText should be used instead.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Text">
            <summary>
            Text format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Excel">
            <summary>
            Excel BIFF (Binary Interchange File Format) format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.ExcelXml">
            <summary>
            Excel Xml format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Excel2007">
            <summary>
            Excel 2007 format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Word2007">
            <summary>
            Word 2007 format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Xml">
            <summary>
            Xml format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Csv">
            <summary>
            CSV (Comma Separated Value) file format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.ImageGif">
            <summary>
            Image in GIF format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.ImageBmp">
            <summary>
            Image in BMP format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.ImagePng">
            <summary>
            Image in PNG format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.ImageTiff">
            <summary>
            Image in TIFF format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.ImageJpeg">
            <summary>
            Image in JPEG format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.ImageEmf">
            <summary>
            Image in EMF format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Mht">
            <summary>
            WebArchive format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Dbf">
            <summary>
            dBase/FoxPro format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Html">
            <summary>
            HTML format for export.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Ods">
            <summary>
            OpenDocument Calc file
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.StiExportFormat.Odt">
            <summary>
            OpenDocument Writer file
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgEmailSender.#ctor(NsgSoft.DataObjects.NsgMultipleObject,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="str">Сохраненные в XML настройки</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgExternObjectsManager">
            <summary>
            Класс работы со внешними объектами.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExternObjectsManager.ExternReportsPath">
            <summary>
            Путь поиска для отчетов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgExternObjectsManager.LoadExternReports(System.Boolean)">
            <summary>
            Метод загрузки внешних отчетов из файлов и создания их экземпляров.
            <param name="reload">Перегрузить список. Если задано true, то сбрасывается кэш
             уже считанных типов, и типы перечитываются заново.</param>
            </summary>
            <returns>Возвращает список созданных внешних отчетов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgExternObjectsManager.LoadExternReports">
            <summary>
            Метод загрузки внешних отчетов из файлов и создания их экземпляров.
            </summary>
            <returns>Возвращает список созданных внешних отчетов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgExternObjectsManager.LoadExternReportsTypes(System.Boolean)">
            <summary>
            Метод загрузки внешних отчетов из файлов.
            </summary>
            <param name="reload">Перегрузить список. Если задано true, то сбрасывается кэш
             уже считанных типов, и типы перечитываются заново.</param>
            <returns>Возвращает список типов внешних отчетов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgExternObjectsManager.LoadExternReportsTypes">
            <summary>
            Метод загрузки внешних отчетов из файлов.
            </summary>
            <param name="reload">Перегрузить список. Если задано true, то сбрасывается кэш
             уже считанных типов, и типы перечитываются заново.</param>
            <returns>Возвращает список типов внешних отчетов.</returns>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTimer.AutoReset">
            <summary>
             Повторять ли события или остановиться после первого
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTimer.Interval">
            <summary>
            Период повторения мс
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTimer.Enabled">
            <summary>
            Активность таймера
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgTimer.Tick">
            <summary>
            Событие таймера, в том же потоке что и создание таймера.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgTimer.Elapsed">
            <summary>
            Асинхронное событие таймера, в отдельном потоке
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTimer.Start">
            <summary>
            Запуск таймера
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTimer.Stop">
            <summary>
            Остановка таймера
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.Service.NsgTimeTracer">
            <summary>
            Тестовый класс для контроля скорости исполнения
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.Service.NsgZip">
            <summary>
            Класс архиватора.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.Service.NsgZip.Zip(System.String,System.String[],System.Boolean,System.String,System.String,System.Int32,System.Int32,System.Int32,NsgSoft.Common.INsgProgressProvider)">
            <summary>
            Метод упаковки архива.
            </summary>
            <param name="zipFileName">Имя файла для создания архива.</param>
            <param name="files">Список файлов для архивирования.</param>
            <param name="deleteAfterZip">Удалить файлы после упаковки.</param>
            <param name="directory">Папка.</param>
            <param name="description">Описание архива.</param>
            <param name="fileCopyBufferSize">Размер буфера для копирования файлов. По умолчанию 50 МГб.</param>
            <param name="commentMaxSize">Максимальная длина комментария к архиву (описание).</param>
            <param name="zipCompressLevel">Уровень сжатия для архива (от 0 - без сжатия, до 9 - маскимальное сжатие).
             Чем выше уровень, тем медленнее идет сжатие.</param>
            <param name="progress">Провайдер прогресса.</param>
            <returns>Возвращает булевый результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.Service.NsgZip.Zip(System.IO.Stream,System.String[],System.Boolean,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,NsgSoft.Common.INsgProgressProvider)">
            <summary>
            Метод упаковки архива.
            </summary>
            <param name="stream">Поток для создания архива.</param>
            <param name="files">Список файлов для архивирования.</param>
            <param name="deleteAfterZip">Удалить файлы после упаковки.</param>
            <param name="directory">Папка.</param>
            <param name="description">Описание архива.</param>
            <param name="closeAfterUnzip">Закрыть поток после распаковки.</param>
            <param name="fileCopyBufferSize">Размер буфера для копирования файлов. По умолчанию 50 МГб.</param>
            <param name="commentMaxSize">Максимальная длина комментария к архиву (описание).</param>
            <param name="zipCompressLevel">Уровень сжатия для архива (от 0 - без сжатия, до 9 - маскимальное сжатие).
             Чем выше уровень, тем медленнее идет сжатие.</param>
            <param name="progress">Провайдер прогресса.</param>
            <returns>Возвращает булевый результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.Service.NsgZip.addFileToArchiv(NsgSoft.ReportCompression.Zip.ZipOutputStream,System.String,System.String,System.Int32)">
            <summary>
            Меторд добавления файла в архив.
            </summary>
            <param name="zipStream">Поток архива.</param>
            <param name="filename">Имя файла.</param>
            <param name="directory">Папка.</param>
            <param name="fileCopyBufferSize">Размер буфера для копирования файлов. По умолчанию 50 МГб.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.Service.NsgZip.Unzip(System.IO.Stream,System.String,System.Boolean,System.Int32,NsgSoft.Common.INsgProgressProvider)">
            <summary>
            Метод распаковки архива. Исполняется синхронно.
            </summary>
            <param name="stream">Поток с архивом.</param>
            <param name="directory">Папка для файлов из архива. Если не указана, то текущая.</param>
            <param name="closeAfterUnzip">Закрыть поток после распаковки.</param>
            <param name="fileCopyBufferSize">Размер буфера для копирования файлов. По умолчанию 50 МГб.</param>
            <param name="progress">Провайдер прогресса.</param>
            <returns>Возвращает список распакованных файлов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.Service.NsgZip.Unzip(System.String,System.String,System.Boolean,System.Int32,NsgSoft.Common.INsgProgressProvider)">
            <summary>
            Метод распаковки архива. Исполняется синхронно.
            </summary>
            <param name="zipFileName">Имя файла архива.</param>
            <param name="directory">Папка для файлов из архива. Если не указана, то в папку архива.</param>
            <param name="deleteAfterUnzip">Удалить архив после распаковки.</param>
            <param name="fileCopyBufferSize">Размер буфера для копирования файлов. По умолчанию 50 МГб.</param>
            <param name="progress">Провайдер прогресса.</param>
            <returns>Возвращает список распакованных файлов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.Service.NsgZip.ReadZipDescription(System.String)">
            <summary>
            Метод чтения описания файла архива. Исполняется синхронно.
            </summary>
            <param name="zipFileName">Имя файла архива.</param>
            <returns>Возвращает строку описания архива, если найдена, иначе пустая строка.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgXmlSerializer">
            <summary>
            Класс сохранения и загрузки объектов в Xml.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgXmlSerializer.Version">
            <summary>
            Версия сериализатора.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgXmlSerializer.MultipleObjectSaveHeaderOnly">
            <summary>
            Флаг сохранения только шапки для сложных объектов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgXmlSerializer.HasDeclaration">
            <summary>
            Флаг декларации в ХМЛ-документе.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.ClearXmlNamesCach">
            <summary>
            Метод очиски кэша XML имен свойств.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.Serialize(NsgSoft.DataObjects.NsgSerializableObject)">
            <summary>
            Метод сохранения объекта в строку.
            </summary>
            <param name="obj">Объект для сохранения.</param>
            <returns>Возвращает сериализованный в строку объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.Serialize(System.IO.TextWriter,NsgSoft.DataObjects.NsgSerializableObject)">
            <summary>
            Метод сохранения объекта в текст.
            </summary>
            <param name="writer">Текстовый поток для сохранения.</param>
            <param name="obj">Объект для сохранения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.Serialize(System.Xml.XmlWriter,NsgSoft.DataObjects.NsgSerializableObject)">
            <summary>
            Метод сохранения объекта в Xml.
            </summary>
            <param name="writer">Xml поток для сохранения.</param>
            <param name="obj">Объект для сохранения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.Serialize(System.IO.Stream,NsgSoft.DataObjects.NsgSerializableObject)">
            <summary>
            Метод сохранения объекта в поток.
            </summary>
            <param name="stream">Поток для сохранения.</param>
            <param name="obj">Объект для сохранения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.Serialize(System.String,NsgSoft.DataObjects.NsgSerializableObject)">
            <summary>
            Метод сохранения объекта в файл.
            </summary>
            <param name="filename">Имя файла для сохранения.</param>
            <param name="obj">Объект для сохранения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.serializeInDocument(NsgSoft.DataObjects.NsgSerializableObject)">
            <summary>
            Метод сериализации объекта в документ XML (DOM).
            </summary>
            <param name="obj">Объект для сохранения.</param>
            <returns>Возвращает заполненный документ XML.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.serializeInElement(System.Xml.XmlElement,NsgSoft.DataObjects.NsgSerializableObject)">
            <summary>
            Метод сохранения объекта в объект назначения.
            </summary>
            <param name="element">Узел Xml дерева.</param>
            <param name="obj">Сохраняемый объект.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.isMultipleSave(NsgSoft.DataObjects.NsgSerializableObject)">
            <summary>
            Метод проверки
            </summary>
            <param name="obj">Сериализуемый объект.</param>
            <returns>Возвращает true, если разрешена сериализация контента MO,
             иначе </returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.getNodeName(System.Object)">
            <summary>
            Метод получения имени узла.
            </summary>
            <param name="obj">Объект в узле.</param>
            <returns>Строковое имя.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.Deserialize(System.String)">
            <summary>
            Метод загрузки объекта из файла.
            </summary>
            <param name="filename">Имя файла.</param>
            <returns>Возвращает загруженный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Метод загрузки объекта из потока.
            </summary>
            <param name="stream">Поток.</param>
            <returns>Возвращает загруженный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.Deserialize(System.IO.TextReader)">
            <summary>
            Метод загрузки объекта из текстового потока.
            </summary>
            <param name="reader">Текстовый поток.</param>
            <returns>Возвращает загруженный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.Deserialize(System.Xml.XmlReader)">
            <summary>
            Метод загрузки объекта из Xml потока.
            </summary>
            <param name="reader">Xml поток.</param>
            <returns>Возвращает загруженный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.Deserialize(System.Xml.XmlElement)">
            <summary>
            Метод загрузки объекта из XmlElement
            </summary>
            <param name="element">XmlElement.</param>
            <returns>Возвращает загруженный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlSerializer.deserializeFromElement(System.Object,System.Xml.XmlElement,System.Object)">
            <summary>
            Метод загрузки объекта.
            </summary>
            <param name="element">Узел Xml дерева.</param>
            <returns>Возвращает загруженный объект.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgSerializableObject">
            <summary>
            Класс сериализуемого объекта. Наследники этого класса обязательно 
             должны иметь пустой конструктор для сериализации/десериализации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSerializableObject.XmlTypeName">
            <summary>
            Получение имени типа для Xml.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSerializableObject.GetProperty(System.String)">
            <summary>
            Метод получения значения описателя указанного по имени свойства.
            </summary>
            <param name="propertyName">Имя свойства.</param>
            <returns>Возвращает описатель свойства.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSerializableObject.GetXmlName(System.Reflection.MemberInfo)">
            <summary>
            Метод получения значения атрибута NsgXmlName для указанного описателя.
            </summary>
            <param name="memberInfo">Описатель.</param>
            <returns>Возвращает значение атрибута NsgXmlName.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSerializableObject.GetPropertyXmlName(System.String)">
            <summary>
            Метод получения значения атрибута NsgXmlName для указанного по имени свойства.
            </summary>
            <param name="propertyName">Имя свойства.</param>
            <returns>Возвращает значение атрибута NsgXmlName.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSerializableObject.GetSerializableProperties">
            <summary>
            Метод получения списка описателей всех сериализуемых свойств.
            </summary>
            <returns>Возвращает список описателей.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSerializableObject.GetSerializableProperties(System.Type)">
            <summary>
            Метод получения списка описателей всех сериализуемых свойств для указанного типа.
            </summary>
            <param name="type">Тип.</param>
            <returns>Возвращает список описателей.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSerializableObject.GetPropertiesByCategory(System.String)">
            <summary>
            Метод получения списка описателей свойств по категории.
            </summary>
            <param name="category">Имя категории.</param>
            <returns>Возвращает список описателей.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSerializableObject.GetPropertyValue(System.String)">
            <summary>
            Метод получения значения свойства.
            </summary>
            <param name="propertyName">Имя свойства.</param>
            <returns>Значение свойства.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSerializableObject.GetPropertyValue(System.Reflection.PropertyInfo)">
            <summary>
            Метод получения значения свойства.
            </summary>
            <param name="property">Описатель свойства.</param>
            <returns>Значение свойства.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSerializableObject.GetPropertiesForSave(NsgSoft.DataObjects.NsgXmlNameAttribute.ObligatoryTypes)">
            <summary>
            Метод получения списка описателей свойств для сериализации.
            </summary>
            <returns>Возвращает список описателей свойств.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgReferencedObjectSelector">
            <summary>
            Класс простого элемента данных - Селектор объекта метаданных ссылочного типа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObjectSelector.#ctor">
            <summary>
            Конструктор класса Селектор объекта метаданных по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObjectSelector.#ctor(System.String)">
            <summary>
            Конструктор класса Селектор объекта метаданных по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObjectSelector.#ctor(System.String,NsgSoft.DataObjects.NsgObjectsFilter)">
            <summary>
            Конструктор класса Селектор объекта метаданных.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObjectSelector.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Селектор объекта метаданных из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObjectSelector.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgReferencedObjectSelector._UNTYPEDREFERENCE">
            <summary>
            Нетипизированная ссылка, для типизации
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReferencedObjectSelector.UntypedReferenceName">
            <summary>
            Нетипизированная ссылка, для типизации
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReferencedObjectSelector.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReferencedObjectSelector.Selected">
            <summary>
            Возвращает true, если объект спозиционирован на конкретный объект БД
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReferencedObjectSelector.Referent">
            <summary>
            Получение объекта ссылки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReferencedObjectSelector.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObjectSelector.ToDBQueue(System.Collections.Generic.Queue{NsgSoft.Database.NsgDBField})">
            <summary>
            Метод добавления объекта в очередь
            </summary>
            <param name="dbQueue">Очередь</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObjectSelector.FromDBQueue(System.Collections.Generic.Queue{NsgSoft.Database.NsgDBField})">
            <summary>
            Метод извлечения объекта из очереди
            </summary>
            <param name="dbQueue">Очередь</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObjectSelector.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObjectSelector.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReferencedObjectSelector.ToString">
            <summary>
            Метод приведения объекта к строке.
            </summary>
            <returns>Возвращает строковое представление объекта.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgXmlNameAttribute">
            <summary>
            Атрибут XML имени для сериализации/десериализации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgXmlNameAttribute.Name">
            <summary>
            Получение имени.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgXmlNameAttribute.ObligatoryTypes">
            <summary>
            Перечисление типа для обязательного атрибута.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgXmlNameAttribute.ObligatoryTypes.None">
            <summary>
            Не обязателен.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgXmlNameAttribute.ObligatoryTypes.Code">
            <summary>
            Обязателен для кода.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgXmlNameAttribute.ObligatoryTypes.Xml">
            <summary>
            Обязателен для XML.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgXmlNameAttribute.ObligatoryTypes.All">
            <summary>
            Обязателен везде
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgXmlNameAttribute.Obligatory">
            <summary>
            Получение и установка обязательного атрибута.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgXmlNameAttribute.Exclude">
            <summary>
            Получение и установка исключаемого атрибута.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgXmlNameAttribute.#ctor(System.String)">
            <summary>
            Конструктор атрибута.
            </summary>
            <param name="inName">Имя для Xml.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataRegistrationJournal">
            <summary>
            Класс журнала регистрации.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegistrationJournal.#ctor">
            <summary>
            Конструктор класса журнала регистрации по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegistrationJournal.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса журнала регистрации.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegistrationJournal.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса журнала регистрации из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegistrationJournal.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор класса журнала регистрации для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegistrationJournal.DateTime">
            <summary>
            Получение и установка даты/времени.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegistrationJournal.User">
            <summary>
            Получение и установка пользователя.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegistrationJournal.UserID">
            <summary>
            Получение и установка идентификатора пользователя.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegistrationJournal.Computer">
            <summary>
            Получение и установка компьютера.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegistrationJournal.Event">
            <summary>
            Получение и установка события.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegistrationJournal.Comment">
            <summary>
            Получение и установка комментария.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegistrationJournal.SystemUser">
            <summary>
            Получение и установка системного пользователя.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegistrationJournal.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegistrationJournal.GetLogicType">
            <summary>
            Метод получения типа логического объекта в виде значения NsgMultipleLogicTypes.
            </summary>
            <returns>Тип логического объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegistrationJournal.ToString">
            <summary>
            Получение строкового представления.
            </summary>
            <returns>Строковое представление.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegistrationJournal.GetRequsiteLocalizedName(System.String)">
            <summary>
            Метод получения локализованного имени реквизита. Получение через ресурсы
             в формате /имя базового типа + '.' + resName/.
            </summary>
            <param name="resName">Имя ресурса.</param>
            <returns>Возвращает локализованное имя свойства.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegistrationJournal.GetSubTypesForAdding">
            <summary>
            Метод получения списка групп доступных для добавления в объект типов.
            </summary>
            <returns>Список групп.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegistrationJournal.GetTypesForAdding(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Метод получения списка доступных для добавления в объект типов по группе.
            </summary>
            <param name="group">Тип группы.</param>
            <returns>Список типов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegistrationJournal.Edit(System.String[])">
            <summary>
            Метод редактирования строки объекта.
            </summary>
            <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataAssemblyObject">
            <summary>
            Объект для хранения в БД обновлений сборок.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataAssemblyObject.Names">
            <summary>
            Класс имен полей объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAssemblyObject.Names.AsmName">
            <summary>
            Имя сборки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAssemblyObject.Names.AsmVersion">
            <summary>
            Версия сборки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAssemblyObject.Names.AsmHash">
            <summary>
            Хэш сборки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAssemblyObject.Names.AsmData">
            <summary>
            Данные сборки.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataAssemblyObject.AssemblyDescriptor">
            <summary>
            Класс описатель сборки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataAssemblyObject.AssemblyDescriptor.ID">
            <summary>
            Идентификатор.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataAssemblyObject.AssemblyDescriptor.Version">
            <summary>
            Версия.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataAssemblyObject.AssemblyDescriptor.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataAssemblyObject.AssemblyDescriptor.Hash">
            <summary>
            Хэш.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAssemblyObject.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAssemblyObject.#ctor(System.String)">
            <summary>
            Конструктор 
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAssemblyObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAssemblyObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAssemblyObject.ID">
            <summary>
            Имя сборки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAssemblyObject.AsmName">
            <summary>
            Имя сборки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAssemblyObject.AsmVersion">
            <summary>
            Версия сборки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAssemblyObject.AsmHash">
            <summary>
            Хэш сборки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAssemblyObject.AsmData">
            <summary>
            Данные сборки.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAssemblyObject.BaseImageKey">
            <summary>
            Имя картинки класса
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAssemblyObject.Edit(System.String[])">
            <summary>
            Метод редактирования строки объекта.
            </summary>
            /// <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAssemblyObject.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAssemblyObject.GetLogicType">
            <summary>
            Метод получения типа логического объекта в виде значения NsgMultipleLogicTypes.
            </summary>
            <returns>Тип логического объекта.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataAssemblyObject.CloneObject">
            <summary>
            Создание клона объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAssemblyObject.ReadAssemblyInformation">
            <summary>
            Метод чтения информации о сборках в БД.
            </summary>
            <returns>Возвращает список хранящихся в БД сборок и их описателей.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAssemblyObject.ExtractAssemblies(System.String,System.String[])">
            <summary>
            Метод чтения и распаковки сборок из БД.
            </summary>
            <param name="directory">Папка для распаковки.</param>
            <param name="names">Имена сборок для загрузки, если не указаны, то все.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataAssemblyObject.FillNumber">
            <summary>
            Метод заполнения уникального номера объекта.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataSystemObject">
            <summary>
            Объект для хранения в БД системной информации.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataSystemObject.Names">
            <summary>
            Класс имен полей объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.Names.ObjectName">
            <summary>
            Имя объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.Names.ObjectData">
            <summary>
            Данные объекта.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames">
            <summary>
            Класс имен предопределенных объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames.AutoCloseProgramm">
            <summary>
            Флаг автозакрытия программы
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames.ConfigUpdateFlag">
            <summary>
            Флаг обновления конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames.ConfigVersion">
            <summary>
            Версия Конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames.ConfigGuid">
            <summary>
            Идентификатор Конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames.MetadataVersion">
            <summary>
            Версия метаданных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames.MetadataGuid">
            <summary>
            Идентификатор метаданных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames.LoaderUpdater">
            <summary>
            Версия протокола обновлений Лоадера.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames.ConfigName">
            <summary>
            Имя конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames.ConfigExeName">
            <summary>
            Имя конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames.ConfigDescription">
            <summary>
            Описание конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.PredefinedNames.ConfigCopyright">
            <summary>
            Копирайт конфигурации.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataSystemObject.CommonData">
            <summary>
            Класс общих системных данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.AutoCloseProgramm">
            <summary>
            Флаг автозакрытия программы
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.ConfigurationUpdateFlag">
            <summary>
            Флаг обновления конфигурации.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.ConfigurationUpdateInfo">
            <summary>
            Флаг обновления конфигурации.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.ConfigurationGUID">
            <summary>
            Идентификатор Конфигурации.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.ConfigurationVersion">
            <summary>
            Версия Конфигурации.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.MetadataGUID">
            <summary>
            Идентификатор метаданных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.MetadataVersion">
            <summary>
            Версия метаданных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.LoaderUpdater">
            <summary>
            Версия протокола обновлений Лоадера.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.ConfigName">
            <summary>
            Имя конфигурации.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.ConfigExeName">
            <summary>
            Имя файла конфигурации.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.ConfigDescription">
            <summary>
            Описание конфигурации.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataSystemObject.CommonData.ConfigCopyright">
            <summary>
            Копирайт конфигурации.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataSystemObject.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataSystemObject.Edit(System.String[])">
            <summary>
            Метод редактирования строки объекта.
            </summary>
            <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.ObjectName">
            <summary>
            Имя объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.ObjectData">
            <summary>
            Данные объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataSystemObject.Empty">
            <summary>
            Пустой объект этого типа
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataSystemObject.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataSystemObject.GetLogicType">
            <summary>
            Метод получения типа логического объекта в виде значения NsgMultipleLogicTypes.
            </summary>
            <returns>Тип логического объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataSystemObject.ReadCommonData">
            <summary>
            Метод получения общих системных данных.
            </summary>
            <returns>Возвращает системные данные.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataSystemObject.getSystemObjectMDVersionDeprecated(NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Метод получения версии метаданных через системную функцию.
             Устаревший метод, для старых конфигураций.
            </summary>
            <param name="mngr">Менеджер БД.</param>
            <returns>Возвращает версию метаданных.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataSystemObject.getSystemObjectMDGuidDeprecated(NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Метод получения идентификатора метаданных через системную функцию.
             Устаревший метод, для старых конфигураций.
            </summary>
            <param name="mngr">Менеджер БД.</param>
            <returns>Возвращает идентификатор метаданных.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCommandLineParser">
            <summary>
            Класс анализа параметров командной строки.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCommandLineParser.Command">
            <summary>
            Перечисление типов команд системе.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.Command.Launch">
            <summary>
            Запуск.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.Command.UpdateDB">
            <summary>
            Принудительное обновление.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.Command.HealDB">
            <summary>
            Поиск ошибок БД.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.Command.Server">
            <summary>
            Запуск в режиме сервера.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.Command.GetFromDB">
            <summary>
            Принудительное обновление из БД.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCommandLineParser.ParseResult">
            <summary>
            Класс результата анализа коммандной строки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.ParseResult.DatabaseInfo">
            <summary>
            Информация о базе данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.ParseResult.LoginUsername">
            <summary>
            Имя пользователя программы.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.ParseResult.LoginUserpassword">
            <summary>
            Пароль пользователя программы.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.ParseResult.Command">
            <summary>
            Команда системе.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.ParseResult.WaitBeforeUpdate">
            <summary>
            Ожидание перед обновлением.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.ParseResult.Interval">
            <summary>
            Интервал обработок сервера в секундах. По умолчанию 5 мин.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.ParseResult.Configuration">
            <summary>
            Конфигурация.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCommandLineParser.ParseResult.IsEmpty">
            <summary>
            Возвращает true, если объект не заполнен, иначе false.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCommandLineParser.ParseResult.HasLoginInfo">
            <summary>
            Возвращает true, если задана информация для логина в систему, иначе false.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.HELP">
            <summary>
            Помощь.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.SERVER">
            <summary>
            Сервер базы данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.DATABASE">
            <summary>
            Имя базы данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.DBUSERNAME">
            <summary>
            Имя пользователя базы данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.DBUSERPASS">
            <summary>
            Пароль пользователя базы данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.DBINTEGRATEDSECURITY">
            <summary>
            Windows аутентификация в базе данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.DBTYPE">
            <summary>
            Тип базы данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.LOGINUSERNAME">
            <summary>
            Имя пользователя программы.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.LOGINUSERPASS">
            <summary>
            Пароль пользователя программы.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.COMMAND">
            <summary>
            Команда системе.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.INTERVAL">
            <summary>
            Интервал обработок сервера.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.CONFIGURATION">
            <summary>
            Конфигурация в Загрузчике.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.DB_MSSQL">
            <summary>
            Тип базы данных MSSQL.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.COM_LAUNCH">
            <summary>
            Запуск приложения в рабочем режиме.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.COM_UPDATEDB">
            <summary>
            Принудительное обновление базы данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.WAITUPDATEDB">
            <summary>
            Ожидание выхода пользователей перед обновлением.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.COM_HEALDB">
            <summary>
            Поиск ошибок базы данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.COM_SERVER">
            <summary>
            Запуск приложения в режиме сервера.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.YES">
            <summary>
            ДА.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCommandLineParser.NO">
            <summary>
            НЕТ.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCommandLineParser.IsHelpNeeded(System.String[])">
            <summary>
            Метод проверки наличия параметра 'Помощь' в списке аргументов.
            </summary>
            <param name="args">Список аргументов командной строки.</param>
            <returns>Возвращает булевый результат проверки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCommandLineParser.PrintHelp">
            <summary>
            Метод печати помощи.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCommandLineParser.CreateCommandArgs(System.String,System.String,System.String,System.String,System.Boolean,NsgSoft.Database.DatabaseType,System.String,System.String,NsgSoft.DataObjects.NsgCommandLineParser.Command,System.String,System.Int32,System.Boolean)">
            <summary>
            Метод создания командной строки аргументов.
            </summary>
            <param name="server">Имя сервреа БД.</param>
            <param name="dbName">Имя БД.</param>
            <param name="dbUsername">Имя пользователя БД.</param>
            <param name="dbUserpass">Паоль пользователя БД.</param>
            <param name="integratedSecurity">Использовать Windows аутентификацию.</param>
            <param name="dbType">Тип БД.</param>
            <param name="loginUsername">Имя пользователя системы для автологина.</param>
            <param name="loginUserpass">Пароль пользователя системы для автологина.</param>
            <param name="command">Команда системе.</param>
            <param name="configuration">Имя конфигурации.</param>
            <param name="interval">Интервал обработок сервера в секундах.</param>
            <returns>Возвращает командную строку с аргументами.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCommandLineParser.Parse(System.String[])">
            <summary>
            Метод анализа параметров коммандной строки.
            </summary>
            <param name="args">Список аргументов командной строки.</param>
            <returns>Возвращает результат анализа.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCommandLineParser.CutParameter(System.String,System.String)">
            <summary>
            Метод выделения в аргументе значения без параметра.
            </summary>
            <param name="source">Источник.</param>
            <param name="parameter">Параметр.</param>
            <returns>Возвращает значение по параметру.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMailMessageManager">
            <summary>
            Класс управления сообщениями, посылаемыми в системе
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMailMessageManager.CheckMessageInterval">
            <summary>
            Период опрасо сообщений (напоминаний) для пользователя в мс. Если интервал равен нулю, проверка не производится.
            По умолчанию, проверка раз в минуту
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMailMessageManager.#ctor">
            <summary>
            Конструктор по умолчанию
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMailMessageManager.AddedNewMessageEventHandler">
            <summary>
            Делегат добавления новых сообщений в менеджер.
            </summary>
            <param name="sender">Источник.</param>
            <param name="msgs">Новые сообщения</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgMailMessageManager.AddedNewMsgs">
            <summary>
            Событие о добавлении новых сообщений  в менеджер.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMailMessageManager.OnAddedNewMessages(NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод вызова события о добавлении новых сообщений  в менеджер.
            </summary>
            <param name="msgs">Новые сообщения.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMailMessageManager.Messages">
            <summary>
            Полученные сообщения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMailMessageManager.UpdateInterval">
            <summary>
            Период запроса данных о новых сообщениях(в минутах)
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMailMessageManager.asynhGet_DoWork(NsgSoft.DataObjects.NsgThread,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Получение сообщений
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMailMessageManager.DeleteMessages(System.Collections.Generic.List{System.Object})">
            <summary>
            Удаление сообщений
            </summary>
            <param name="ids">Идентификаторы сообщений</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMailMessageFieldNames">
            <summary>
            Класс имен полей  системного сообщения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMailMessageFieldNames.MsgReceiver">
            <summary>
            Адресат сообщения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMailMessageFieldNames.MsgStartedDate">
            <summary>
            Время появления сообщения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMailMessageFieldNames.MsgStatus">
            <summary>
            Статус сообщения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMailMessageFieldNames.MsgActualDate">
            <summary>
            Актуальность сообщения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMailMessageFieldNames.MsgType">
            <summary>
            Тип сообщения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMailMessageFieldNames.MsgText">
            <summary>
            Текст сообщения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMailMessageFieldNames.MsgAuthor">
            <summary>
            Автор сообщения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMailMessageFieldNames.MsgObject">
            <summary>
            Объект сообщения
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgUsersRightsContainer1">
            <summary>
            Клас контейнер прав пользователей.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUsersRightsContainer1.ReloadRights">
            <summary>
            Перезагружать уже имеющиеся права при вызове LoadUserRights.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUsersRightsContainer1.Metadata">
            <summary>
            Метаданные.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUsersRightsContainer1.usersWorkRightsList">
            <summary>
            Список прав пользователей (пользователь, объект МД, права) - рабочий.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUsersRightsContainer1.usersRealRightsList">
            <summary>
            Список прав пользователей (пользователь, объект МД, операция, доступ) - реально проставленные значения.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUsersRightsContainer1.usersCompareList">
            <summary>
            Список условий пользователей (пользователь, объект МД, условие).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUsersRightsContainer1.usersStartObjectList">
            <summary>
            Список объектов при загрузке для пользователей (пользователь, объект).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUsersRightsContainer1.usersHierarchy">
            <summary>
            Иерархия пользователей. (пользователь, родитель)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUsersRightsContainer1.usersInheritance">
            <summary>
            Список наследования фильтров пользователей. (пользователь, объект МД, флаг наследования)
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetAdditionalCompareByNamesEventHandler">
            <summary>
            Делегат получения дополнительных условий на объект для пользователя по именам.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <param name="metaObjectFullName">Полное имя объекта.</param>
            <returns>Возвращает условие по объекту.</returns>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetAdditionalCompareByNames">
            <summary>
            Событие для получения дополнительных условий на объект для пользователя по именам.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.onGetAdditionalCompareByNames(System.String,System.String)">
            <summary>
            Метод вызова события для получения дополнительных условий на объект для пользователя по именам.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <param name="metaObjectFullName">Полное имя объекта.</param>
            <returns>Возвращает условие по объекту.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetAdditionalCompareByObjectsEventHandler">
            <summary>
            Делегат получения дополнительных условий на объект для пользователя по объектам.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="metaObject">Объект.</param>
            <returns>Возвращает условие по объекту.</returns>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetAdditionalCompareByObjects">
            <summary>
            Событие для получения дополнительных условий на объект для пользователя по объектам.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.onGetAdditionalCompareByObjects(NsgSoft.DataObjects.NsgDataDictionary,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод вызова события для получения дополнительных условий на объект для пользователя по объектам.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="metaObject">Объект.</param>
            <returns>Возвращает условие по объекту.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.#ctor(NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса.
            </summary>
            <param name="metaData">Метаданные.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetAvailableOpertionsForObject(NsgSoft.DataObjects.NsgMultipleObjectDescriptor)">
            <summary>
            Метод получения доступных операций по объекту метаданных.
            </summary>
            <param name="metaDesc">Описатель объекта метаданных.</param>
            <returns>Возвращает список перечисление операций.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetAvailableOpertionsForObject(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод получения доступных операций по объекту метаданных.
            </summary>
            <param name="metaObject">Объект метаданных.</param>
            <returns>Возвращает список перечисление операций.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetUserRights(NsgSoft.DataObjects.NsgDataDictionary,System.String)">
            <summary>
            Получить права пользователя на объект метаданных.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="metaObjectFullName">Полное имя объекта метаданных.</param>
            <returns>Возвращает права на объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetUserRights(NsgSoft.DataObjects.NsgDataDictionary,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Получить права пользователя на объект метаданных.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="metaObject">Объект метаданных.</param>
            <returns>Возвращает права на объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetUserRights(System.String,System.String)">
            <summary>
            Получить права пользователя на объект метаданных.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <param name="metaObjectFullName">Полное имя объекта метаданных.</param>
            <returns>Возвращает права на объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetUserRealRights(NsgSoft.DataObjects.NsgDataDictionary,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Получить права пользователя на объект метаданных. Заданные права, без учета наследования.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="metaObject">Объект метаданных.</param>
            <returns>Возвращает права на объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetUserFilterInheritance(NsgSoft.DataObjects.NsgDataDictionary,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Получить флаг наследования фильтра по объекту метаданных.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="metaObject">Объект метаданных.</param>
            <returns>Возвращает фильтр на объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetUserFilterInheritance(System.String,System.String)">
            <summary>
            Получить флаг наследования фильтра по объекту метаданных.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <param name="metaObjectFullName">Полное имя объекта метаданных.</param>
            <returns>Возвращает фильтр на объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetUserCompare(NsgSoft.DataObjects.NsgDataDictionary,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Получить фильтр пользователя на объект метаданных.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="metaObject">Объект метаданных.</param>
            <returns>Возвращает фильтр на объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetUserCompare(System.String,System.String)">
            <summary>
            Получить фильтр пользователя на объект метаданных.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <param name="metaObjectFullName">Полное имя объекта метаданных.</param>
            <returns>Возвращает фильтр на объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetUserStartObject(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Получить объект при запуске для пользователя.
            </summary>
            <param name="user">Пользователь.</param>
            <returns>Возвращает объект при запуске.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetUserStartObject(System.String)">
            <summary>
            Получить объект при запуске для пользователя.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <returns>Возвращает объект при запуске.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.getUserCompare(System.String,System.String,System.Boolean)">
            <summary>
            Получить фильтр пользователя на объект метаданных.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <param name="metaObjectFullName">Полное имя объекта метаданных.</param>
            <param name="needAdditional">Запросить дополнительные условия.</param>
            <returns>Возвращает фильтр на объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.collectParentComparies(NsgSoft.DataObjects.NsgCompare,System.String,System.String)">
            <summary>
            Метод сложения условий с учетом родителя.
            </summary>
            <param name="begin">Начальные условия.</param>
            <param name="userName">Пользователь.</param>
            <param name="metaObjectFullName">Имя объекта метаданных.</param>
            <returns>Возвращает результирующие условия.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.GetDefaultRights">
            <summary>
            Метод получения прав по умолчанию.
            </summary>
            <returns>Возвращает права.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.LoadUserRights(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Метод загрузки прав текущего пользователя.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.getAccessToOperasion(NsgSoft.DataObjects.NsgDataDictionary,NsgSoft.DataObjects.NsgMultipleObjectDescriptor,NsgSoft.Common.NsgMultipleObjectOperation,NsgSoft.DataObjects.NsgMemoryTable)">
            <summary>
            Метод получения прав пользователя на объект метаданных по заданной операции.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="metaObject">Описатель объекта метаданных.</param>
            <param name="operation">Операция.</param>
            <param name="userRights">Таблица прав пользователя.</param>
            <returns>Возвращает права.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.getAccessFromTable(NsgSoft.DataObjects.NsgMemoryTable,NsgSoft.DataObjects.NsgMultipleObjectDescriptor,System.String)">
            <summary>
            Метод получения прав из таблицы прав по заданному полю.
            </summary>
            <param name="userRights">Таблица прав.</param>
            <param name="metaObject">Описатель объекта метаданных.</param>
            <param name="fieldName">Поле.</param>
            <returns>Возвращает права.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.getCompareFromTable(NsgSoft.DataObjects.NsgMemoryTable,NsgSoft.DataObjects.NsgMultipleObjectDescriptor,System.String)">
            <summary>
            Метод получения условия из таблицы прав по заданному полю.
            </summary>
            <param name="userRights">Таблица прав.</param>
            <param name="metaObject">Описатель объекта метаданных.</param>
            <param name="fieldName">Поле.</param>
            <returns>Возвращает условие.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.getValueFromTable(NsgSoft.DataObjects.NsgMemoryTable,NsgSoft.DataObjects.NsgMultipleObjectDescriptor,System.String)">
            <summary>
            Метод получения значения из таблицы прав по заданному полю.
            </summary>
            <param name="userRights">Таблица прав.</param>
            <param name="metaObject">Описатель объекта метаданных.</param>
            <param name="fieldName">Поле.</param>
            <returns>Возвращает права.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.createNewRightsObject(NsgSoft.DataObjects.NsgMultipleObjectDescriptor,NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Метод создания новой записи регистра прав без сохранения.
            </summary>
            <param name="metaObject">Описатель объекта.</param>
            <param name="user">Пользователь.</param>
            <returns>Возвращает новую запись.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.checkAccessEnum">
            <summary>
            Проверить наличие заполненного перечисления доступа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.IsAdministrator(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Метод проверки пользователя на административные права.
            </summary>
            <param name="userSet">Пользователь.</param>
            <returns>Возвращает булевый результат проверки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUsersRightsContainer1.IsCurrentUserAdministrator">
            <summary>
            Метод проверки текущего пользователя на административные права.
            </summary>
            <returns>Возвращает булевый результат проверки.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataXmlExporter">
            <summary>
            Вспомогательный класс экспорта данных в XML.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataXmlExporter.DATA_NODE">
            <summary>
            Узел 'Данные'.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataXmlExporter.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataXmlExporter.Finalize">
            <summary>
            Деструктор объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataXmlExporter.Item(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Получение объекта записи данных в XML.
            </summary>
            <param name="obj">Объект метаданных.</param>
            <returns>Возвращает объект записи данных в XML.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataXmlExporter.Files">
            <summary>
            Получить имена всех файлов на экспорте.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataXmlExporter.IsClosed">
            <summary>
            Признак закрытия всех потоков записи
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataXmlExporter.AddExportInterface(NsgSoft.DataObjects.NsgInterfacedObject,System.Guid)">
            <summary>
            Метод добавления интерфейса для экспорта.
            </summary>
            <param name="interfObject">Интерфейс.</param>
            <param name="refInherit">Идентификатор наследника.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataXmlExporter.UnloadExportInterfaces">
            <summary>
            Метод выгрузки из класса экспорта списка интерфейсов для сохранения.
            </summary>
            <returns>Возвращает список интерфейсов для экспорта в формате
             {имя типа интерфейса, список идентификаторов наследников (ключи)}.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataXmlExporter.GetXmlWriter(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод получения объекта записи данных в XML.
            </summary>
            <param name="obj">Объект метаданных.</param>
            <returns>Возвращает объект записи данных в XML.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataXmlExporter.Close">
            <summary>
            Метод закрытия всех потоков записи.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataXmlExporter.createNew(System.String)">
            <summary>
            Метод создания нового вхождения.
            </summary>
            <param name="name">Имя.</param>
            <returns>Возвращает XML объект.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgUserActionsRegistrator">
            <summary>
            Класс регистратор действий пользователей в БД.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.registerAction(NsgSoft.DataObjects.NsgMetaData,NsgSoft.DataObjects.NsgDataDictionary,System.String,System.String,System.String,NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод регистрации действия пользователя.
            </summary>
            <param name="metadata">Метаданные.</param>
            <param name="user">Пользователь.</param>
            <param name="computer">Компьютер.</param>
            <param name="eventText">Текст события.</param>
            <param name="comment">Комментарий.</param>
            <param name="elements">Список элементов.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.getNewRecord(NsgSoft.DataObjects.NsgMetaData,System.String,System.String,System.String,System.String,System.Guid,System.String)">
            <summary>
            Метод получения новой записи регистратора.
            </summary>
            <param name="metadata">Метаданные.</param>
            <param name="computer">Компьютер.</param>
            <param name="eventText">Текст события.</param>
            <param name="comment">Комментарий.</param>
            <param name="userName">Пользователь.</param>
            <param name="userID">ID пользователя.</param>
            <param name="sysUser">Системный пользователь.</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterObjectAction(NsgSoft.DataObjects.NsgDataDictionary,System.String,NsgSoft.DataObjects.NsgUserRegistrationActions,System.String,NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод регистрации действия пользователя.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="computer">Компьютер.</param>
            <param name="regEvent">Событие регистрации.</param>
            <param name="comment">Комментарий.</param>
            <param name="elements">Список элементов.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterObjectAction(NsgSoft.DataObjects.NsgDataDictionary,System.String,NsgSoft.DataObjects.NsgUserRegistrationActions,NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод регистрации действия пользователя.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="computer">Компьютер.</param>
            <param name="regEvent">Событие регистрации.</param>
            <param name="elements">Список элементов.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterObjectAction(System.String,NsgSoft.DataObjects.NsgUserRegistrationActions,NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод регистрации действия текущего пользователя.
            </summary>
            <param name="computer">Компьютер.</param>
            <param name="regEvent">Событие регистрации.</param>
            <param name="elements">Список элементов.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterObjectAction(System.String,NsgSoft.DataObjects.NsgUserRegistrationActions,System.String,NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод регистрации действия текущего пользователя.
            </summary>
            <param name="computer">Компьютер.</param>
            <param name="regEvent">Событие регистрации.</param>
            <param name="comment">Комментарий.</param>
            <param name="elements">Список элементов.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterObjectAction(NsgSoft.DataObjects.NsgDataDictionary,NsgSoft.DataObjects.NsgUserRegistrationActions,NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод регистрации действия пользователя на текущем компьютере.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="regEvent">Событие регистрации.</param>
            <param name="elements">Список элементов.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterObjectAction(NsgSoft.DataObjects.NsgDataDictionary,NsgSoft.DataObjects.NsgUserRegistrationActions,System.String,NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод регистрации действия пользователя на текущем компьютере.
            </summary>
            <param name="user">Пользователь.</param>
            <param name="regEvent">Событие регистрации.</param>
            <param name="comment">Комментарий.</param>
            <param name="elements">Список элементов.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterObjectAction(NsgSoft.DataObjects.NsgUserRegistrationActions,NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод регистрации действия текущего пользователя на текущем компьютере.
            </summary>
            <param name="regEvent">Событие регистрации.</param>
            <param name="elements">Список элементов.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterObjectAction(NsgSoft.DataObjects.NsgUserRegistrationActions,System.String,NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод регистрации действия текущего пользователя на текущем компьютере.
            </summary>
            <param name="regEvent">Событие регистрации.</param>
            <param name="comment">Комментарий.</param>
            <param name="elements">Список элементов.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterTextAction(NsgSoft.DataObjects.NsgMetaData,NsgSoft.DataObjects.NsgDataDictionary,System.String,System.String,System.String)">
            <summary>
            Метод регистрации действия пользователя.
            </summary>
            <param name="metadata">Метаданные.</param>
            <param name="user">Пользователь.</param>
            <param name="computer">Компьютер.</param>
            <param name="eventText">Текст события.</param>
            <param name="comment">Комментарий.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterTextAction(NsgSoft.DataObjects.NsgMetaData,System.String,System.String,NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод регистрации действия пользователя.
            </summary>
            <param name="metadata">Метаданные.</param>
            <param name="eventText">Текст события.</param>
            <param name="comment">Комментарий.</param>
            <param name="elements">Список элементов.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterTextAction(NsgSoft.DataObjects.NsgMetaData,System.String,System.String,System.String)">
            <summary>
            Метод регистрации действия текущего пользователя.
            </summary>
            <param name="metadata">Метаданные.</param>
            <param name="computer">Компьютер.</param>
            <param name="eventText">Текст события.</param>
            <param name="comment">Комментарий.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterTextAction(NsgSoft.DataObjects.NsgMetaData,NsgSoft.DataObjects.NsgDataDictionary,System.String,System.String)">
            <summary>
            Метод регистрации действия пользователя на текущем компьютере.
            </summary>
            <param name="metadata">Метаданные.</param>
            <param name="user">Пользователь.</param>
            <param name="eventText">Текст события.</param>
            <param name="comment">Комментарий.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterTextAction(NsgSoft.DataObjects.NsgMetaData,System.String,System.String)">
            <summary>
            Метод регистрации действия текущего пользователя на текущем компьютере.
            </summary>
            <param name="metadata">Метаданные.</param>
            <param name="user">Пользователь.</param>
            <param name="eventText">Текст события.</param>
            <param name="comment">Комментарий.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserActionsRegistrator.RegisterTextAction(NsgSoft.DataObjects.NsgMetaData,System.String)">
            <summary>
            Метод регистрации действия текущего пользователя на текущем компьютере.
            </summary>
            <param name="metadata">Метаданные.</param>
            <param name="user">Пользователь.</param>
            <param name="eventText">Текст события.</param>
            <returns>Возвращает результат операции.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgEventInvoker">
            <summary>
            Класс перебрасывающий исполнение события на другой поток.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgEventInvoker.MainThreadID">
            <summary>
            ID главного потока.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgEventInvoker.#ctor">
            <summary>
            Конструктор класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgEventInvoker.InvokeRequired">
            <summary>
            Флаг необходимости перевода в родительский поток.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgEventInvoker.InvokeEventSyncOnMainThread(System.Delegate,System.Object[])">
            <summary>
            Метод синхронного переноса исполнения события на основной поток.
            </summary>
            <param name="eventInvoke">Событие.</param>
            <param name="objects">Аргументы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgEventInvoker.InvokeEventAsyncOnMainThread(System.Delegate,System.Object[])">
            <summary>
            Метод асинхронного переноса исполнения события на основной поток.
            </summary>
            <param name="eventInvoke">Событие.</param>
            <param name="objects">Аргументы.</param>
            <returns>Возвращает результат асинхронной операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgEventInvoker.invokeEventOnMainThread(System.Boolean,System.Delegate,System.Object[],NsgSoft.Common.NsgAsyncResult)">
            <summary>
            Метод переноса исполнения события на основной поток.
            </summary>
            <param name="isSync">Флаг синхронного переноса, если false - то асинхронный.</param>
            <param name="eventInvoke">Событие.</param>
            <param name="objects">Аргументы.</param>
            <param name="result">Результат асинхронной операции.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgEventInvoker.invokeEvent(System.Object)">
            <summary>
            Метод вызова события.
            </summary>
            <param name="objs">Аргументы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgEventInvoker.ShowEventError(System.Delegate,System.Exception)">
            <summary>
            Метод отображения ошибки при вызове события.
            </summary>
            <param name="delegateEvent">Делегат события.</param>
            <param name="ex">Исключение.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgEventInvoker.IsValidTarget(System.Object)">
            <summary>
            Метод проверки приемника сообщения.
            </summary>
            <param name="target">Приемник.</param>
            <returns>Возвращает результат проверки.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgHandlingAbortException">
            <summary>
            Класс исключения при проведении.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgHandlingAbortException.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgHandlingAbortException.#ctor(System.String)">
            <summary>
            Конструктор с параметрами.
            </summary>
            <param name="message">Строка сообщения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgHandlingAbortException.#ctor(System.String,System.Exception)">
            <summary>
            Конструктор с параметрами.
            </summary>
            <param name="message">Строка сообщения.</param>
            <param name="innerException">Вложенное исключение.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgLanguageString.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataReadEventHandler">
            <summary>
            Делегат события о прочтении данных.
            </summary>
            <param name="sender">Источник события.</param>
            <param name="objects">Список считанных объектов.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgVirtualCursor`1">
            <summary>
            Класс Курсор - итератор выборки объектов.   
            </summary>
            <typeparam name="Template">Шаблон сложного объекта, с которым работает курсор.</typeparam>
            <remarks>Курсор следует использовать вместо метода FindAll в тех случаях, когда объем 
            обрабатываемых данных может быть достаточно велик и требуется обрабатывать данные порциями.
            Курсор осуществляет выборку данных порциями (по умолчанию, по 100 объектов). 
            Эта величина может быть изменена с помощью свойства RowToFetch</remarks>
            <example>
            АдресаКонтрагентов спрАдр = АдресаКонтрагентов.Новый();
            NsgVirtualCursor\АдресаКонтрагентов\ курсорАдр = спрАдр.GetNewVirtualCursor\АдресаКонтрагентов\();
            while ((спрАдр = курсорАдр.Next) != null)
            {
                спрАдр.Edit();
                спрАдр.Post();
            }
            </example>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursor`1.innerSorting">
            <summary>
            Внутренние параметры сортировки, с добавлением сортировок по служебным полям.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursor`1.innerCompare">
            <summary>
            Внутренние параметры отбора, с учетом служебных полей.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursor`1.results">
            <summary>
            Очередь выбранных из базы элементов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursor`1.current">
            <summary>
            Текущий выбранный элемент.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursor`1.innerCursor">
            <summary>
            Вложенный курсор.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursor`1.startRow">
            <summary>
            Индекс первой строки в выборке.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursor`1.countRow">
            <summary>
            Количество строк в курсоре текущего уровня вложенности.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.CountRow">
            <summary>
            Кэш для курсора
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.IsHasCount">
            <summary>
            Возвращает true, если количество уже запрошено в БД, иначе false.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursor`1.Level">
            <summary>
            Уровень вложенности курсора (уровень иерархии объекта в курсоре).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursor`1.lastFetchedItemIndex">
            <summary>
            Индекс последней выбранной строки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursor`1.enableHierarchy">
            <summary>
            Выборка с иерархией или нет.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgVirtualCursor`1.FetchGroup">
            <summary>
            Возвращать группы или нет.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.RowToFetch">
            <summary>
            Количество строк считываемых за один запрос, не может быть меньше чем NsgSettings.MaxRowsToFetch
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgVirtualCursor`1.BackgroundReadCompleted">
            <summary>
            Событие об окончании упреждающего чтения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.OnBackgroundReadCompleted">
            <summary>
            Метод вызывает событие об окончании чтения.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgVirtualCursor`1.ReadCompleted">
            <summary>
            Событие об окончании чтения в кэш.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.OnReadCompleted">
            <summary>
            Метод вызывает событие об окончании чтения в кэш.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.#ctor(System.Boolean,System.String,NsgSoft.Database.NsgDatabaseManager,`0,NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Конструктор класса Курсор с открытием.
            </summary>
            <param name="inLock">Признак блокировки данных.</param>
            <param name="inTableName">Имя таблицы БД.</param>
            <param name="inDatabaseMngr">Объект управления БД.</param>
            <param name="inOwner">Сложный объект - владелец курсора.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.#ctor(System.Boolean,System.String,NsgSoft.Database.NsgDatabaseManager,`0)">
            <summary>
            Конструктор класса Курсор.
            </summary>
            <param name="inLock">Признак блокировки данных.</param>
            <param name="inTableName">Имя таблицы БД.</param>
            <param name="inDatabaseMngr">Объект управления БД.</param>
            <param name="inOwner">Сложный объект - владелец курсора.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.LoadingReferents">
            <summary>
            Список загружаемый для объектов ссылок.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.FirstInCash">
            <summary>
            Первый индекс в кэше.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.LastInCash">
            <summary>
            Последний индекс в кэше.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.Clone">
            <summary>
            Получение клона курсора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.IsLock">
            <summary>
            Получение состояния блокировки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.TableName">
            <summary>
            Получение имени таблицы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.Sorting">
            <summary>
            Получение  и установка сортировки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.Comparison">
            <summary>
            Получение сравнений.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.Next">
            <summary>
            Получение следущей записи курсора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.NextFromChild">
            <summary>
            Очередной элемент по иерархии.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.NextOnSameLevel">
            <summary>
            Очередной объект текущего уровня вложенности.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.GetObject(System.Guid)">
            <summary>
            Метод получения объекта из кэша по идентификатору.
            </summary>
            <param name="value">Идентификатор объекта.</param>
            <returns>Возвращает найденный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.ContainInCash(System.Int32)">
            <summary>
            Метод проверки наличия элемента в кэше по индексу.
            </summary>
            <param name="index">Индекс элемента.</param>
            <returns>Возвращает результат поиска.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.ContainInCash(`0)">
            <summary>
            Метод проверки наличия элемента в кэше по значению.
            </summary>
            <param name="index">Значение элемента.</param>
            <returns>Возвращает результат поиска.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.findEndObject(System.Int32,System.Int32@,System.Boolean@)">
            <summary>
            если кэш не пуст найти ближайший объект на который можно опереться для запроса
            </summary>
            <param name="i">индекс запрашиваемого элемента</param>
            <param name="startFetchIndex">позиция с которой начнется выборка данных</param>
            <returns>найденный опорный объект</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.setParentInCompareParam(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Устанавливает в переданный набо параметров параметр - родитель, 
            родителем записывается либо текущий выбранный объект, если он есть, либо
            владелец курсора.
            </summary>
            <param name="nc">Набор параметров в котором нужно изменить родительскую группу.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.getAllMOPresentationValues(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Получения значений врех полей, присутствующих в представлении MultipleObject
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.Create">
            <summary>
            Метод создания курсора.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.AddCompareParam(NsgSoft.DataObjects.NsgCompareParam)">
            <summary>
            Добавляет параметр выборки к условиям.
            </summary>
            <param name="compare">Условие отбора.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.RemoveCompareParam(System.String)">
            <summary>
            Удаляет условие отбора.
            </summary>
            <param name="compare">Удаляемый параметр.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.ClearCompareParam">
            <summary>
            Удаляет все условия выборки.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.InsertSortingParam(System.Int32,NsgSoft.DataObjects.NsgSortingParam)">
            <summary>
            Вставка условия сортировки в определенном порядке.
            </summary>
            <param name="index">Порядок сортировки по столбцу.</param>
            <param name="sort">Параметр сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.InsertSortingParam(NsgSoft.DataObjects.NsgSortingParam)">
            <summary>
            Вставка условия сортировки в последнюю очередь.
            </summary>
            <param name="sort">Параметр сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.RemoveSortingParam(System.String)">
            <summary>
            Удаляет устолвие сортировки.
            </summary>
            <param name="sort">Удаляемое условие.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.ClearSortingParam">
            <summary>
            Удаляет все условия сортировки.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.NextResult(System.Int32,NsgSoft.DataObjects.NsgMultipleObject,System.Boolean)">
            <summary>
            Считывает очередную порцию данных из базы данных.
            </summary>
            <param name="index">Номер первой запрашиваемой строки</param>
            <param name="lastNmo">Последний прочитанный элемент</param>
            <param name="bForward">Если true - направление чтения вперед, иначе - назад</param>
            <returns>Если удалось считать хотя бы одну строку возвращает true,
            иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.NextResult">
            <summary>
            Считывает очередную порцию данных из базы данных.
            </summary>
            <returns>Если удалось считать хотя бы одну строку возвращает true,
            иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.Reset">
            <summary>
            Сбрасывает курсор в начальное состояние.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.GetRowIndex(`0)">
            <summary>
            Метод получения индекса строки.
            </summary>
            <param name="obj">Строка.</param>
            <returns>Возвращает индекс. Если не найден, то -1.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.GetRowIndex(`0,System.Boolean)">
            <summary>
            Метод получения индекса строки.
            </summary>
            <param name="obj">Строка.</param>
            <param name="putInCash">Добавить полученную строку в кэш.</param>
            <returns>Возвращает индекс. Если не найден, то -1.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.GetRowCashIndex(`0)">
            <summary>
            Метод получения индекса строки в кэше.
            </summary>
            <param name="obj">Строка.</param>
            <returns>Возвращает индекс. Если не найден, то -1.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.Equals(NsgSoft.DataObjects.NsgVirtualCursor{`0})">
            <summary>
            Сравнение с другим курсором.
            </summary>
            <param name="obj">Другой курсор.</param>
            <returns>Результат сравнения.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.ID">
            <summary>
            Идентификатор.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualCursor`1.OperationDescription">
            <summary>
            Получение описания операции.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgVirtualCursor`1.BeginOperation">
            <summary>
            Событие BeginOperation. Событие генерируется перед началом запроса данных в текущем потоке.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.OnBeginOperation">
            <summary>
            Вызывается перед началом выполнения длительной операции
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgVirtualCursor`1.EndOperation">
            <summary>
            Событие BeginOperation. Событие генерируется перед началом запроса данных в текущем потоке.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.OnEndOperation">
            <summary>
            Вызывается по окончанию выполнения длительной операции
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgVirtualCursor`1.CancelOperation(System.Object)">
            <summary>
            Метод отмены операции.
            </summary>
            <param name="sender">Источник.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCompare">
            <summary>
            Класс Сравнения.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCompare.Name">
            <summary>
            Имя (имеет смысл при включении во внешний NsgCompare)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCompare.Enabled">
            <summary>
            Признак включения(выключения) условия 
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCompare.IsRights">
            <summary>
            Признак условий по правам.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.#ctor(NsgSoft.Database.NsgLogicalOperator,NsgSoft.DataObjects.NsgCompareParam[])">
            <summary>
            Конструктор класса Сравнения.
            </summary>
            <param name="parameters">Список параметров сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.#ctor(NsgSoft.DataObjects.NsgCompareParam[])">
            <summary>
            Конструктор класса Сравнения.
            </summary>
            <param name="parameters">Список параметров сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.#ctor">
            <summary>
            Конструктор класса Сравнения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCompare.IsEmpty">
            <summary>
            Проверка наличия в фильтре хотя бы одного условия
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCompare.LogicalOperator">
            <summary>
            Получение и установка логического оператора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCompare.Clone">
            <summary>
            Получение клона объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCompare.Count">
            <summary>
            Возвращает число параметров
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCompare.CountAll">
            <summary>
            Возвращаем количество параметров с учетов всех вложенных параметров
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.SerializeToNsgDataBinary(NsgSoft.DataObjects.NsgDataBinary)">
            <summary>
            Сохранение условия в NsgDataBinary
            </summary>
            <param name="source">реквизит для сохранения условия</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.DeserializeFromNsgDataBinary(NsgSoft.DataObjects.NsgDataBinary,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Чтение условия из NsgDataBinary
            </summary>
            <param name="source">реквизит с данными для условия</param>
            <param name="owner">объект метаданных, к которому будет применяться условие</param>
            <returns>условие</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Inverse">
            <summary>
            Метод инвертирования условия.
            </summary>
            <returns>Возвращает инвертированное условие.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Clear(System.String)">
            <summary>
            Метод удаления всех параметров с заданным ключем.
            </summary>
            <param name="key">Ключ для удаления.</param>
            <returns>Возвращает условие для последовательного добавления.</returns>
            <example>NsgCompare.Add().Add().Add()</example>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Clear">
            <summary>
            Метод удаления всех параметров
            </summary>
            <returns>Возвращает условие для последовательного добавления.</returns>
            <example>NsgCompare.Add().Add().Add()</example>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Возвращает базовый NSG-тип.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Add(NsgSoft.DataObjects.NsgCompareParam)">
            <summary>
            Метод добавления нового параметра в условие.
            </summary>
            <param name="parameter">Добавляемый параметр.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Add(System.String,System.Object)">
            <summary>
            Метод добавления нового параметра в условие.
            </summary>
            <param name="inName">Имя параметра сравнения.</param>
            <param name="inParamValue">Значение параметра запроса.</param>
            <returns>Возвращает условие для последовательного добавления.</returns>
            <example>NsgCompare.Add().Add().Add()</example>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Add(System.String,System.Object,NsgSoft.Database.NsgComparison)">
            <summary>
            Метод добавления нового параметра в условие.
            </summary>
            <param name="inName">Имя параметра сравнения.</param>
            <param name="inParamValue">Значение параметра запроса.</param>
            <param name="inCompOperator">Условие сравнения.</param>
            <returns>Возвращает условие для последовательного добавления.</returns>
            <example>NsgCompare.Add().Add().Add()</example>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Add(NsgSoft.Common.NsgDataFixedFields,System.Object)">
            <summary>
            Метод добавления нового параметра в условие.
            </summary>
            <param name="inName">Имя параметра сравнения.</param>
            <param name="inParamValue">Значение параметра запроса.</param>
            <returns>Возвращает условие для последовательного добавления.</returns>
            <example>NsgCompare.Add().Add().Add()</example>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Add(NsgSoft.Common.NsgDataFixedFields,System.Object,NsgSoft.Database.NsgComparison)">
            <summary>
            Метод добавления нового параметра в условие.
            </summary>
            <param name="inName">Имя параметра сравнения.</param>
            <param name="inParamValue">Значение параметра запроса.</param>
            <param name="inCompOperator">Условие сравнения.</param>
            <returns>Возвращает условие для последовательного добавления.</returns>
            <example>NsgCompare.Add().Add().Add()</example>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Add(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод добавления нового вложенного условия.
            </summary>
            <param name="parameter">Добавляемое вложенное условие.</param>
            <returns>Возвращает условие для последовательного добавления.</returns>
            <example>NsgCompare.Add().Add().Add()</example>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Replace(NsgSoft.DataObjects.NsgCompareParam)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Replace(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.ToTreeNode(NsgSoft.DataObjects.NsgMultipleObject,System.String@,System.String@)">
            <summary>
            Рекурсивный метод упаковки параметров сравнения в дерево.
            </summary>
            <param name="mo">Объект в котором идет поиск.</param>
            <returns>Возвращает дерево.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.IsValidObject(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод проверки объекта по внутренним параметрам сравнения.
            </summary>
            <param name="obj">Объект на проверку.</param>
            <returns>Возвращает true, если объект прошел проверку, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.IsValidObject(NsgSoft.DataObjects.NsgMultipleObject,System.Boolean)">
            <summary>
            Метод проверки объекта по внутренним параметрам сравнения.
            </summary>
            <param name="obj">Объект на проверку.</param>
            <param name="throwException">Флаг генерации ошибки если не найден реквизит.</param>
            <returns>Возвращает true, если объект прошел проверку, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.ToString(System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Метод преобразования к строке.
            </summary>
            <param name="brackets">Флаг, помещать ли условия в скобки при нескольких условиях.</param>
            <returns>Возвращает строковое преставление.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.ToString">
            <summary>
            Метод получения строкового представления объекта.
            </summary>
            <returns>Возвращает строковое представление.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.ToString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Метод получения строкового представления объекта с заменой имен.
            </summary>
            <returns>Возвращает строковое представление.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.LoadObjects(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод загрузки объектов, указанных как идентификаторы. Выполняет поиск в БД объектов, 
             заданных как параметры сравнения и представленные только Guid'ами.
            </summary>
            <param name="mo">Объект владелец параметров сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.Filter(System.String)">
            <summary>
            Метод фильтрации текущего условия по одному из входящих свойств. В результате
             получается новое условие, включающее параметры текущего только по заданному свойству.
             Текущее условие остается без изменений.
            </summary>
            <param name="paramName">Имя поля (NsgParam.ParameterName).</param>
            <returns>Возвращает новое отфильтрованное условие.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.InsertParametersPrefix(System.String)">
            <summary>
            Метод добавления префикса ко всем именам параметров в условии.
            </summary>
            <param name="prefix">Префикс.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.ReplaceParametersNames(System.String,System.String)">
            <summary>
            Метод переименование имен параметров в условии.
            </summary>
            <param name="oldName">Старое имя параметра.</param>
            <param name="newName">Новое имя параметра.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.ReplaceParametersNames(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Метод переименование имен параметров в условии.
            </summary>
            <param name="RenameTable">таблица переименований</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompare.GetAllCompareParams(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Возвращает список всех параметров сравнения (NsgCompareParam со всех уровней вложенности
            </summary>
            <param name="cmp">NsgCompare из которого извлекаются все параметры</param>
            <returns>Массив всех параметров сравнения (NsgCompareParam со всех уровней вложенности </returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgParam">
            <summary>
            Абстрактный класс параметра.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParam.#ctor(System.String)">
            <summary>
            Конструктор класса Параметр. Имя параметра (Name) и имя (ParameterName) поля,
             на которое накладывается параметр, задаются одинаковые.
            </summary>
            <param name="inName">Имя параметра.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParam.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Параметр.
            </summary>
            <param name="inName">Имя параметра (Name).</param>
            <param name="inFieldName">Имя поля (ParameterName), на которое накладывается параметр.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgParam.Tag">
            <summary>
            Ассоциированые данные.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgParam.ParameterName">
            <summary>
            Получение имени поля для сравнения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgParam.ViewName">
            <summary>
            Получение имени поля для сравнения (Design-Mode only).
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgParam.Name">
            <summary>
            Получение и установка имени параметра.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParam.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgParamContainer`1">
            <summary>
            Класс контейнер параметров.
            </summary>
            <typeparam name="Template">Шаблон параметров.</typeparam>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.#ctor(`0[])">
            <summary>
            Конструктор класса Сортировки.
            </summary>
            <param name="parameters">Список параметров сортировки.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgParamContainer`1.Parameters">
            <summary>
            Получение списка параметров.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgParamContainer`1.Item(System.Int32)">
            <summary>
            Получение параметра по индексу.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgParamContainer`1.Item(System.String)">
            <summary>
            Получение параметра по имени.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.GetParams(System.String)">
            <summary>
            Получение параметров по имени.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgParamContainer`1.Item(NsgSoft.Common.NsgDataFixedFields)">
            <summary>
            Получение параметров по перечислению NsgDataFixedFields.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgParamContainer`1.OwnerComponent">
            <summary>
            Получение и установка компонета владельца.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.Insert(System.Int32,`0)">
            <summary>
            Метод вставки нового параметра в заданную позицию.
            </summary>
            <param name="index">Индекс для вставки параметра в список.</param>
            <param name="parameter">Параметр сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.Add(`0)">
            <summary>
            Метод добавления нового параметра.
            </summary>
            <param name="parameter">Параметр сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.AddRange(`0[])">
            <summary>
            Метод добавления нового параметра.
            </summary>
            <param name="parameters">Список параметров.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.ClearList">
            <summary>
            Метод очистки списка параметров.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.IndexOfParameters(System.String)">
            <summary>
            Метод определения всех индексов параметра в списке по имени поля.
            </summary>
            <param name="paramName">Имя поля (NsgParam.ParameterName).</param>
            <returns>Возвращает список индексов параметра.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.IndexOfStartsWith(System.String)">
            <summary>
            Метод определения всех индексов параметра в списке по началу имени поля.
            </summary>
            <param name="paramName">Имя поля (NsgParam.ParameterName).</param>
            <returns>Возвращает список индексов параметра.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.IndexOfParameters(NsgSoft.Common.NsgDataFixedFields)">
            <summary>
            Метод определения всех индексов параметра в списке по перечислению NsgDataFixedFields.
            </summary>
            <param name="paramID">ID параметра.</param>
            <returns>Возвращает список индексов параметра.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.IndexOf(System.String)">
            <summary>
            Метод определения индекса параметра в списке по имени.
            </summary>
            <param name="name">Имя параметра (NsgParam.Name).</param>
            <returns>Возвращает индекс параметра при успешном поиске, и -1 в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.IndexOf(`0)">
            <summary>
            Метод определения индекса параметра в списке.
            </summary>
            <param name="param">Параметр сортировки.</param>
            <returns>Возвращает индекс параметра при успешном поиске, и -1 в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.RemoveAt(System.Int32)">
            <summary>
            Метод удаления параметра из списка по индексу.
            </summary>
            <param name="index">Индекс параметра.</param>
            <returns>Возвращает true при удачном выполнении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.Remove(System.String)">
            <summary>
            Метод удаления параметра из списка по имени параметра.
            </summary>
            <param name="name">Имя параметра (NsgParam.Name).</param>
            <returns>Возвращает true при удачном выполнении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.Remove(`0)">
            <summary>
            Метод удаления параметра из списка.
            </summary>
            <param name="param">Параметр сортировки.</param>
            <returns>Возвращает true при удачном выполнении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.RemoveParameters(System.String)">
            <summary>
            Метод удаления всех параметров из списка по имени поля.
            </summary>
            <param name="paramName">Имя поля (NsgParam.ParameterName).</param>
            <returns>Возвращает true при удачном выполнении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.RemoveParametersStartsWith(System.String)">
            <summary>
            Метод удаления всех параметров из списка по имени поля.
            </summary>
            <param name="paramName">Имя поля (NsgParam.ParameterName).</param>
            <returns>Возвращает true при удачном выполнении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.RemoveParameters(NsgSoft.Common.NsgDataFixedFields)">
            <summary>
            Метод удаления всех параметров из списка по перечислению NsgDataFixedFields.
            </summary>
            <param name="paramID">ID параметра.</param>
            <returns>Возвращает true при удачном выполнении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.Contains(System.String)">
            <summary>
            Метод проверки наличия параметра по его имени.
            </summary>
            <param name="name">Имя параметра (NsgParam.Name).</param>
            <returns>Возвращает true, если параметр есть в списке, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.ContainsParameter(System.String)">
            <summary>
            Метод проверки наличия параметра по его имени.
            </summary>
            <param name="paramName">Имя поля (NsgParam.ParameterName).</param>
            <returns>Возвращает true, если параметр есть в списке, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.ContainsParameter(NsgSoft.Common.NsgDataFixedFields)">
            <summary>
            Метод проверки наличия параметра поперечислению NsgDataFixedFields.
            </summary>
            <param name="paramID">ID параметра.</param>
            <returns>Возвращает true, если параметр есть в списке, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgParamContainer`1.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgSortingParam">
            <summary>
            Класс параметр сортировки.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSortingParam.#ctor(NsgSoft.DataObjects.NsgSimpleObject,NsgSoft.Database.NsgSortDirection)">
            <summary>
            Конструктор класса Параметр сортировки.
            </summary>
            <param name="inObj">Объект как параметр сортировки.</param>
            <param name="inDirect">Направление сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSortingParam.#ctor(System.String,NsgSoft.Database.NsgSortDirection)">
            <summary>
            Конструктор класса Параметр сортировки.
            </summary>
            <param name="inName">Имя параметра сортировки.</param>
            <param name="inDirect">Направление сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSortingParam.#ctor(NsgSoft.Common.NsgDataFixedFields,NsgSoft.Database.NsgSortDirection)">
            <summary>
            Конструктор класса Параметр сортировки.
            </summary>
            <param name="inID">Идентификатор параметра сортировки.</param>
            <param name="inDirect">Направление сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSortingParam.#ctor(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Конструктор класса Параметр сортировки c направлением по умолчанию.
            </summary>
            <param name="inName">Имя параметра сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSortingParam.#ctor(System.String)">
            <summary>
            Конструктор класса Параметр сортировки c направлением по умолчанию.
            </summary>
            <param name="inName">Имя параметра сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSortingParam.#ctor(NsgSoft.Common.NsgDataFixedFields)">
            <summary>
            Конструктор класса Параметр сортировки c направлением по умолчанию.
            </summary>
            <param name="inDirect">Направление сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSortingParam.#ctor">
            <summary>
            Конструктор класса по умолчанию.
            </summary>
            <param name="inDirect">Направление сортировки. По умолчанию - возрастающая.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSortingParam.Direction">
            <summary>
            Получение и установка напрвления сортировки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSortingParam.ParameterName">
            <summary>
            Получение имени поля для сравнения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSortingParam.Name">
            <summary>
            Получение и установка имени параметра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSortingParam.Clone">
            <summary>
            Получение клона объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSortingParam.ToString">
            <summary>
            Метод преобразования объекта к строке.
            </summary>
            <returns>Возвращает строковое представление объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSortingParam.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSortingParam.ReverseDirection">
            <summary>
            Метод инверсии направления сортировки.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSortingParam.CompareValues(System.Object,System.Object)">
            <summary>
            Проверяет, переданные значение на соответствие порядку сортировки.
            </summary>
            <param name="value1">первый операнд</param>
            <param name="value2">второй операнд</param>
            <returns>Результат проверки: true - все в порядке, false - значения нужно поменять местами</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMemoryTable">
            <summary>
            Класс сложного элемента данных - Оперативная Таблица.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.#ctor">
            <summary>
            Конструктор класса Оперативная Таблица по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.#ctor(NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Таблица Значений.
            </summary>
            <param name="metadata">Метаданне на которые будут создаваться ссылки в данной таблице</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.#ctor(NsgSoft.DataObjects.NsgMemoryTable)">
            <summary>
            Конструктор класса Таблица Значений.
            </summary>
            <param name="metadata">Метаданне на которые будут создаваться ссылки в данной таблице</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.Standard">
            <summary>
            Получение эталонного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.DatabaseManager">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.DatabaseName">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.Description">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.EditorVisible">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.IndexList">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.GroupName">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.Name">
            <summary>
            Получение и установка имени логического объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.MetaData">
            <summary>
            Метаданные для получение объектов по ссылкам
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.IsFolder">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.ValueMask">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.Value">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.TableName">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTable.SearchFieldName">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.CreatePreDefinedFields">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.GetValue">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Find(System.String,System.Object,System.String[])">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Find(NsgSoft.Common.NsgDataFixedFields,System.Object,System.String[])">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Find(NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.FindAll(System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.FindAll(System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,System.String,System.Object)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.FindAll(System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,NsgSoft.Common.NsgDataFixedFields,System.Object)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.FullTextSearch(System.Int32,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.FullTextSearch(System.Int32,System.String,System.Object)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.FullTextSearch(System.Int32,NsgSoft.Common.NsgDataFixedFields,System.Object)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.ToString">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.BasePost">
            <summary>
            Не имеет смысла у данного объекта, всегда возвращает true
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.BasePost(NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Не имеет смысла у данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.InternalPost(System.Collections.Generic.List{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{NsgSoft.DataObjects.NsgMultipleObject}})">
            <summary>
            Не имеет смысла у данного объекта, всегда возвращает true.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Cancel(System.String[])">
            <summary>
            Не имеет смысла у данного объекта
            </summary>
            <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Edit(System.String[])">
            <summary>
            Метод редактирования строки объекта, всегда возвращает true
            </summary>
            <param name="readReferents">Список ссылок для дочитывания, не имеет смысла у данного объекта</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.IsLock">
            <summary>
            Флаг блокировки редактирования
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Lock">
            <summary>
            Не имеет смысла у данного объекта, всегда возвращает true
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Lock(System.String)">
            <summary>
            Не имеет смысла у данного объекта, всегда возвращает true
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.UnLock">
            <summary>
            Не имеет смысла у данного объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.UnLock(System.String)">
            <summary>
            Не имеет смысла у данного объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.GetLogicType">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.GetMemoryTableFromObject(NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            заполняет таблицу используя массив NsgMultipleObject
            </summary>
            <param name="obj"> массив NsgMultipleObject</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.AddRow(NsgSoft.DataObjects.NsgMultipleObject,System.String[])">
            <summary>
            Добавить новую строку в таблицу путем копирования реквизитов из сложного объекта.
            </summary>
            <param name="inObject">Объект</param>
            <param name="AddColumns">Список имен колонок, которые следует создать если их нет. Если null то создать все.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.AddColumn(System.String,System.Type,System.Object[])">
            <summary>
            Метод добавления нового объекта в таблицу
            </summary>
            <param name="name">Имя объекта</param>
            <param name="type">Тип объекта</param>
            <param name="length">Длина</param>
            <param name="precision">Точность</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.AddColumn(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Метод добавления нового объекта в таблицу
            </summary>
            <param name="simpleObject">Образец добавляемого объекта. В таблице будет создана его копия</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.RenameColumn(System.String,System.String)">
            <summary>
            Переименовать колонку таблицы значений
            </summary>
            <param name="oldName">Старое имя колонки</param>
            <param name="newName">Новое имя колонки</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.DeleteColumn(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Метод удаления колонки таблицу
            </summary>
            <param name="simpleObject">Образец удаляемого объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.DeleteColumns">
            <summary>
            Метод удаления   всех колонок таблицы
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Join(NsgSoft.DataObjects.NsgMemoryTable,System.String[],System.String[])">
            <summary>
            Объединение таблиц.
            Добавляются строки из переданной таблицы. Аналогичен LEFT JOIN в SQL
            </summary>
            <param name="table">Таблица с добавляемыми данными</param>
            <param name="findFieldNames">Имена полей через запятую, по кототрым будет проводится объединение</param>
            <param name="addFieldNames">Имена полей через запятую, которые будут перенесены из добавляемой таблицы.
                                     При совпадении имен, данные будут замещены.
            </param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Join(NsgSoft.DataObjects.NsgMemoryTable,System.String[],System.String[],NsgSoft.Common.NsgRenameTable)">
            <summary>
            Объединение таблиц.
            Добавляются строки из переданной таблицы. Аналогичен LEFT JOIN в SQL
            </summary>
            <param name="table">Таблица с добавляемыми данными</param>
            <param name="findFieldNames">Имена полей через запятую, по кототрым будет проводится объединение</param>
            <param name="addFieldNames">Имена полей через запятую, которые будут перенесены из добавляемой таблицы.
                                     При совпадении имен, данные будут замещены.
            </param>
            <param name="rename">Таблица переименования полей.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.RightJoin(NsgSoft.DataObjects.NsgMemoryTable,System.String[],System.String[])">
            <summary>
            Объединение таблиц.
            Добавляются строки из переданной таблицы. Аналогичен RIGHT JOIN в SQL
            </summary>
            <param name="table">Таблица с добавляемыми данными</param>
            <param name="findFieldNames">Имена полей через запятую, по кототрым будет проводится объединение</param>
            <param name="addFieldNames">Имена полей через запятую, которые будут перенесены из добавляемой таблицы.
                                     При совпадении имен, данные будут замещены.
            </param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.LeftJoin(NsgSoft.DataObjects.NsgMemoryTable,System.String[],System.String[])">
            <summary>
            Объединение таблиц.
            Добавляются строки из переданной таблицы. Аналогичен LEFT JOIN в SQL
            </summary>
            <param name="table">Таблица с добавляемыми данными</param>
            <param name="findFieldNames">Имена полей через запятую, по кототрым будет проводится объединение</param>
            <param name="addFieldNames">Имена полей через запятую, которые будут перенесены из добавляемой таблицы.
                                     При совпадении имен, данные будут замещены.
            </param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.CrossJoin(NsgSoft.DataObjects.NsgMemoryTable,System.String[])">
            <summary>
            Объединение таблиц.
            Составляются все возможные комбинации между строками таблиц по уникальным значениям.
            </summary>
            <param name="table">Таблица с добавляемыми данными</param>
            <param name="addFieldNames">Имена полей через запятую, которые будут перенесены из добавляемой таблицы.
            </param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.internalCollapse(System.String[],System.String[],System.Boolean)">
            <summary>
            Функция, выполняющая сворачивание таблицы. Для внутреннего использования.
            </summary>
            <param name="collapsedFields">Список полей через запятую по которым производится сворачивание</param>
            <param name="sumFields">Список полей через запятую по которым производится суммирование</param>
            <param name="DeleteUnnecessaryColumns">Удалять неиспользуемые колонки (которые не были перечисленны ни в collapsedFields, ни в sumFields</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Collapse(System.String[],System.String[])">
            <summary>
            Сворачивание таблицы по указанным полям, при этом производится суммирование.
            </summary>
            <param name="collapsedFields">Список полей через запятую по которым производится сворачивание</param>
            <param name="sumFields">Список полей через запятую по которым производится суммирование</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Collapse(System.String[],System.String[],System.Boolean)">
            <summary>
            Функция, выполняющая сворачивание таблицы. Для внутреннего использования.
            </summary>
            <param name="collapsedFields">Список полей через запятую по которым производится сворачивание</param>
            <param name="sumFields">Список полей через запятую по которым производится суммирование</param>
            <param name="DeleteUnnecessaryColumns">Удалять неиспользуемые колонки (которые не были перечисленны ни в collapsedFields, ни в sumFields</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.CollapseToNewTable(System.String[],System.String[])">
            <summary>
            Сворачивание таблицы по указанным полям, при этом производится суммирование.
            </summary>
            <param name="collapsedFields">Список полей через запятую по которым производится сворачивание</param>
            <param name="sumFields">Список полей через запятую по которым производится суммирование</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.CalculateGroupTotals(NsgSoft.DataObjects.NsgMemoryTable,System.String,System.String[],System.String)">
            <summary>
            Метод производит суммирование значений полей заданной таблицы "elements" 
             по указанной группировке "groupBy" и заполняет полученными данными текущую таблицу.
            </summary>
            <param name="elements">Таблица с исходными данными. Содержит поля "Измерения" для группировки
             и поля "Ресурсы" для суммирования.</param>
            <param name="groupBy">Группировка по полю. Указывает поле "Измерение", по которому 
             будет происходить группировка данных из исходной таблицы. Если указано поле,
             содержащее ссылку на иерархичный справочник, то группировка пройдет с учетом иерархии.</param>
            <param name="totals">Список колонок для подсчета итогов. Указывает список полей "Ресурсов",
             по которым будет происходит суммирование данных в пределах группировки.</param>
            <param name="rootGroupMask">Маска самой верхней группы при иерархичном отображнии.
             Если не задана, то самая верхняя группа не отображается.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.calculateGroupTotalsNEW(NsgSoft.DataObjects.NsgMemoryTable,System.String[],System.String[],System.String)">
            <summary>
            Метод подсчета итогов для групп.
            </summary>
            <param name="elements">Таблица элементов.</param>
            <param name="groupByList">Список группировок по полям.</param>
            <param name="totals">Список колонок для подсчета итогов.</param>
            <param name="rootGroupMask">Маска верхней группы при иерархичном отображнии. Если не задана, то самая
             верхняя группа не отображается.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.CalculateGroupTotalsNEW(NsgSoft.DataObjects.NsgMemoryTable,System.String[],System.String[],System.String)">
            <summary>
            Метод подсчета итогов для групп.
            </summary>
            <param name="elements">Таблица элементов.</param>
            <param name="groupByList">Список группировок по полям.</param>
            <param name="totals">Список колонок для подсчета итогов.</param>
            <param name="rootGroupMask">Маска верхней группы при иерархичном отображнии. Если не задана, то самая
             верхняя группа не отображается.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:NsgSoft.DataObjects.NsgMemoryTable.CalculateGroupTotalsNEW(NsgSoft.DataObjects.NsgMemoryTable,System.String[],System.String[])" -->
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.CalculateGroupTotalsNEW(NsgSoft.DataObjects.NsgMemoryTable,System.String,System.String[],System.String)">
            <summary>
            Метод подсчета итогов для групп.
            </summary>
            <param name="elements">Таблица элементов.</param>
            <param name="groupBy">Группировка по полю.</param>
            <param name="totals">Список колонок для подсчета итогов.</param>
            <param name="rootGroupMask">Маска верхней группы при иерархичном отображнии. Если не задана, то самая
             верхняя группа не отображается.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.CalculateGroupTotalsNEW(NsgSoft.DataObjects.NsgMemoryTable,System.String,System.String[])">
            <summary>
            Метод подсчета итогов для групп.
            </summary>
            <param name="elements">Таблица элементов.</param>
            <param name="groupBy">Группировка по полю.</param>
            <param name="totals">Список колонок для подсчета итогов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.sortCalcResult(System.String,System.Collections.Generic.Dictionary{System.Object,NsgSoft.DataObjects.NsgMemoryTableRow},System.Collections.Generic.SortedDictionary{System.Int32,System.Collections.Generic.Dictionary{System.Guid,System.Guid}},System.Collections.Generic.List{NsgSoft.DataObjects.NsgMemoryTableRow},System.Int32,System.Guid)">
            <summary>
            Метод сортировки результатов по итогам.
            </summary>
            <param name="groupBy">Поле для сортировки.</param>
            <param name="result">Список групп.</param>
            <param name="sortList">Список упорядочивания.</param>
            <param name="sortedResultList">Список результата.</param>
            <param name="level">Текущий уровень при упорядочивании.</param>
            <param name="parent">Идентификатор родителя.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.updateGroupSum(System.String[],System.Collections.Generic.Dictionary{System.Object,NsgSoft.DataObjects.NsgMemoryTableRow},NsgSoft.DataObjects.NsgMemoryTableRow,System.Object)">
            <summary>
            Метод обновления/создания группы итогов.
            </summary>
            <param name="totals">Список колонок для подсчета итогов.</param>
            <param name="result">Список уже созданных групп.</param>
            <param name="row">Строка для добавления итогов в группу.</param>
            <param name="group">ID группы.</param>
            <returns>Возвращает строку группы.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.GetReference(System.String)">
            <summary>
            Возвращает типизированную ссылку на объект данного типа
            </summary>
            <param name="Name">Имя создаваемой ссылки</param>
            <returns>Новая типизированная ссылка</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.CopyColumnsFromTable(NsgSoft.DataObjects.NsgDataTable)">
            <summary>
            Добавить колонки по образцу переданной таблицы
            </summary>
            <param name="etalonTable">Таблица, колонки которой копируются</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.CopyColumnsFromTable(NsgSoft.DataObjects.NsgMemoryTable)">
            <summary>
            Добавить колонки по образцу переданной таблицы
            </summary>
            <param name="etalonTable">Таблица, колонки которой копируются</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.CopyColumnsFromObject(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Добавить колонки по образцу полей переданного объекта
            </summary>
            <param name="etalonTable">Таблица, колонки которой копируются</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.DeleteAll">
            <summary>
            Удаляет все строки таблицы. Для MemoryTable аналогичен методу Clear
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTable.Clear">
            <summary>
            Удаляет все строки таблицы. Для MemoryTable аналогичен методу DeleteAll
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMemoryTableRow">
            <summary>
            Класс сложного элемента данных - Строка оперативной таблицы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.Actualize(System.String,System.Boolean)">
            <summary>
            Установление актуальности реквизита
            </summary>
            <param name="name">имя реквизита</param>
            <param name="actual">актальность</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.#ctor(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Строка Оперативной Таблицы по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.#ctor(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgDataObjectList{NsgSoft.DataObjects.NsgSimpleObject,NsgSoft.DataObjects.NsgSimpleObject})">
            <summary>
            Конструктор класса Строка Оперативной Таблицы со списком реквизитов.
            </summary>
            <param name="inOwner">Таблица владелец строки.</param>
            <param name="inObjectList">Список реквизитов строки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.Standard">
            <summary>
            Получение эталонного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.DatabaseManager">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.DatabaseName">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.Description">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.EditorVisible">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.FullName">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.IndexList">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.GroupName">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.Name">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.IsFolder">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.Presentation">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.ValueMask">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.Value">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.TableName">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.SearchFieldName">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.CreatePreDefinedFields">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.GetValue">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.Find(System.String,System.Object,System.String[])">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.Find(NsgSoft.Common.NsgDataFixedFields,System.Object,System.String[])">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.Find(NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.FindAll(System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.FindAll(System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,System.String,System.Object)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.FindAll(System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,NsgSoft.Common.NsgDataFixedFields,System.Object)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.FullTextSearch(System.Int32,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.FullTextSearch(System.Int32,System.String,System.Object)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.FullTextSearch(System.Int32,NsgSoft.Common.NsgDataFixedFields,System.Object)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.ToString(System.String)">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.ToString">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.Edit(System.String[])">
            <summary>
            Метод редактирования строки объекта, всегда возвращает true
            </summary>
            <param name="readReferents">Список ссылок для дочитывания, не имеет смысла у данного объекта</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.IsLock">
            <summary>
            Не имеет смысла у данного объекта, всегда возвращает false
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.Lock">
            <summary>
            Не имеет смысла у данного объекта, всегда возвращает true
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.Lock(System.String)">
            <summary>
            Не имеет смысла у данного объекта, всегда возвращает true
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.UnLock">
            <summary>
            Не имеет смысла у данного объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMemoryTableRow.UnLock(System.String)">
            <summary>
            Не имеет смысла у данного объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.Guid">
            <summary>
            Получение и установка идентификатора объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMemoryTableRow.RowNumber">
            <summary>
            Получение индекса строки в таблице.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataImage">
            <summary>
            Класс простого элемента данных - Строка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataImage._IMAGE_MAX_SIZE">
            <summary>
            Максимальный размер картинки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataImage._IMAGE_MIN_SIZE">
            <summary>
            Минимальный размер картинки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataImage._IMAGE_STRETCH">
            <summary>
            Растягивать картинку.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.#ctor">
            <summary>
            Конструктор класса Binary по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.#ctor(System.String)">
            <summary>
            Конструктор класса Binary.
            </summary>
            <param name="name">Имя логического объекта Binary.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Binary из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataImage.MaximumSize">
            <summary>
            Получение и установка максимального размера картинки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataImage.MinimumSize">
            <summary>
            Получение и установка минимального размера картинки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataImage.StretchImage">
            <summary>
            Получение и установка флага растяжки изображения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataImage.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataImage.IndexType">
            <summary>
            Получение типа индекса объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataImage.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataImage.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataMask">
            <summary>
            Класс простого элемента данных - Строка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataMask._DATA_MASK">
            <summary>
            Маска данных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.#ctor">
            <summary>
            Конструктор класса Строка по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.#ctor(System.String)">
            <summary>
            Конструктор класса Строка по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Строка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Строка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataMask.Mask">
            <summary>
            Получение и установка шаблона.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataMask.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataMask.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.ToDBField">
            <summary>
            Метод преобразования объекта к полю базы данных.
            </summary>
            <returns>Список заполненных полей БД.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataMask.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCursor`1">
            <summary>
            Класс Курсор - итератор выборки объектов.   
            </summary>
            <typeparam name="Template">Шаблон сложного объекта, с которым работает курсор.</typeparam>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCursor`1.startRow">
            <summary>
            Индекс первой строки в выборке.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCursor`1.countRow">
            <summary>
            Количество строк в курсоре.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCursor`1.lastItemIndex">
            <summary>
            Индекс последней выбранной строки.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursor`1.#ctor(System.Boolean,System.String,NsgSoft.Database.NsgDatabaseManager,`0,NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Конструктор класса Курсор с открытием.
            </summary>
            <param name="inLock">Признак блокировки данных.</param>
            <param name="inTableName">Имя таблицы БД.</param>
            <param name="inDatabaseMngr">Объект управления БД.</param>
            <param name="inOwner">Сложный объект - владелец курсора.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursor`1.#ctor(System.Boolean,System.String,NsgSoft.Database.NsgDatabaseManager,`0)">
            <summary>
            Конструктор класса Курсор.
            </summary>
            <param name="inLock">Признак блокировки данных.</param>
            <param name="inTableName">Имя таблицы БД.</param>
            <param name="inDatabaseMngr">Объект управления БД.</param>
            <param name="inOwner">Сложный объект - владелец курсора.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursor`1.Finalize">
            <summary>
            Деструктор класса Курсор.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.Name">
            <summary>
            Получение имени курсора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.IsCreated">
            <summary>
            Получение сведений создан ли курсор.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.IsOpen">
            <summary>
            Получение состояния курсора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.IsLock">
            <summary>
            Получение состояния блокировки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.IsDestroyed">
            <summary>
            Получение сведений уничтожен ли курсор.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.TableName">
            <summary>
            Получение имени таблицы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.Count">
            <summary>
            Получение количества выбранных записей.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.Sorting">
            <summary>
            Получение сортировки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.Comparison">
            <summary>
            Получение сравнений.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.First">
            <summary>
            Получение первой записи курсора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.Last">
            <summary>
            Получение последней записи курсора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.Next">
            <summary>
            Получение следущей записи курсора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCursor`1.Previous">
            <summary>
            Получение предыдущей записи курсора.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursor`1.Create">
            <summary>
            Метод создания курсора.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursor`1.Open">
            <summary>
            Метод открытия курсора.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursor`1.Close">
            <summary>
            Метод закрытия курсора.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursor`1.Destroy">
            <summary>
            Метод удаления курсора.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursor`1.getObjectFromDB(System.String,NsgSoft.Database.NsgDBField[])">
            <summary>
            Метод получение заполненного сложного объекта из БД.
            </summary>
            <param name="query">Запрос.</param>
            <returns>Заполненный сложный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursor`1.GetAbsolute(System.Int32)">
            <summary>
            Метод получения n-ой записи от начальной позиции курсора.
            </summary>
            <param name="number">Номер записи от начальной позиции.</param>0
            <returns>Заполненный сложный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCursor`1.GetRelative(System.Int32)">
            <summary>
            Метод получения n-ой записи от текущей позиции курсора.
            </summary>
            <param name="number">Номер записи от текущей позиции.</param>
            <returns>Заполненный сложный объект.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataBinary">
            <summary>
            Класс простого элемента данных - Строка.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.#ctor">
            <summary>
            Конструктор класса Binary по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.#ctor(System.String)">
            <summary>
            Конструктор класса Binary.
            </summary>
            <param name="name">Имя логического объекта Binary.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Binary из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataBinary.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataBinary.IndexType">
            <summary>
            Получение типа индекса объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataBinary.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataBinary.NullAllow">
            <summary>
            разрешать ли вставлять пустые значения в базу
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.ToDBField">
            <summary>
            Метод преобразования объекта к полю базы данных.
            </summary>
            <returns>Заполненное поле БД.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.ToDBField(System.Object)">
            <summary>
            Метод преобразования объекта к полю базы данных.
            </summary>
            <returns>Заполненное поле БД.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.FromDBField(NsgSoft.Database.NsgDBField)">
            <summary>
            Метод получения объекта из поля БД.
            </summary>
            <param name="dbFields">Поле БД.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.getByteArrayFromValue(System.Object)">
            <summary>
            Метод преобразования значения к массиву байт.
            </summary>
            <returns>Возвращает массив байт.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.getValueFromByteArray(System.Byte[])">
            <summary>
            Метод получения значения из массива байт.
            </summary>
            <param name="array">Массив байт.</param>
            <returns>Возвращает значение.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBinary.LoadDataFromXML(System.Xml.XmlReader)">
            <summary>
            Восстановить значение объекта и всех его свойств из XML
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataBoolean">
            <summary>
            Класс простого элемента данных - Булево.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataBoolean._TRUE_STRING">
            <summary>
            Представление для True.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataBoolean._FALSE_STRING">
            <summary>
            Представление для False.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataBoolean._DEFAULT_VALUE">
            <summary>
            Значение по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.#ctor">
            <summary>
            Конструктор класса Булево по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.#ctor(System.String)">
            <summary>
            Конструктор класса Булово.
            </summary>
            <param name="name">Имя логического объекта Целое число.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Булево из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataBoolean.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataBoolean.DefaultValue">
            <summary>
            Получение и установка значения по умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataBoolean.TrueString">
            <summary>
            Строковое представление True.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataBoolean.FalseString">
            <summary>
            Строковое представление False.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataBoolean.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.ToString">
            <summary>
            Метод приведения к строке.
            </summary>
            <returns>Строковое представление.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.FromDBField(NsgSoft.Database.NsgDBField)">
            <summary>
            Метод получения объекта из поля БД.
            </summary>
            <param name="dbFields">Поле БД.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataBoolean.CopyProperies(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Копирует значения свойств из переданного объекта.
            </summary>
            <param name="from">объект из которого копировать</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgTable`1">
            <summary>
            Класс сложного элемента данных - Абстрактная Таблица.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1._TABLE_SUBTYPE">
            <summary>
            Тип таблицы.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgTable`1.SortType">
            <summary>
            Перечисление типов сортировки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.SortType.Mask">
            <summary>
            По маске ToString().
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.SortType.Value">
            <summary>
            По значению.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgTable`1.AggregateActions">
            <summary>
            Перечисление агрегатных действий над строками таблицы.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.AggregateActions.Count">
            <summary>
            Количество.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.AggregateActions.Sum">
            <summary>
            Сумма.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.AggregateActions.Max">
            <summary>
            Максимальное.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.AggregateActions.Min">
            <summary>
            Минимальное.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.rows">
            <summary>
            Список видимых строк.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.deletedRows">
            <summary>
            Список удаленных строк.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.hiddenRows">
            <summary>
            Список скрытых строк.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.CheckRowStructure">
            <summary>
            Проверять структуру строк.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.currentRow">
            <summary>
            Текущая строка таблицы.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTable`1.cloneRows">
            <summary>
            Флаг клонирования строк.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.#ctor">
            <summary>
            Конструктор класса Таблица по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Таблица первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Таблица из XML.
            </summary>
            <param name="elem">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.TableSubType">
            <summary>
            Тип таблицы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SetCurrentRow(NsgSoft.DataObjects.INsgDataTableRow)">
            <summary>
            Установка текущей строки
            </summary>
            <param name="value">новая текущая строка</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.CurrentRow">
            <summary>
            Получение текущей строки таблицы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.NsgSoft#DataObjects#INsgTable#NewRow">
            <summary>
            Добавить новую строку в таблицу
            </summary>
            <returns>Новая строка, уже добавленная в таблицу</returns>
            <remarks>По завершению редактирования новой строки, у нее необходимо вызвать метод Post(), иначе она не будет участвовать в сортировке</remarks>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.NsgSoft#DataObjects#INsgTable#Rows">
            <summary>
            Получение списка строк таблицы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.Rows">
            <summary>
            Получение списка строк таблицы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.HiddenRows">
            <summary>
            Получение списка скрытых строк таблицы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.DeletedRows">
            <summary>
            Получение списка удаленных строк таблицы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.AllRows">
            <summary>
            Получение списка всех строк таблицы вне зависимости от заданного фильтра
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.Count">
            <summary>
            Возвращает количество строк таблицы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.HiddenCount">
            <summary>
            Возвращает количество скрытых строк таблицы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.AllRowsCount">
            <summary>
            Возвращает количество всех строк таблицы независимо от наложенных в данный момент фильтров.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.Root">
            <summary>
            Объект - владелец табличной части
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.Selected">
            <summary>
            Проверка, присвоено ли объекту не пустое значение
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgTable`1.BeforeDeleteRowEventHandler">
            <summary>
            Делегат события перед удалением строки таблицы.
            </summary>
            <param name="sender">Источник.</param>
            <param name="arg">Аргументы.</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgTable`1.BeforeDeleteRow">
            <summary>
            Событие BeforeDeleteRow. Событие генерируется перед удалением строки таблицы.
             В качестве параметра получает ссылку на удаляемую строку.
             Если выставить e.Cancel = true, то действие будет отменено.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.OnBeforeDeleteRow(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Метод вызова события BeforeDeleteRow.
            </summary>
            <param name="e">Аргументы.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgTable`1.AfterDeleteRowEventHandler">
            <summary>
            Делегат события после удаления строки таблицы.
            </summary>
            <param name="sender">Источник.</param>
            <param name="arg">Аргументы.</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgTable`1.AfterDeleteRow">
            <summary>
            Событие AfterDeleteRow. Событие генерируется после удаления строки таблицы.
             В качестве параметра получает ссылку на таблицу.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.OnAfterDeleteRow(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Метод вызова события AfterDeleteRow.
            </summary>
            <param name="e">Аргументы.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgTable`1.BeforeInsertRowEventHandler">
            <summary>
            Делегат события перед вставкой новой строки таблицы.
            </summary>
            <param name="sender">Источник.</param>
            <param name="arg">Аргументы.</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgTable`1.BeforeInsertRow">
            <summary>
            Событие BeforeInsert. Событие генерируется перед вставкой новой строки таблицы.
             В качестве параметра получает ссылку на таблицу.
             Если выставить e.Cancel = true, то действие будет отменено.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.OnBeforeInsertRow(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Метод вызова события BeforeInsertRow.
            </summary>
            <param name="e">Аргументы.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgTable`1.AfterInsertRowEventHandler">
            <summary>
            Делегат события после вставки новой строки таблицы.
            </summary>
            <param name="sender">Источник.</param>
            <param name="arg">Аргументы.</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgTable`1.AfterInsertRow">
            <summary>
            Событие BeforeInsert. Событие генерируется после вставки новой строки таблицы.
            В качестве параметра получает ссылку на вставленную строку таблицы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.OnAfterInsertRow(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Метод вызова события AfterInsertRow.
            </summary>
            <param name="e">Аргументы.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgTable`1.CompareRowsEventHandler">
            <summary>
            Делегат сравнения строк.
            </summary>
            <param name="temp1">Строка 1.</param>
            <param name="temp2">Строка 2.</param>
            <param name="column">Имя колонки для сравнения. Доступны только три оператора - 
             NsgComparison.Equal, NsgComparison.Greater, NsgComparison.Less.</param>
            <param name="cmp">Оператор сравнения.</param>
            <returns>Булевый результат сравнения.</returns>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgTable`1.CompareRows">
            <summary>
            Событие о сравнении двух строк при сортировке.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.Sort(System.String[])">
            <summary>
            Метод сортировки таблицы по указанным полям.
            </summary>
            <param name="columns">Список полей для сортировки через запятую.
             После имени поля может идти "+" - по возврастанию, "-" - по убыванию </param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.Sort(NsgSoft.DataObjects.NsgTable{`0}.SortType,System.String[])">
            <summary>
            Метод сортировки таблицы по указанным полям.
            </summary>
            <param name="type">Тип сортировки.</param>
            <param name="fields">Список полей для сортировки через запятую.
             После имени поля может идти "+" - по возврастанию, "-" - по убыванию </param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.Sort(NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Метод сортировки таблицы по указанным полям.
             В случае NsgDataDocument сортировка идет по дате документа,
             NsgMultipleObject - по маске (object.ToString()).
             В остальных случаях - по значению
            </summary>
            <param name="sorting">Параметры для сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.Sort(NsgSoft.DataObjects.NsgTable{`0}.SortType,NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Метод сортировки таблицы по указанным полям.
             В случае NsgDataDocument сортировка идет по дате документа,
             NsgMultipleObject - по маске (object.ToString()).
             В остальных случаях - по значению
            </summary>
            <param name="type">Тип сортировки.</param>
            <param name="sorting">Параметры для сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.Sort(NsgSoft.DataObjects.NsgTable{`0}.SortType,NsgSoft.DataObjects.NsgSorting,System.Boolean)">
            <summary>
            Метод сортировки таблицы по указанным полям.
             В случае NsgDataDocument сортировка идет по дате документа,
             NsgMultipleObject - в зависимости от выбранного типа сортировки.
             В остальных случаях - по значению
            </summary>
            <param name="type">Тип сортировки.</param>
            <param name="sorting">Параметры для сортировки.</param>
            <param name="checkObjectState">Флаг проверки состояния объекта</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.sorting(System.Int32,System.Int32,NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgTable{`0}.SortType,System.Boolean)">
            <summary>
            Метод сортировки таблицы.
            </summary>
            <param name="firstIndex">Начальный индекс.</param>
            <param name="lastIndex">Конечный индекс.</param>
            <param name="sorting">Параметры сортировки.</param>
            <param name="type">Тип сортировки.</param>
            <param name="checkObjectState">Флаг проверки состояния объекта</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.checkSortElements(`0,`0,NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgTable{`0}.SortType,System.Boolean)">
            <summary>
            Метод сравнения элементов с учетом переданной сортировки.
            </summary>
            <param name="one">Первый элемент.</param>
            <param name="two">Второй элемент.</param>
            <param name="sorting">Параметры сортировки.</param>
            <param name="type">Тип сортировки.</param>
            <param name="checkObjectState">Флаг проверки состояния объекта</param>
            <returns>Возвращает true, если порядок элементов соответствует заданной сортировке
             либо элементы равны.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRowByTag(System.Object)">
            <summary>
            Метод поиска одной строки в таблице по значению Tag
            </summary>
            <param name="Tag">Tag.</param>
            <returns>Найденные строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRowsByTag(System.Object)">
            <summary>
            Метод поиска строк в таблице по значению Tag
            </summary>
            <param name="Tag">Тэг.</param>
            <returns>Найденные строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRow(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод поиска одной строки в таблице, соответствующих заданным параметрам.
            </summary>
            <param name="compare">Критерии поиска.</param>
            <returns>Первая найденная строка. Если ничего не найдено то null</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRow(NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Метод поиска одной строки в таблице, соответствующих заданным параметрам.
            </summary>
            <param name="compare">Критерии поиска.</param>
            <param name="allRowsFind">Искать по всем строкам.</param>
            <returns>Первая найденная строка. Если ничего не найдено то null</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRow(System.String,System.Object)">
            <summary>
            Метод поиска одной строки в таблице по значению конкретного поля.
             Поиск по всем строкам, в том числе и скрытым.
            </summary>
            <param name="inName">Имя колонки.</param>
            <param name="inValue">Значение поля.</param>
            <returns>Первая найденная строка. Если ничего не найдено то null</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRow(System.String,System.Object,System.Boolean)">
            <summary>
            Метод поиска одной строки в таблице по значению конкретного поля.
             Поиск по всем строкам, в том числе и скрытым.
            </summary>
            <param name="inName">Имя колонки.</param>
            <param name="inValue">Значение поля.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Первая найденная строка. Если ничего не найдено то null</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRow(NsgSoft.Common.NsgDataFixedFields,System.Object)">
            <summary>
            Метод поиска одной строки в таблице по значению конкретного предопределенного поля.
             Поиск по всем строкам, в том числе и скрытым.
            </summary>
            <param name="inName">Имя колонки.</param>
            <param name="inValue">Значение поля.</param>
            <returns>Первая найденная строка. Если ничего не найдено то null</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRow(NsgSoft.Common.NsgDataFixedFields,System.Object,System.Boolean)">
            <summary>
            Метод поиска одной строки в таблице по значению конкретного предопределенного поля.
            </summary>
            <param name="inName">Имя колонки.</param>
            <param name="inValue">Значение поля.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Первая найденная строка. Если ничего не найдено то null</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.Collapse(System.String[],System.String[])">
            <summary>
            Сворачивание таблицы по указанным полям, при этом производится суммирование.
            </summary>
            <param name="collapsedFields">Список полей через запятую по которым производится сворачивание</param>
            <param name="sumFields">Список полей через запятую по которым производится суммирование</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRows(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод поиска строк в таблице, соответствующих заданным параметрам.
             Поиск по всем строкам, в том числе и скрытым.
            </summary>
            <param name="compare">Критерии поиска.</param>
            <returns>Найденные строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRows(NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Метод поиска строк в таблице, соответствующих заданным параметрам.
            </summary>
            <param name="compare">Критерии поиска.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Найденные строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRows(NsgSoft.DataObjects.NsgCompare,System.Boolean,System.Int32)">
            <summary>
            Метод поиска строк в таблице, соответствующих заданным параметрам.
            </summary>
            <param name="compare">Критерии поиска.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <param name="resultLimit">Ограничение на результат.</param>
            <returns>Найденные строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRows(System.String,System.Object)">
            <summary>
            Метод поиска строк в таблице по значению конкретного поля.
             Поиск по всем строкам, в том числе и скрытым.
            </summary>
            <param name="inName">Имя колонки.</param>
            <param name="inValue">Значение поля.</param>
            <returns>Найденные строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRows(System.String,System.Object,System.Boolean)">
            <summary>
            Метод поиска строк в таблице по значению конкретного поля.
            </summary>
            <param name="inName">Имя колонки.</param>
            <param name="inValue">Значение поля.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Найденные строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRows(System.String,System.Object,System.Boolean,System.Int32)">
            <summary>
            Метод поиска строк в таблице по значению конкретного поля.
            </summary>
            <param name="inName">Имя колонки.</param>
            <param name="inValue">Значение поля.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <param name="resultLimit">Ограничение на результат.</param>
            <returns>Найденные строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRows(NsgSoft.Common.NsgDataFixedFields,System.Object)">
            <summary>
            Метод поиска строк в таблице по значению конкретного предопределенного поля.
             Поиск по всем строкам, в том числе и скрытым.
            </summary>
            <param name="inName">Имя колонки.</param>
            <param name="inValue">Значение поля.</param>
            <returns>Найденные строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRows(NsgSoft.Common.NsgDataFixedFields,System.Object,System.Boolean)">
            <summary>
            Метод поиска строк в таблице по значению конкретного предопределенного поля.
            </summary>
            <param name="inName">Имя колонки.</param>
            <param name="inValue">Значение поля.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Найденные строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FindRows(NsgSoft.Common.NsgDataFixedFields,System.Object,System.Boolean,System.Int32)">
            <summary>
            Метод поиска строк в таблице по значению конкретного предопределенного поля.
            </summary>
            <param name="inName">Имя колонки.</param>
            <param name="inValue">Значение поля.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <param name="resultLimit">Ограничение на результат.</param>
            <returns>Найденные строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.Filter(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод фильтрации таблицы по указанным параметрам.
             Отфильтрованные строки не удаляются, а переходят 
             в "скрытое" состояние.
            </summary>
            <param name="paramAll">Параметры для фильтрации.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона строками текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FillTable(NsgSoft.DataObjects.NsgTable{`0},NsgSoft.DataObjects.CloneRowsState)">
            <summary>
            Метод заполнения заданной таблицы строками из текущей.
            </summary>
            <param name="table">Заполняемая таблица.</param>
            <param name="cloneRowsState">Тип заполнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.ResetAllRowsRoot">
            <summary>
            Метод переприсваивания родителя всем строкам.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.GetTableClone(NsgSoft.DataObjects.CloneRowsState)">
            <summary>
            Получение клона таблицы.
            </summary>
            <param name="rowsState">Состояние строк при клонировании.</param>
            <returns>Возвращает клонированную таблицу.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.OnRequisiteRequestForEdit(System.String)">
            <summary>
            Метод запроса реквизитом разрешения на редактирование.
            </summary>
            <param name="requisiteName">Имя реквизита.</param>
            <returns>Возвращает true, если редактирование разрешено, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.ColumnToArray(System.String,NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Выгрузить указанную колонку в массив
            </summary>
            <param name="colName">Имя колонки</param>
            <param name="compare">Условия выгрузки. Будут выгружены только строки, удовлетворяющие условию.
            Если условие не указано - будут выгружены все строки</param>
            <param name="needCollapse">Если true - то будут выгружены только уникальные значения</param>
            <returns>Массив выбраных значений</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.IsLock">
            <summary>
            Метод проверки блокировки объекта
             Блокируется объект - владелец
            </summary>
            <returns>Возвращает true, если объект заблокирован. Иначе false</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.Edit(System.String[])">
            <summary>
            Метод редактирования строки объекта.
            </summary>
            <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.GetEtalonRow">
            <summary>
            Возвращает новую строку таблицы, но в саму таблицу ее не включает (эталонная строка)
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.newRow(`0)">
            <summary>
            создание строки таблицы
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.NewRow">
            <summary>
            Добавить новую строку в таблицу
            </summary>
            <returns>Новая строка, уже добавленная в таблицу</returns>
            <remarks>По завершению редактирования новой строки, у нее необходимо вызвать метод Post(), иначе она не будет участвовать в сортировке</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.NewRow(`0)">
            <summary>
            Добавить новую строку в таблицу путем копирования переданной строки.
            </summary>
            <param name="inRow">Исходная строка для добавления.</param>
            <returns>Новая строка, уже добавленная в таблицу</returns>
            <remarks>По завершению редактирования новой строки, у нее необходимо вызвать метод Post(), иначе она не будет участвовать в сортировке</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.AddRow(`0)">
            <summary>
            Добавить новую строку в таблицу путем копирования переданной строки.
            </summary>
            <param name="inRow">Исходная строка для добавления.</param>
            <remarks>По завершению редактирования новой строки, у нее необходимо вызвать метод Post(), иначе она не будет участвовать в сортировке</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.AddRow(`0,System.Boolean)">
            <summary>
            Добавить новую строку в таблицу переданной строки.
            </summary>
            <param name="inRow">Исходная строка для добавления.</param>
            <param name="copyRow">Флаг копирования добавляемой строки.</param>
            <remarks>По завершению редактирования новой строки, у нее необходимо вызвать метод Post(), иначе она не будет участвовать в сортировке</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.AddRow(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Добавить новую строку в таблицу путем копирования реквизитов из сложного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.DeleteRow(System.Int32)">
            <summary>
            Удаление строки таблицы по номеру среди видимых строк.
            </summary>
            <param name="rowNumber">Номер видимой удаляемой строки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.DeleteRowByIndex(System.Int32)">
            <summary>
            Удаление строки таблицы по индексу.
            </summary>
            <param name="index">Индекс удаляемой строки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.DeleteRow(`0)">
            <summary>
            Удаление строки таблицы.
            </summary>
            <param name="row">Удаляемая строка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.HideRow(`0)">
            <summary>
            Метод скрытия видимой строки.
            </summary>
            <param name="row">Строка для скрытия.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.ShowRow(`0)">
            <summary>
            Метод отображения скрытой строки.
            </summary>
            <param name="row">Строка для отображения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.DeleteAll">
            <summary>
            Удаляет все строки таблицы (при вызове метода Post строки будут удалены из базы)
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FullClear">
            <summary>
             Полная очистка таблицы от строк. При этом строки не будут удалены из базы данных!
             Для удаления строк с удалением из БД следует пользоваться методом DeleteAll. 
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.FullClear(System.Boolean)">
            <summary>
            Полная очистка таблицы от строк. При этом строки не будут удалены из базы данных!
             Для удаления строк с удалением из БД следует пользоваться методом DeleteAll.
            </summary>
            <param name="withEvent">Инициировать событие об изменении.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.GetRow(System.Int32)">
            <summary>
            Получить строку таблицы по номеру среди видимых строк.
            </summary>
            <param name="number">Номер видимой строки.</param>
            <returns>Возвращает строку, если она найдена, иначе null.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.NsgSoft#DataObjects#INsgTable#GetRow(System.Int32)">
            <summary>
            Получить строку таблицы по номеру среди видимых строк.
            </summary>
            <param name="number">Номер видимой строки.</param>
            <returns>Возвращает строку, если она найдена, иначе null.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.GetRow(System.Guid)">
            <summary>
            Получить строку таблицы по идентификатору.
            </summary>
            <param name="value">Идентификатор строки.</param>
            <returns>Возвращает строку, если она найдена, иначе null.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.GetRowByIndex(System.Int32)">
            <summary>
            Получить строку таблицы по индексу.
            </summary>
            <param name="index">Индекс строки.</param>
            <returns>Возвращает строку, если она найдена, иначе null.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SetRow(System.Int32,`0)">
            <summary>
            Метод замены строки таблицы по номеру среди видимых строк.
            </summary>
            <param name="number">Номер видимой строки.</param>
            <param name="row">Строка на замену.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SetRowByIndex(System.Int32,`0)">
            <summary>
            Метод замены строки таблицы по индексу.
            </summary>
            <param name="index">Индекс строки.</param>
            <param name="row">Строка на замену.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.MoveRow(System.Int32,System.Int32)">
            <summary>
            Поменять две видимые строки местами.
            </summary>
            <param name="oneNumber">Номер первой видимой строки.</param>
            <param name="twoNumber">Номер второй видимой строки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.MoveRowInternal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Поменять две видимые строки местами.
            </summary>
            <param name="oneNumber">Номер первой видимой строки.</param>
            <param name="twoNumber">Номер второй видимой строки.</param>
            <param name="changeRowIndexes">Менять ли индексы строк при перемещении.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.InsertRow(`0,System.Int32)">
            <summary>
            Метод вставки строки в таблицу.
            </summary>
            <param name="inRow">Строка.</param>
            <param name="index">Индекс для вставки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.GetRowNumber(`0)">
            <summary>
            Метод получения номера переданной строки среди видимых строк.
            </summary>
            <param name="row">Строка таблицы.</param>
            <returns>Возвращает номер переданной строки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.resetRows(System.Collections.Generic.List{`0})">
            <summary>
            Выполнить сброс (Reset) для всех строк списка
            </summary>
            <param name="list">Список строк</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyTo(NsgSoft.DataObjects.INsgTable,NsgSoft.DataObjects.INsgDataTableRow[],NsgSoft.DataObjects.NsgCompare,System.String[],NsgSoft.Common.NsgRenameTable,NsgSoft.DataObjects.TableCopyToParams)">
            <summary>
            Копирование строк в указанную таблицу
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="copyRows">Список строк, которые надо скопировать, если null то все</param>
            <param name="copyFilter">Фильтр, будут скопированы тольок те строки, который удовлетворяют фильтру, если null то нет фильтра</param>
            <param name="copyColumns">Список колонок, которые надо скопировать, если null то все</param>
            <param name="rename">Таблица переименований колонок при копировании, rename[имя в исходной таблице] = имя в результирующей таблице</param>
            <param name="param">Параметры копирования</param>
            <returns>Ошибка, если была, иначе null</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.Merge(NsgSoft.DataObjects.INsgTable,System.String[],System.String[])">
            <summary>
            Объединение таблиц по измерениям
            </summary>
            <param name="table">Таблица из которой добавляем</param>
            <param name="findFieldNames">измерения, по которым объединяем строки</param>
            <param name="addFieldNames">реквизиты, которые переносим</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyTo(NsgSoft.DataObjects.NsgDataTable,System.String[],System.Boolean)">
            <summary>
            Скопировать указанные столбики из указанного диапазано строк в другую таблицу
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="fieldNames">имена колонок для копирования</param>
            <param name="useClone">Если true, то все ссылочные типы будут клонированы, иначе просто скопированы</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyTo(NsgSoft.DataObjects.NsgDataTable,System.Boolean)">
            <summary>
            Cкопировать все строки и все колонки данной таблицы в указанную
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="useClone">Если true, то все ссылочные типы будут клонированы, иначе просто скопированы</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyTo(NsgSoft.DataObjects.NsgDataTable)">
            <summary>
            Cкопировать все строки и все колонки данной таблицы в указанную
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyTo(NsgSoft.DataObjects.NsgDataTable,System.String[])">
            <summary>
            Cкопировать все строки, выбранные колонки данной таблицы в указанную
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="fieldNames">Имена колонок для копирования</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyTo(NsgSoft.DataObjects.NsgMemoryTable,System.String[])">
            <summary>
            Cкопировать все строки, выбранные колонки данной таблицы в указанную
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="fieldNames">Имена колонок для копирования</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyToWithFilter(NsgSoft.DataObjects.NsgMemoryTable)">
            <summary>
            Копировать строки в другую таблицу с учетом наложенного фильтра на исходную таблицу (поле Filter)
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyTo(NsgSoft.DataObjects.NsgMemoryTable,System.String[],System.Boolean,System.Boolean)">
            <summary>
            Скопировать указанные столбики в другую таблицу
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="fieldNames">имена колонок для копирования</param>
            <param name="useClone">Если true, то все ссылочные типы будут клонированы, иначе просто скопированы</param>
            <param name="useFilter">Если true, то будет учитываться фильтр, наложенный на таблицу</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyTo(NsgSoft.DataObjects.NsgMemoryTable,`0,System.Boolean)">
            <summary>
            Скопировать строку в другую таблицу
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="row">копируемая строка</param>
            <param name="useClone">Если true, то все ссылочные типы будут клонированы, иначе просто скопированы</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyTo(NsgSoft.DataObjects.NsgMemoryTable,`0,System.String[],System.Boolean)">
            <summary>
            Скопировать строку в другую таблицу
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="row">копируемая строка</param>
            <param name="fieldNames">имена колонок для копирования</param>
            <param name="useClone">Если true, то все ссылочные типы будут клонированы, иначе просто скопированы</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyTo(NsgSoft.DataObjects.NsgMemoryTable,System.Boolean)">
            <summary>
            Cкопировать все строки и все колонки данной таблицы в указанную
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
            <param name="useClone">Если true, то все ссылочные типы будут клонированы, иначе просто скопированы</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CopyTo(NsgSoft.DataObjects.NsgMemoryTable)">
            <summary>
            Cкопировать все строки и все колонки данной таблицы в указанную
            </summary>
            <param name="table">Таблица, куда будут скопированы данные</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CountAll(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения количества строк в таблице, удовлетворяющих заданным условиям.
             Поиск по всем строкам, в том числе и скрытым.
            </summary>
            <param name="compare">Критерии поиска.</param>
            <returns>Возвращает количество.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CountAll(NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Метод получения количества строк в таблице, удовлетворяющих заданным условиям.
            </summary>
            <param name="compare">Критерии поиска.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Возвращает количество.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SumByColumn(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения суммы по указанной колонке.
             Суммирование по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colName">Имя колонки по которой производится суммирование.</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <returns>Возвращает сумму по колонке.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SumByColumn(System.String,NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Метод получения суммы по указанной колонке.
            </summary>
            <param name="colName">Имя колонки по которой производится суммирование.</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Возвращает сумму по колонке.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SumByColumns(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения суммы по указанным колонкам.
             Суммирование по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colNames">Имена колонок по которым производится суммирование.
             Список разделен запятыми (Пример: 'Column1,Column2 , Column3').</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <returns>Возвращает Dictionary с результатами суммирования.
             В качестве ключей - имена колонок.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SumByColumns(System.String,NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Метод получения суммы по указанным колонкам.
            </summary>
            <param name="colNames">Имена колонок по которым производится суммирование.
             Список разделен запятыми (Пример: 'Column1,Column2 , Column3').</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Возвращает Dictionary с результатами суммирования.
             В качестве ключей - имена колонок.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.MaxByColumn(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения максимального значения по указанной колонке.
             Определение по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colName">Имя колонки по которой производится поиск.</param>
            <param name="compare">Условия на выбор строк по которым производится поиск.</param>
            <returns>Возвращает максимальное значение по колонке.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.MaxByColumn(System.String,NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Метод получения максимального значения по указанной колонке.
            </summary>
            <param name="colName">Имя колонки по которой производится поиск.</param>
            <param name="compare">Условия на выбор строк по которым производится поиск.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Возвращает максимальное значение по колонке.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.MaxByColumns(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения максимального значения по указанной колонке.
             Определение по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colNames">Имена колонок по которым производится поиск.
             Список разделен запятыми (Пример: 'Column1,Column2 , Column3').</param>
            <param name="compare">Условия на выбор строк по которым производится поиск.</param>
            <returns>Возвращает Dictionary с результатами.
             В качестве ключей - имена колонок.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.MaxByColumns(System.String,NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Метод получения максимального значения по указанной колонке.
            </summary>
            <param name="colNames">Имена колонок по которым производится поиск.
             Список разделен запятыми (Пример: 'Column1,Column2 , Column3').</param>
            <param name="compare">Условия на выбор строк по которым производится поиск.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Возвращает Dictionary с результатами.
             В качестве ключей - имена колонок.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.MinByColumn(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения минимального значения по указанной колонке.
             Определение по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colName">Имя колонки по которой производится поиск.</param>
            <param name="compare">Условия на выбор строк по которым производится поиск.</param>
            <returns>Возвращает минимальное значение по колонке.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.MinByColumn(System.String,NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Метод получения минимального значения по указанной колонке.
            </summary>
            <param name="colName">Имя колонки по которой производится поиск.</param>
            <param name="compare">Условия на выбор строк по которым производится поиск.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Возвращает минимальное значение по колонке.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.MinByColumns(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения минимального значения по указанной колонке.
             Определение по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colNames">Имена колонок по которым производится поиск.
             Список разделен запятыми (Пример: 'Column1,Column2 , Column3').</param>
            <param name="compare">Условия на выбор строк по которым производится поиск.</param>
            <returns>Возвращает Dictionary с результатами.
             В качестве ключей - имена колонок.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.MinByColumns(System.String,NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Метод получения минимального значения по указанной колонке.
            </summary>
            <param name="colNames">Имена колонок по которым производится поиск.
             Список разделен запятыми (Пример: 'Column1,Column2 , Column3').</param>
            <param name="compare">Условия на выбор строк по которым производится поиск.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Возвращает Dictionary с результатами.
             В качестве ключей - имена колонок.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SumByColumnCirculation(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения сумму по указанным колонкам по NsgDataCirculation.
             Суммирование по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colName">Имя колонки по которой производится суммирование.</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <returns>Возвращает сумму по колонке.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SumByColumnCirculation(System.String,NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Метод получения сумму по указанным колонкам по NsgDataCirculation.
            </summary>
            <param name="colName">Имя колонки по которой производится суммирование.</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Возвращает сумму по колонке.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SumByColumnsCirculation(System.String,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Получить сумму по указанным колонкам Circulation.
             Определение по всем строкам, в том числе и скрытым.
            </summary>
            <param name="colNames">Имена колонок по которым производится суммирование.</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <returns>Dictionary с результатами суммирования. В качесве ключей - имена колонок.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SumByColumnsCirculation(System.String,NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Получить сумму по указанным колонкам Circulation.
            </summary>
            <param name="colNames">Имена колонок по которым производится суммирование.</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Dictionary с результатами суммирования. В качесве ключей - имена колонок.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.IsAggregated">
            <summary>
            Флаг того что выполняется метод AggregateTableRows
            (установка производится самим методом до просчета в 
            True, после просчета и по умолчанию в False)
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.AggregateTableRows(NsgSoft.DataObjects.NsgTable{`0}.AggregateActions,System.String,NsgSoft.DataObjects.NsgCompare,System.Boolean)">
            <summary>
            Базовый агрегатный метод прохода строк таблицы.
            </summary>
            <param name="action">Агрегатное действие.</param>
            <param name="colNames">Список колонок.</param>
            <param name="compare">Условия на выбор строк по которым производится суммирование.</param>
            <param name="allRowsFind">Искать по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
            <returns>Возвращает Dictionary с результатами суммирования.
             В качесве ключей - имена колонок.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SetValue(System.String,System.Object)">
            <summary>
            Метод присвоения значения в строках таблицы по заданной колонке.
             Присвоение только по видимым строкам таблицы.
            </summary>
            <param name="columnName">Имя колонки.</param>
            <param name="newValue">Значение.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SetValue(System.String,System.Object,System.Boolean)">
            <summary>
            Метод присвоения значения в строках таблицы по заданной колонке.
            </summary>
            <param name="columnName">Имя колонки.</param>
            <param name="newValue">Значение.</param>
            <param name="allRowsFind">Флаг замены по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.ReplaceValues(System.String,System.Object,System.Object)">
            <summary>
            Метод замены значения в строках таблицы по заданной колонке.
             Замена только по видимым строкам таблицы.
            </summary>
            <param name="columnName">Имя колонки.</param>
            <param name="oldValue">Старое значение (что заменять).</param>
            <param name="newValue">Новое значение (на что заменить).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.ReplaceValues(System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            Метод замены значения в строках таблицы по заданной колонке.
            </summary>
            <param name="columnName">Имя колонки.</param>
            <param name="oldValue">Старое значение (что заменять).</param>
            <param name="newValue">Новое значение (на что заменить).</param>
            <param name="allRowsFind">Флаг замены по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.ReplaceValues(System.String,System.Collections.Generic.Dictionary{System.Object,System.Object})">
            <summary>
            Метод замены значения в строках таблицы по заданной колонке.
             Замена только по видимым строкам таблицы.
            </summary>
            <param name="columnName">Имя колонки.</param>
            <param name="replaceTable">Таблица замены значений
             (формат: старое значение, новое значение).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.ReplaceValues(System.String,System.Collections.Generic.Dictionary{System.Object,System.Object},System.Boolean)">
            <summary>
            Метод замены значения в строках таблицы по заданной колонке.
            </summary>
            <param name="columnName">Имя колонки.</param>
            <param name="replaceTable">Таблица замены значений
             (формат: старое значение, новое значение).</param>
            <param name="allRowsFind">Флаг замены по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.ReplaceValues(System.String[],System.Collections.Generic.Dictionary{System.Object,System.Object})">
            <summary>
            Метод замены значения в строках таблицы по заданной колонке.
             Замена только по видимым строкам таблицы.
            </summary>
            <param name="columnNames">Список имен колонок.</param>
            <param name="replaceTable">Таблица замены значений
             (формат: старое значение, новое значение).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.ReplaceValues(System.String[],System.Collections.Generic.Dictionary{System.Object,System.Object},System.Boolean)">
            <summary>
            Метод замены значения в строках таблицы по заданной колонке.
            </summary>
            <param name="columnNames">Список имен колонок.</param>
            <param name="replaceTable">Таблица замены значений
             (формат: старое значение, новое значение).</param>
            <param name="allRowsFind">Флаг замены по всем строкам. Если true, то учитываются все строки.
             Если false, то скрытые строки не учитываются.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTable`1.RowsList">
            <summary>
            Список строк.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.SaveToDBF(System.String,System.String,System.String[])">
            <summary>
            Выгрузить таблицу в DBF-IV файл. Выгружаются только числовые и текстовые колонки и даты. 
            Имена колонок DBF создаются такими же, как и у выгружаемых колонок
            </summary>
            <param name="folderName">Имя каталога, где будет создат DBF файл</param>
            <param name="tableName">Имя файла DBF</param>
            <param name="fieldNames">Список выгружаемых полей</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.ColumnToString(System.String,NsgSoft.DataObjects.NsgCompare,System.String)">
            <summary>
            Составить строку из значений, хранящихся в указанной колонке, разделенных указанным разделителем
            </summary>
            <param name="colName">Имя колонки</param>
            <param name="compare">Условие отбора строк. Если не требуется - передавать null</param>
            <param name="separator">Разделитель между значениями колонок</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.ReadAllRequestedReferences(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод, вызывающий дочитывание всех параметров, перечисленных в cmp как параметры сравнения
            </summary>
            <param name="cmp">NsgCompare из которого будут извлечены все ссылки для дочитывания</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTable`1.CreateIndex(System.String[])">
            <summary>
            Создание индекса по колонкам
            </summary>
            <param name="columns">имена колонок</param>
            <returns>индекс</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataTableRow">
            <summary>
            Класс сложного элемента данных - Строка таблицы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.#ctor">
            <summary>
            Пустой конструктор класса, НЕ ВЫЗЫВАТЬ
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.#ctor(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Строка Таблицы по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.#ctor(NsgSoft.DataObjects.NsgMultipleObject,System.String,System.String)">
            <summary>
            Конструктор класса Строка Таблицы первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.#ctor(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgDataObjectList{NsgSoft.DataObjects.NsgSimpleObject,NsgSoft.DataObjects.NsgSimpleObject})">
            <summary>
            Конструктор класса Строка Таблицы со списком реквизитов.
            </summary>
            <param name="inOwner">Таблица владелец строки.</param>
            <param name="inObjectList">Список реквизитов строки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.Finalize">
            <summary>
            Деструктор класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableRow.FullName">
            <summary>
            Получение полное имени логического объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableRow.Tag">
            <summary>
            Тэг содержит произвольные данные.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableRow.VisibleIndex">
            <summary>
            Получение видимого индекса строка.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableRow.IsDataModified">
            <summary>
            Получение и установка флага изменения данных в строке.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableRow.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableRow.Value">
            <summary>
            Получение и установка значения.
            При установке значения, если задан databaseManager, происходит позиционирование объекта (поиск по FullID) 
            и заполнение объекта данными из БД. 
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableRow.RowNumber">
            <summary>
            Получение индекса строки в таблице.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableRow.MetaData">
            <summary>
            Метаданные для получение объектов по ссылкам
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTableRow.Root">
            <summary>
            Таблица - владелец строки
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.ToString">
            <summary>
            Не реализовано для данного класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.Edit(System.String[])">
            <summary>
            Метод редактирования строки объекта.
            </summary>
            <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.OnObjectListPropertyChanged(NsgSoft.DataObjects.NsgSimpleObject,NsgSoft.DataObjects.NsgObjectProperty)">
            <summary>
            Вызывается свойством объекта при изменении 
            </summary>
            <param name="property">Свойство, вызвавшее событие</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.InternalPost(System.Collections.Generic.List{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{NsgSoft.DataObjects.NsgMultipleObject}})">
            <summary>
            Всегда возвращает true.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.BasePost">
            <summary>
            Не имеет смысла у данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.Cancel(System.String[])">
            <summary>
            Не имеет смысла у данного объекта
            </summary>
            <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.GetLogicType">
            <summary>
            Возвращает лочичесокий тип объекта 
            </summary>
            <returns>Лочичесокий тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.IsLock">
            <summary>
            Метод проверки блокировки объекта
            Блокируется объект - владелец
            </summary>
            <returns>Возвращает true, если объект заблокирован. Иначе false</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTableRow.MoveRow(System.Int32)">
            <summary>
            Переместить строку на указанное число строк.
            </summary>
            <param name="p">На сколько строк переместить. Плюс - вниз таблицы, минус - наверх.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMultipleObject">
            <summary>
            Абстрактный класс сложного логического объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._TABLE_NAME">
            <summary>
            Имя таблицы базы данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._FULL_NAME">
            <summary>
            Полное имя объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._DATABASE_NAME">
            <summary>
            Имя базы данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._SEARCH_FIELDNAME">
            <summary>
            Имя поля для поиска.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._SEARCH_TYPE">
            <summary>
            Тип поиска
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._FIELDS_CASH">
            <summary>
            Кэш имен полей для реквизитов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._DATABASE_MANAGER">
            <summary>
            Объект доступа к БД.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._VALUE_MASK">
            <summary>
            Шаблон представления значения.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._CURRENT_VALUE_MASK">
            <summary>
            Шаблон представления значения. Строка для преобрабования.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._VALUE_MASK_STRING">
            <summary>
            Шаблон представления значения. Строка для преобрабования.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._VALUE_MASK_OBJECTS_NAMES">
            <summary>
            Шаблон представления значения. Строка для преобрабования.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._GROUPS">
            <summary>
            Список групп.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._DEFAULT_SORTING">
            <summary>
            Сортировка по умолчанию.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._DEFAULT_SORTING_NAME">
            <summary>
            Сортировка по умолчанию.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._USE_FULLTEXT_INDEX">
            <summary>
            Флаг использования полнотекстового поиска по данной таблице.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._INTERCONNECTED_PROPERTIES">
            <summary>
            Список зависимостей.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._DEFAULT_ELEMENT_FORM_NAME">
            <summary>
            Имя основной формы элемента.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._DEFAULT_LIST_FORM_NAME">
            <summary>
            Имя основной формы списка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._VISIBLE_ADMIN_ONLY">
            <summary>
            Видим только адмистраторам.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject._PRINT_RENAME_TABLE">
            <summary>
            Переименование для печатных форм
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject.objState">
            <summary>
            текущее состояние объекта
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject.objectList">
            <summary>
            список всех сложных объектов
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject.oldPrefix">
            <summary>
            Предыдущий префикс док-та
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject.oldCodeNumber">
            <summary>
            Предыдущий код док-та
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject.oldDate">
            <summary>
            Предыдущая дата
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.Descriptor">
            <summary>
            Описатель основных свойств объекта метаданных
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.InFindMode">
            <summary>
            флажок чтения объекта из БД. Пока идет чтение сообщения об изменении свойств не посылаются
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject.DoNotCacheFields">
            <summary>
            Флаг, запрещающий дочитывание объектов при выполнении Find
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObject.IsDistinctFields">
            <summary>
            Флаг предотвращения получения повторяющихся значений полей 
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.#ctor">
            <summary>
            Конструктор абстрактного класса сложного логического объекта по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.#ctor(System.String,System.String)">
            <summary>
            Конструктор абстрактного класса сложного логического объекта первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор абстрактного класса сложного логического объекта данных из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Finalize">
            <summary>
            Деструктор класса.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.RenameReferences">
            <summary>
            Переименование автоматически создаваемых объектов
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.Visible">
            <summary>
            Внимание! Использовать осторожно
            Если сбросить этот флаг, то при post-е объект не будет разлочен
            </summary>
            <summary>
            Видиость объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.internalName">
            <summary>
            Получение и установка имени объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.internalGroupName">
            <summary>
            Получение имени группы, в которой содержится объект.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.SetNameWithoutCheck(System.String)">
            <summary>
            Установка имени логического объекта без проверки имени. Для внутреннего использования.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.Guid">
            <summary>
            Идентификатор объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.ToolTipOwnerDraw">
            <summary>
            Флаг ручной прорисовки tooltip
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.ToolTipPopup(System.Windows.Forms.PopupEventArgs)">
            <summary>
            Запрошен вывод tooltip
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.ToolTipDraw(System.Windows.Forms.DrawToolTipEventArgs)">
            <summary>
            Прорисовка tooltip
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.PrintObjects">
            <summary>
            Получение списка объектов для печати. Используется для задания 
             объектов, которые могут печататься вместе с данным объектом.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.CodeChange">
            <summary>
            Если true, то номер документа изменилися(только для справочников и документов).
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.DefaultSortingName">
            <summary>
            Имя поля для сортировки по умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.DefaultSorting">
            <summary>
            Сортировка по умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.ValueMaskObjectsNames">
            <summary>
            Данные для преобразования ToString()
             заполняются при присвоении ValueMask.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.initFieldsCash">
            <summary>
            Заполнение кеша полей после создания в сгенерированном классе
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.FieldsCash">
            <summary>
            Кэш имен полей для реквизитов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.InterconnectedProperties">
            <summary>
            Список зависимостей.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.DefaultElementFormName">
            <summary>
            Имя формы элемента, открываемая по-умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.DefaultListFormName">
            <summary>
            Имя формы элемента, открываемая по-умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.CurrentValueMask">
            <summary>
            Строка преобразования по ValueMask.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.ValueMaskString">
            <summary>
            Строка преобразования по ValueMask.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.ClassName">
            <summary>
            Имя класса в кодогенерации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.Empty">
            <summary>
            Пустой объект этого типа
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.IndexList">
            <summary>
            Получение списка индексов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.IsExclusiveAccessObject">
            <summary>
            Объект не требует блокировки на уровне БД. Монопольность работы с объектом гарантируется логикой и реализацией
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.Selected">
            <summary>
            Проверка, присвоено ли объекту не пустое значение
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.ToString(System.String)">
            <summary>
            Метод получения строкового представления объекта по шаблону
            </summary>
            <param name="mask">Шаблон.</param>
            <returns>Стока представления.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.ToString">
            <summary>
            Метод получения строкового представления объекта.
            </summary>
            <returns>Строка представления.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.FullNameLock">
            <summary>
            Блокировка полного имени. Используется во внутренних процедурах массовой обработки 
             объектов. При блокировке не идет строковое сложение (this.GroupName + "." + this.Name).
             Повышает производительность при большом числе вызовов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.FullName">
            <summary>
            Получение полное имени логического объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.ValueMask">
            <summary>
            Получение и установка маски представления значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.SearchType">
            <summary>
            Получение и установка типа поиска
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.SearchFieldName">
            <summary>
            Получение и установка имени поля для поиска.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.AllFieldNamesForSearch">
            <summary>
            Получение списка имен полей, доступных для поиска.
            </summary>
            <remarks>
            IDictionary(Key - Предcтавление,  
            </remarks>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.AllFieldNamesForEdit">
            <summary>
            Получение списка имен полей, доступных для редактирования пользователем.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.DbManagerForConfigurator">
            <summary>
            Получение и установка имени базы данных из Конфигуратора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.DatabaseName">
            <summary>
            Получение и установка имени базы данных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.VisibleAdminOnly">
            <summary>
            Получение и установка флаг видимости только для администраторов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.TableName">
            <summary>
            Получение и установка имени таблицы базы данных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.ObjectState">
            <summary>
            Получение и установка текущего состояния объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.DatabaseManager">
            <summary>
            Получение объекта доступа к базе данных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.MetaData">
            <summary>
            Получение объекта доступа к метаданным.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.Value">
            <summary>
            Получение и установка значения.
            При установке значения, если задан databaseManager, происходит позиционирование объекта (поиск по ID) 
            и заполнение объекта данными из БД
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.ObjectList">
            <summary>
            Получение объекта управления списком вложенных объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.Item(System.String)">
            <summary>
            Получение копии объекта по пути.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.Item(NsgSoft.DataObjects.INsgNameProvider)">
            <summary>
            Получение копии объекта по имени.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.Item(NsgSoft.Common.NsgDataFixedFields)">
            <summary>
            Получение копии объекта по его идентификатору.
            </summary>
            <param name="key">Идентификатор объекта.</param>
            <returns>Копия объекта из списка.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.IsFolder">
            <summary>
            Признак того что объект является группой. Должно переопределяться
            в объектах, которые могут быть группами.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.IsModify">
            <summary>
            Объект изменен.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.IsMarked">
            <summary>
            Признак того, что документ помечен на удаление 
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.State">
            <summary>
            Состояние объекта (удален, проведен, etc...)
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.UseFullTextIndex">
            <summary>
            Признак использования полнотекстового поиска по таблице, представляющей данный объект
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.UserPresentation(System.Boolean)">
            <summary>
            Полное представление для пользователей
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.UserPresentation">
            <summary>
            Полное представление для пользователей
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.IsDateExpiredForEdit(System.Boolean)">
            <summary>
            Метод проверки даты запрета редактирования применительно к текущему объекту.
            </summary>
            <param name="throwError">Бросать исключение в случае несоответствия 
             текущего объекта дате запрета редактирования.</param>
            <returns>Возвращет true, если редактирование текущего объекта запрещено, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetFilledPrintObjects">
            <summary>
            Метод получения списка заполненных объектов для печати.
            </summary>
            <returns>Возвращает список объектовдля печати.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnRequisiteRequestForEdit(System.String)">
            <summary>
            Метод запроса реквизитом разрешения на редактирование.
            </summary>
            <param name="requisiteName">Имя реквизита.</param>
            <returns>Возвращает true, если редактирование разрешено, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetInitMethod">
            <summary>
            Метод получения полного имени класса.
            </summary>
            <returns>Возвращает строку в формате: ИМЯ КОНФИГУРАЦИИ.ИМЯ МЕТАДАННЫХ.ПОЛНОЕ ИМЯ ОБЪЕКТА .</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetLogicType">
            <summary>
            Метод получения типа логического объекта в виде значения NsgMultipleLogicTypes.
            </summary>
            <returns>Тип логического объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CreateDefaultFields">
            <summary>
            Метод добавления рекомендованных реквизитов при создании из Конфигуратора.
             Пустой в базовом классе.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FillNumber">
            <summary>
            Метод заполнения уникального номера объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.SaveContent(System.Configuration.ConfigXmlDocument)">
            <summary>
            Метод записи объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.LoadContent(System.Xml.XmlElement)">
            <summary>
            Метод загрузки объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetTypesForAdding(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Метод получения списка доступных для добавления в объект типов по группе.
            </summary>
            <param name="group">Тип группы.</param>
            <returns>Список типов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetSubTypesForAdding">
            <summary>
            Метод получения списка групп доступных для добавления в объект типов.
            </summary>
            <returns>Список групп.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.AddGroup(System.String)">
            <summary>
            Метод добавления новой пустой группы.
            </summary>
            <param name="name">Имя новой группы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.RemoveGroup(System.String)">
            <summary>
            Метод удаления группы и всех ее элементов.
            </summary>
            <param name="name">Имя удаляемой группы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.RenameGroup(System.String,System.String)">
            <summary>
            Метод переименования группы.
            </summary>
            <param name="oldName">Старое имя группы.</param>
            <param name="newName">Новое имя группы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.IsGroupExist(System.String)">
            <summary>
            Метод проверки существования группы в полном списке групп по имени.
            </summary>
            <param name="name">Имя проверяемой группы.</param>
            <returns>Возвращает true, если группа найдена в списке, иначе - false.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.Groups">
            <summary>
            Получение списка групп.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.GroupsInternal">
            <summary>
            Получение внутреннего списка групп.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetObjectsBySubType(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Получение списка объектов по SubType
            </summary>
            <param name="group">SubType для поиска.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetObjectNamesBySubType(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Получение списка имен объектов по SubType
            </summary>
            <param name="group">SubType для поиска.</param>
            <returns>Список имен найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetObjectsBySubType(NsgSoft.Common.NsgRekvisitSubType,System.Boolean)">
            <summary>
            Получение списка объектов по SubType
            </summary>
            <param name="group">SubType для поиска.</param>
            <param name="showHidden">Показывать ли скрытые.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetObjectNamesBySubType(NsgSoft.Common.NsgRekvisitSubType,System.Boolean)">
            <summary>
            Получение списка имен объектов по SubType
            </summary>
            <param name="group">SubType для поиска.</param>
            <param name="showHidden">Показывать ли скрытые.</param>
            <returns>Список имен найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetObjectsByGroup(System.String)">
            <summary>
            Получение списка объектов по группе.
            </summary>
            <param name="group">Имя группы для поиска.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CreateGroupName(System.String)">
            <summary>
            Метод авто создания имени по образцу. ДОбавляет "_N" к образцу
            </summary>
            <param name="writer">Объект записи XML текста.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Lock">
            <summary>
            Метод установки блокировки объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Lock(System.String)">
            <summary>
            Метод установки блокировки объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Lock(System.String,System.Boolean)">
            <summary>
            Метод установки блокировки объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.LockWithWait">
            <summary>
            Метод установки блокировки объекта с ожиданием объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.LockWithWait(System.String)">
            <summary>
            Метод установки блокировки объекта с ожиданием объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.UnLock">
            <summary>
            Метод снятия блокировки с объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.UnLock(System.String)">
            <summary>
            Метод снятия блокировки с объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.IsLock">
            <summary>
            Метод проверки блокировки объекта
            </summary>
            <returns>Возвращает true, если объект заблокирован. Иначе false</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OwnerLock(System.String)">
            <summary>
            Метод определения владельца блокировки
            </summary>
            <param name="resource">Блокируемый ресурс</param>
            <returns>Возвращает имя пользователя</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Cancel">
            <summary>
            Переводит объект из состояния редактирования или создания в предыдущее состояние, отменяя сохранение в БД.
             Значения полей при этом не изменяются.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Cancel(System.String[])">
            <summary>
            Переводит объект из состояния редактирования или создания в предыдущее состояние, отменяя сохранение в БД.
             Значения полей при этом не изменяются.
            </summary>
            <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetReference(System.String)">
            <summary>
            Возвращает типизированную ссылку на объект данного типа
            </summary>
            <param name="Name">Имя создаваемой ссылки</param>
            <returns>Новая типизированная ссылка</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CheckOperationAccess(NsgSoft.Common.NsgMultipleObjectOperation,System.Boolean)">
            <summary>
            Метод проверки доступа по операции для текущего пользователя.
            </summary>
            <param name="operation">Операция.</param>
            <param name="raiseException">Вызывать исключение при отсутствии доступа.</param>
            <returns>Возвращает булевый флаг доступа по операции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetCurrentUserRights">
            <summary>
            Метод получения прав по объекту для текущего пользователя.
            </summary>
            <returns>Возвращает права на данный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetCurrentUserCompare">
            <summary>
            Метод получения фильтра по объекту для текущего пользователя.
            </summary>
            <returns>Возвращает фильтр на данный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetUserCompare(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Метод получения фильтра по объекту для заданного пользователя.
            </summary>
            <param name="user">Пользователь.</param>
            <returns>Возвращает фильтр на данный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetRights(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Метод получения прав по объекту для заданного пользователя.
            </summary>
            <param name="user">Пользователь.</param>
            <returns>Возвращает права на данный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetAvailableOpertions">
            <summary>
            Метод получения доступных операций по данному метаданных.
            </summary>
            <returns>Возвращает список перечисление операций.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnAfterInsertInObjectList">
            <summary>
            Выполняются действия, необходимые после вставки объекта в ObjectList метаданных 
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnAfterRename(System.String)">
            <summary>
            Вызываетя после изменение имени объекта.
            </summary>
            <param name="oldName">старое имя</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetAggregate(System.String,NsgSoft.Common.NsgAggregateResult,System.String[])">
            <summary>
            Получение указанных агрегатных значений.
            </summary>
            <param name="value">Реквизит по которому нужно вычислить агрегатные значения.
            Только числовые реквизиты и даты для минимума и максимума.</param>
            <param name="resultType">Перечень необходимых агрегатных функций значений.</param>
            <param name="groupBy">По каким реквизитам группировать.</param>
            <returns>NsgMemoryTable содержащая колонки со значениями реквизитов из groupBy 
            и колонки с именами из values каждая содержит NsgDataAggregate</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetAggregate(System.String,NsgSoft.DataObjects.NsgCompare,NsgSoft.Common.NsgAggregateResult,System.String[])">
            <summary>
            Получение указанных агрегатных значений.
            </summary>
            <param name="value">Реквизит по которому нужно вычислить агрегатные значения.
            Только числовые реквизиты и даты для минимума и максимума.</param>
            <param name="compare">Условия выборки.</param>
            <param name="resultType">Перечень необходимых агрегатных функций значений.</param>
            <param name="groupBy">По каким реквизитам группировать.</param>
            <returns>NsgMemoryTable содержащая колонки со значениями реквизитов из groupBy 
            и колонки с именами из values каждая содержит NsgDataAggregate</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetAggregate(System.String[],NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Получение всех возможных агрегатных значений.
            </summary>
            <param name="values">Массив реквизитов по которым нужно вычислить агрегатные значения.
            Только числовые реквизиты и даты для минимума и максимума.</param>
            <param name="compare">Условия выборки.</param>
            <param name="groupBy">По каким реквизитам группировать.</param>
            <returns>NsgMemoryTable содержащая колонки со значениями реквизитов из groupBy 
            и колонки с именами из values каждая содержит NsgDataAggregate</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetAggregate(System.String[],NsgSoft.DataObjects.NsgCompare,NsgSoft.Common.NsgAggregateResult,System.String[])">
            <summary>
            Получение указанных агрегатных значений.
            </summary>
            <param name="values">Массив реквизитов по которым нужно вычислить агрегатные значения.
            Только числовые реквизиты и даты для минимума и максимума.</param>
            <param name="compare">Условия выборки.</param>
            <param name="resultType">Перечень необходимых агрегатных функций значений.</param>
            <param name="groupBy">По каким реквизитам группировать.</param>
            <returns>NsgMemoryTable содержащая колонки со значениями реквизитов из groupBy 
            и колонки с именами из values каждая содержит NsgDataAggregate</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.getEmptyAggregateMemoryTable(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Создает таблицу для получения агрегатных значений.
            </summary>
            <returns>Пустая таблица с соответствующими полями.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.getNameResultList(System.String[],NsgSoft.Common.NsgAggregateResult)">
            <summary>
            Проверяет наличие запрошенных реквизитов в объекте и возвращает их список.
            </summary>
            <param name="names">Массив запрошенных реквизитов.</param>
            <returns>Список реквизитов.</returns>
            <exception cref="T:System.ArgumentException">В случае отсутствия реквизита в объекте генерирует исключение.</exception>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.getNameResultList(System.String[])">
            <summary>
            Проверяет наличие реквизитов для группировки в объекте и возвращает их список.
            </summary>
            <param name="names">Массив запрошенных реквизитов.</param>
            <returns>Список реквизитов.</returns>
            <exception cref="T:System.ArgumentException">В случае отсутствия реквизита в объекте генерирует исключение.</exception>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgMultipleObject.BeforePost">
            <summary>
            Событие BeforePost. Событие генерируется перед записью объекта.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgMultipleObject.AfterPost">
            <summary>
            Событие AfterPost. Событие генерируется после записи объекта.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgMultipleObject.BeforeEdit">
            <summary>
            Событие BeforeEdit. Событие генерируется перед редактированием объекта.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgMultipleObject.EditCanceled">
            <summary>
            Событие EditCanceled. Событие генерируется если редактирование объекта не удалось, либо было отменено.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgMultipleObject.BeforeDelete">
            <summary>
            Событие BeforeDelete. Событие генерируется перед удалением объекта.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgMultipleObject.DeleteCanceled">
            <summary>
            Событие DeleteCanceled. Событие генерируется если удаление объекта не удалось, либо было отменено.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgMultipleObject.ObjectListPropertyChanged">
            <summary>
            Событие ObjectListProperty. Событие генерируется при изменении любого свойства объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.ObjectListPropertyChangedHandler">
            <summary>
            Получение обработчика события при изменении любого свойства объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnObjectListPropertyChanged(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Вызывается свойством объекта при изменении 
            </summary>
            <param name="rekvisit">Реквизит, вызвавший событие</param>
            <param name="property">Свойство реквизита, вызвавшее событие</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnObjectListPropertyChanged(NsgSoft.DataObjects.NsgSimpleObject,NsgSoft.DataObjects.NsgObjectProperty)">
            <summary>
            Вызывается свойством объекта при изменении 
            </summary>
            <param name="rekvisit">Реквизит, вызвавший событие</param>
            <param name="property">Свойство реквизита, вызвавшее событие</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnAfterObjectListPropertyChanged(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Событие генерируется после изменения свойства объекта
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnObjectListPropertyChanged">
            <summary>
            Вызывается свойством объекта при изменении 
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgMultipleObject.ValueChanged">
            <summary>
            Событие Событие ValueChanged. Событие генерируется после перепозиционирования объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnValueChangedChanged">
            <summary>
            Вызывается свойством Value объекта после изменения
            </summary>
            <param name="property">Свойство, вызвавшее событие</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMultipleObject.ValueChangedEventHandler">
            <summary>
            Событие о выборе объекта пользователем в форме подбора
            </summary>
            <param name="sender">Форма, генерирующая событие</param>
            <param name="arg">Выбранные объект. Если передается null, то выбор не произведен</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgMultipleObject.BeforeObjectListPropertyChanged">
            <summary>
            Событие BeforeObjectListProperty. Событие генерируется перед изменением значения любого свойства объекта.
            Изменение можно отменить, выставив Cancel = true
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnBeforeObjectListPropertyChanged(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Вызывается свойством объекта перед изменение свойства 
            </summary>
            <param name="property">Свойство, вызвавшее событие</param>
            <returns>true - изменение разрешено</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.LoadDataFromXML(System.Xml.XmlReader)">
            <summary>
            Восстановить значение объекта и всех его свойств из XML
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMultipleObject.Names">
            <summary>
            Класс содержит имена реквизитов, наследуется в сгенерированных сборках.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CopyNotPredefinedFieldsFromObject(NsgSoft.DataObjects.NsgMultipleObject,System.String[])">
            <summary>
            Копирует значение всех совпадающих по имени полей из указазанного объекта в текущий.
            При этом, не копируются все предопределенные поля, например, Идентификатор, НомерДокумента, ДатаДокумента и т.п.
            Для копирования всех полей следует использовать метод CopyFieldsFromObject(...)
            </summary>
            <param name="inObject">Объект, значения полей которого копируются</param>
            <param name="excludeFields">Имена полей, которые не надо копировать</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CopyFieldsFromObject(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgCopyParams)">
            <summary>
            Копирует значение всех совпадающих по имени полей из указазанного объекта в текущий
            Все ссылочные типы будут клонированы. Если это не требуется - используйте метод CopyValuesFromObject
            </summary>
            <param name="inObject">Объект, значения полей которого копируются</param>
            <param name="param">Параметры копирования</param>
            <param name="excludeFields">Имена полей, которые не надо копировать</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CopyFieldsFromObject(NsgSoft.DataObjects.NsgMultipleObject,System.String[])">
            <summary>
            Копирует значение всех совпадающих по имени полей из указазанного объекта в текущий
            Все ссылочные типы будут клонированы. Если это не требуется - используйте метод CopyValuesFromObject
            </summary>
            <param name="inObject">Объект, значения полей которого копируются</param>
            <param name="excludeFields">Имена полей, которые не надо копировать</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CopyValuesFromObject(NsgSoft.DataObjects.NsgMultipleObject,System.String[])">
            <summary>
            Копирует значение всех совпадающих по имени полей из указазанного объекта в текущий. 
            При этом отссылочные типов переносятся только значени. Сами ссылки не клонируются. Таким образом,
            если в дальнейшем требуется обращение к полям ссылочных типов, то следует пользоваться
            методом CopyFieldsFromObject.
            </summary>
            <param name="inObject">Объект, значения полей которого копируются</param>
            <param name="excludeFields">Имена полей, которые не надо копировать</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.InteractiveNew">
            <summary>
            Метод, вызываемый при интерактивном создании нового элемента.
             Может перекрываться в наследниках для начального заполнения полей объекта.
             Не вызывается при копировании и вводе на основании.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.InteractiveEdit">
            <summary>
            Метод, вызываемый при интерактивном редактированииэлемента.
             Не вызывается при копировании и вводе на основании, создании нового элемента.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.AfterFind">
            <summary>
            Метод вызывается после окончания чтения объекта из базы данных и после отработки команды New
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObject.PrintRenameTable">
            <summary>
            Таблица переименований реквизитов из таблицы печати в реквизиты объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetPrintForms(System.DateTime)">
            <summary>
            Получение описателей печатных форм
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Equals(System.Object)">
            <summary>
            Сравнение текущего объекта с заданным.
            </summary>
            <param name="obj">Объект, с которым сравнивается текущий.</param>
            <returns>Результат сравнения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Equals(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Сравнение текущего объекта с заданным.
            </summary>
            <param name="obj">Объект, с которым сравнивается текущий.</param>
            <returns>Результат сравнения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CompareTo(System.Object)">
            <summary>
            Сравнение  текущего объекта с заданным.
             Сначала сравнивается по Value, в случае не равенства - по представлению.
            </summary>
            <param name="obj">Объект, с которым сравнивается текущий.</param>
            <returns>Меньше 0 - данный объект меньше, чем obj
            Равно 0 - объекты равны
            Больше 0 - данный объект больше, чем obj
            </returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CompareTo(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Сравнение  текущего объекта с заданным.
             Сначала сравнивается по Value, в случае не равенства - по представлению.
            </summary>
            <param name="obj">Объект, с которым сравнивается текущий.</param>
            <returns>Меньше 0 - данный объект меньше, чем obj,
            Равно 0 - объекты равны,
            Больше 0 - данный объект больше, чем obj.
            </returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetHashCode">
            <summary>
            Получение хэш кода.
            </summary>
            <returns>Значение хэш кода.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.op_Equality(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Перегрузка оператора сравнения (==) по значениям.
            </summary>
            <param name="one">Объект для сравнения.</param>
            <param name="two">Объект для сравнения.</param>
            <returns>Возвращает true, если объекты равны, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.op_Inequality(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Перегрузка оператора сравнения (!=) по ссылкам.
            </summary>
            <param name="one">Объект для сравнения.</param>
            <param name="two">Объект для сравнения.</param>
            <returns>Возвращает true, если объекты не равны, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.ShowObject(System.String,NsgSoft.DataObjects.INsgObjectForm,System.Boolean)">
            <summary>
            Показать заданную форму текущего объекта.
            </summary>
            <param name="formName">Имя формы элемента.</param>
            <param name="parentForm">Форма - владелец отображенной формы.</param>
            <param name="forEdit">Флаг открытия на редактирование.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.ShowObject(System.String,NsgSoft.DataObjects.INsgObjectForm)">
            <summary>
            Показать заданную форму текущего объекта для просмотра.
            </summary>
            <param name="formName">Имя формы элемента.</param>
            <param name="parentForm">Форма - владелец отображенной формы.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.ShowObject">
            <summary>
            Показать форму текущего объекта по умолчанию для просмотра.
            </summary>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.ShowObjectList(System.String)">
            <summary>
            Показать заданную форму списка для текущего типа.
            </summary>
            <param name="formName">Имя формы списка.</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.ShowObjectList">
            <summary>
            Показать форму списка по умолчанию для текущего типа.
            </summary>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnGetObjectForm(System.String)">
            <summary>
            Получить заданную форму объекта для просмотра.
            </summary>
            <param name="formName">Имя формы, которую требуется показать</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnGetObjectListForm(System.String)">
            <summary>
            Получить заданную форму списка объектов текущего типа.
            </summary>
            <param name="formName">Имя формы, которую требуется показать</param>
            <returns>Возвращает отображенную форму.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.OnShowObjectForm(System.Windows.Forms.Form)">
            <summary>
            Показать форму
            </summary>
            <param name="form">форма</param>
            <returns>true - если обработано, false - если система должна отработать показ формы</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.SetRekvisitInDatabase(System.String,System.Object,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Заполнение реквизитов в базе данных
            </summary>
            <param name="destinationName">имя заполняемого реквизита</param>
            <param name="value">значение</param>
            <param name="compare">условие</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CopyRekvisitInDatabase(System.String,System.String,NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgTransaction)">
            <summary>
            Копирование реквизитов в базе данных
            </summary>
            <param name="sourceName">имя реквизита источника</param>
            <param name="destinationName">имя заполняемого реквизита</param>
            <param name="compare">условие</param>
            <param name="transaction">транзакция</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetSorting(System.String)">
            <summary>
            Метод получения объекта сравнения для текущего объекта.
            </summary>
            <param name="parameters">Строка параметров сравнения.</param>
            <returns>Объект сравнения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.SetFieldNames">
            <summary>
            Задает имена полей в базе данных для объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FillFieldsCash">
            <summary>
            Заполнение кэша полей
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.fillFieldsCache">
            <summary>
            Заполнение кэша полей
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetObjectNameByFieldName(System.String)">
            <summary>
            Метод получения имени объекта-реквизита по имени соответствующего ему поля БД.
            </summary>
            <param name="inFieldName">Имя поля в БД, связанного с реквизитом.</param>
            <returns>Имя объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetObjectByFieldName(System.String)">
            <summary>
            Метод получения объекта-реквизита по имени соответствующего ему поля БД.
            </summary>
            <param name="inFieldName">Имя поля в БД, связанного с реквизитом.</param>
            <returns>Имя объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetObjectNameByFieldName(System.String,System.Boolean)">
            <summary>
            Метод получения имени объекта-реквизита по имени соответствующего ему поля БД.
            </summary>
            <param name="inFieldName">Имя поля в БД, связанного с реквизитом.</param>
            <param name="throwError">Бросать исключение, если поле не найдено.</param>
            <returns>Имя объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetAllFields(NsgSoft.DataObjects.NsgFieldsFilter,NsgSoft.DataObjects.NsgSimpleObject[])">
             <summary>
             Метод получения обобщенного описания реквизитов объекта
             </summary>
            <param name="filter">Фильтр отбора полей</param>
             <returns>Список необходимых для запроса полей.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetAllIndexes">
            <summary>
            Метод получения индексов объекта
            </summary>
            <returns>Возвращает названия индексов и списки полей в них входящих</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.New">
            <summary>
            Метод создания новой строки объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.NewCopy">
            <summary>
            Метод создания новой строки объекта с копированными данными.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.DataSafeNew">
            <summary>
            Метод создания новой строки объекта с сохранением данных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Edit">
            <summary>
            Метод редактирования строки объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Edit(System.String[])">
            <summary>
            Метод редактирования строки объекта.
            </summary>
            <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.UpdateFromDatabase(NsgSoft.DataObjects.NsgObjectStates,System.String[])">
            <summary>
            Метод обновления объекта из БД.
            </summary>
            <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetArray``1(System.Int32)">
            <summary>
            Метод получения массива пустых объектов заданного типа.
            </summary>
            <typeparam name="Template">Шаблон получаемых объектов.</typeparam>
            <param name="count">Количество получаемых объектов.</param>
            <returns>Массив пустых объектов заданного типа.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.BasePost(NsgSoft.Database.NsgTimeMoment,NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgSimpleObject[],System.Boolean)">
            <summary>
            Метод базовых изменений объекта в базе. Может перекрываться во всех объектах наследниках.
            </summary>
            <returns>Возвращает true при удачном изменении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.BasePost(NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод сохранения массива элементов сложного объекта. Для внутреннего использования.
            </summary>
            <param name="Array">Массив элементов справочника.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.InternalPost(System.Collections.Generic.List{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{NsgSoft.DataObjects.NsgMultipleObject}})">
            <summary>
            Метод изменения объекта в базе. Перекрывается только в пределах сборки NsgSoft.DataObjects.
             Для внутреннего пользования.
            </summary>
            <param name="postedList">Список рекурсивно сохраненных объектов.</param>
            <param name="postedObjects">Список объектов на сохранение по типам.</param>
            <returns>Возвращает true при удачном изменении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Post">
            <summary>
            Метод изменения объекта в базе.
            </summary>
            <returns>Возвращает true при удачном изменении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Post(System.Boolean)">
            <summary>
            Метод изменения объекта в базе.
            </summary>
            <param name="inIsUnlock">Если сбросить этот флаг, то при post-е объект не будет разлочен</param>
            <returns>Возвращает true при удачном изменении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Post(NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод сохранения массива элементов сложного объекта.
            </summary>
            <param name="array">Массив элементов справочника.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.postCollectedObjects(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{NsgSoft.DataObjects.NsgMultipleObject}},System.Boolean)">
            <summary>
            Метод записи собранных объектов.
            </summary>
            <param name="postObjs">Список объектов по типам.</param>
            <param name="useMassPost">Если true, то будет использован алгоритм массового сохранения, даже для одного объекта</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.BeforePostObjects(NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод вызывается перед сохранением объекта и связанных объектов.
             Дает возможность провести какие-либо действия с объектами до сохранения.
             В список аргументов метода может входить и текущий объект.
            </summary>
            <param name="objects">Список объектов на сохранение.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.AfterPostAllObjects">
            <summary>
            Метод вызывается после сохранения объекта и всех связанных объектов.
             Дает возможность провести какие-либо действия после сохранения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Select``1(NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Метод получения курсора на выборку объектов по определенным критериям.
            </summary>
            <param name="comp">Объект сравнения.</param>
            <param name="sort">Объект сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetNewCursor``1">
            <summary>
            Метод получения нового курсора без создания выборки.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetNewVirtualCursor``1">
            <summary>
            Метод получения курсора для создания выборки
            </summary>
            <typeparam name="Template">Тип данных, возвращаемый курсором</typeparam>
            <returns>Курсор. Выборка данных осуществляется методом Next</returns>
            <remarks>Курсор следует использовать вместо метода FindAll в тех случаях, когда объем 
            обрабатываемых данных может быть достаточно велик и требуется обрабатывать данные порциями.
            Курсор осуществляет выборку данных порциями (по умолчанию, по 100 объектов). 
            Эта величина может быть изменена с помощью свойства RowToFetch</remarks>
            <example>
            АдресаКонтрагентов спрАдр = АдресаКонтрагентов.Новый();
            NsgVirtualCursor\АдресаКонтрагентов\ курсорАдр = спрАдр.GetNewVirtualCursor\АдресаКонтрагентов\();
            while ((спрАдр = курсорАдр.Next) != null)
            {
                спрАдр.Edit();
                спрАдр.Post();
            }
            </example>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.CreateAdditionalAttributes">
            <summary>
            Создает необходимые сервисные таблицы, если их еще нет или производит их рестуктуризацию
            в соответствии с набором полей в ObjectList
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.UnSetDeleteMark">
            <summary>
            Снять пометку удаления с объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.UnSetDeleteMark(NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Снять пометку удаления с группы объектов
            </summary>
            <param name="Array">Массив помечаемых на удаление объектов</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.SetDeleteMark">
            <summary>
            Установить пометку удаленияна объект
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.SetDeleteMark(NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Установить пометку удаления на группу объектов
            </summary>
            <param name="Array">Массив помечаемых на удаление объектов</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.SetDeleteMark(NsgSoft.DataObjects.NsgMultipleObject[],NsgSoft.DataObjects.NsgDataDocState)">
            <summary>
            Установить ObjectState пометку удаления на группу объектов
            </summary>
            <param name="Array">Группа объектов</param>
            <param name="state">Устанавливаемый ObjectState</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Delete">
            <summary>
            Метод удаления объекта сложного типа
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.DeleteArray(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод удаления объекта(ов) сложного типа
            </summary>
            <param name="condition">Критерии для удаления</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.DeleteArray(NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgTransaction)">
            <summary>
            Метод удаления объекта(ов) сложного типа
            </summary>
            <param name="condition">Критерии для удаления</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.DeleteArray(NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.DeleteArray(NsgSoft.DataObjects.NsgMultipleObject[],NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgTransaction,System.Int32)">
            <summary>
            Метод удаления объектов сложного типа
            </summary>
            <param name="Array">Массив объектов</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAllReferences(System.Collections.Generic.List{NsgSoft.DataObjects.NsgMultipleObject},System.Collections.Generic.List{NsgSoft.DataObjects.NsgMultipleObject})">
            <summary>
            Метод поиска ссылок на заданные объекты
            </summary>
            <param name="targetObjects">Заданные объекты</param>
            <param name="refObjects">Предполагаемые ссылочные объекты</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Find(System.Boolean,NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Метод поиска в БД по одному и более реквизитов c заполнением текущего объекта.
            </summary>
            <remarks>
            Результатом является первая попавшаяся строка, удовлетворяющая
             критериям поиска. Заполняет текущий объект в случае удачного поиска.
            </remarks>
            <param name="isFull">Флаг поиска по полному совпадению. Если true - то полное
             соответствие (быстрый поиск), если false - то частичное (медленный поиск).</param>
            <param name="compare">Дополнительные параметры запроса.</param>
            <param name="tblRefs">Список ссылок на дочитывание.</param>
            <returns>Возвращает true при удачном поиске и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Find(NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Метод поиска в БД на полное совпадение по одному и более реквизитов
             c заполнением текущего объекта.
            </summary>
            <remarks>
            Результатом является первая попавшаяся строка, удовлетворяющая
             критериям поиска. Заполняет текущий объект в случае удачного поиска.
            </remarks>
            <param name="compare">Дополнительные параметры запроса.</param>
            <param name="tblRefs">Список реквизитов-ссылок объекта для дочитывания других объектов</param>
            <returns>Возвращает true при удачном поиске и false в противном случае.</returns>
            надо
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Find(System.String,System.Object,System.String[])">
            <summary>
            Метод поиска в БД на полное совпадение по одному реквизиту c заполнением текущего объекта.
            </summary>
            <remarks>
            Результатом является первая попавшаяся строка, удовлетворяющая
             критериям поиска. Заполняет текущий объект в случае удачного поиска.
            </remarks>
            <param name="inName">Имя реквизита.</param>
            <param name="inValue">Значение для поиска. Условие поиска - полное совпадение.</param>
            <param name="tblRefs">Список реквизитов-ссылок объекта для дочитывания других объектов</param>
            <returns>Возвращает true при удачном поиске и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Find(NsgSoft.Common.NsgDataFixedFields,System.Object,System.String[])">
            <summary>
            Метод поиска в БД на полное совпадение по одному реквизиту c заполнением текущего объекта.
            </summary>
            <remarks>
            Результатом является первая попавшаяся строка, удовлетворяющая
             критериям поиска. Заполняет текущий объект в случае удачного поиска.
            </remarks>
            <param name="inName">Идентификатор реквизита.</param>
            <param name="inValue">Значение для поиска. Условие поиска - полное совпадение.</param>
            <param name="tblRefs">Список реквизитов-ссылок объекта для дочитывания других объектов</param>
            <returns>Возвращает true при удачном поиске и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Find(NsgSoft.DataObjects.NsgMultipleObject,System.String[])">
            <summary>
            Метод поиска в БД по переданному объекту (MultipleObject).
            Объект будет спозиционирован по Value переданного объекта
            </summary>
            <param name="inObject">Объект, по Value которого будет идти поиск</param>
            <param name="tblRefs">Список реквизитов-ссылок объекта для дочитывания других объектов</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.Find(System.Object,System.String[])">
            <summary>
            Метод поиска в БД на полное совпадение по заданному полю поиска c заполнением
             текущего объекта. Для внутреннего пользования.
            </summary>
            <remarks>
            Результатом является первая попавшаяся строка, удовлетворяющая
             критериям поиска. Заполняет текущий объект в случае удачного поиска.
            </remarks>
            <param name="inValue">Значение для поиска</param>
            <param name="tblRefs">Список реквизитов-ссылок объекта для дочитывания других объектов</param>
            <returns>Возвращает true при удачном поиске и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAllRequisits(System.Boolean,System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Метод поиска в БД одного или более реквизитов с ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="isFull">Флаг поиска по полному совпадению. Если true - то полное
             соответствие (быстрый поиск), если false - то частичное (медленный поиск).</param>
            <param name="count">Ограничение на количество объектов в результате.</param>
            <param name="row_start">Номер строки с которой начинается поиск</param>
            <param name="sorting">Параметры сортировки.</param>
            <param name="compare">Параметры запроса.</param>
            <param name="reqNames">Запрашиваемые реквизиты</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAllRequisits(System.Boolean,System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgCompare,System.String)">
            <summary>
            Метод поиска в БД одного или более реквизитов с ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="isFull">Флаг поиска по полному совпадению. Если true - то полное
             соответствие (быстрый поиск), если false - то частичное (медленный поиск).</param>
            <param name="count">Ограничение на количество объектов в результате.</param>
            <param name="row_start">Номер строки с которой начинается поиск</param>
            <param name="sorting">Параметры сортировки.</param>
            <param name="compare">Параметры запроса.</param>
            <param name="reqName">Запрашиваемый реквизит</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAllRequisits(NsgSoft.DataObjects.NsgCompare,System.String)">
            <summary>
            Метод поиска в БД одного или более реквизитов с ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="compare">Параметры запроса.</param>
            <param name="reqName">Запрашиваемый реквизит</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAllRequisits(NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Метод поиска в БД одного или более реквизитов с ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="compare">Параметры запроса.</param>
            <param name="reqNames">Запрашиваемый реквизит</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAll(NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Метод поиска в БД по одному и более реквизитов с ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="compare">Параметры запроса.</param>
            <param name="tblRefs">Ссылки для дочитывания</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAll(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод поиска в БД по одному и более реквизитов с ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="compare">Параметры запроса.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAll(System.Boolean,System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод поиска в БД по одному и более реквизитов с ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="isFull">Флаг поиска по полному совпадению. Если true - то полное
             соответствие (быстрый поиск), если false - то частичное (медленный поиск).</param>
            <param name="count">Ограничение на количество объектов в результате.</param>
            <param name="row_start">Номер строки с которой начинается поиск</param>
            <param name="sorting">Параметры сортировки.</param>
            <param name="compare">Параметры запроса.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAll(NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Метод поиска в БД по одному и более реквизитов с ограничением количества результатов.
            </summary>
            <param name="sorting">Параметры сортировки.</param>
            <param name="compare">Параметры запроса.</param>
            <param name="tblRefs">Массив имен-ссылок для дочитывания таблиц-референтов ссылок</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAll(System.Boolean,System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgCompare,System.String[],System.String[])">
            <summary>
            Метод поиска в БД по одному и более реквизитов с ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="isFull">Флаг поиска по полному совпадению. Если true - то полное
             соответствие (быстрый поиск), если false - то частичное (медленный поиск).</param>
            <param name="count">Ограничение на количество объектов в результате.</param>
            <param name="row_start">Номер строки, с которой начинается поиск</param>
            <param name="sorting">Параметры сортировки.</param>
            <param name="compare">Параметры запроса.</param>
            <param name="reqNames">Список имен реквизитов, rj(если требуется их запросить отдельно)</param>
            <param name="tblRefs">Массив имен-ссылок для дочитывания таблиц-референтов ссылок </param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAll(NsgSoft.Database.NsgFindParam@)">
            <summary>
            Метод поиска в БД по одному и более реквизитов с ограничением количества результатов.
            Используется _только_ в курсоре, перед использованием подумать дважды!
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="parameters">Параметры поиска</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.fillReferents(System.Collections.Generic.Queue{NsgSoft.Database.NsgDBField}[],System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.List{NsgSoft.DataObjects.NsgReference}})">
            <summary>
            Метод заполнения ссылочных объектов объекта владельца
            </summary>
            <param name="rows">Дочитываемые референты</param>
            <param name="references">Ссылки на референты</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.DeleteMovements(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод удаления строк табличной части 
            </summary>
            <param name="owner">Владелец табличной части</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.PrepareDBTblRefs(System.String[])">
            <summary>
            Метод подготавливает параметры для считывания таблиц по ссылкам
            </summary>
            <param name="names">Имена полей-ссылок</param>
            <returns>Возвращает имена таблиц и их полей</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetAllFieldsToCache(System.String[])">
            <summary>
            Метод получения полей на догрузку при чтении из БД.
            </summary>
            <param name="excludeFields">Список исключаемых полей.</param>
            <returns>Возвращает список имен полей.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetAllFieldsToCache(System.Boolean,System.String[])">
            <summary>
            Метод получения полей на догрузку при чтении из БД.
            </summary>
            <param name="singleFind">Для одиночного поиска.</param>
            <param name="excludeFields">Список исключаемых полей.</param>
            <returns>Возвращает список имен полей.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAll(System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод поиска в БД на полное совпадение по одному и более реквизитов
             c ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="count">Ограничение на количество объектов в результате.</param>
            <param name="sorting">Параметры сортировки.</param>
            <param name="paramAll">Параметры запроса.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAll(NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Метод поиска в БД на полное совпадение по одному и более реквизитов
             c ограничением количества результатов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAll(System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,System.String,System.Object)">
            <summary>
            Метод поиска в БД на полное совпадение по одному реквизиту c ограничением 
             количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="count">Ограничение на количество объектов в результате.</param>
            <param name="sorting">Параметры сортировки.</param>
            <param name="inName">Имя реквизита.</param>
            <param name="inValue">Значение для поиска. Условие поиска - полное совпадение.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAll(System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,NsgSoft.Common.NsgDataFixedFields,System.Object)">
            <summary>
            Метод поиска в БД на полное совпадение по одному реквизиту c ограничением 
             количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="count">Ограничение на количество объектов в результате.</param>
            <param name="sorting">Параметры сортировки.</param>
            <param name="inName">Идентификатор реквизита.</param>
            <param name="inValue">Значение для поиска. Условие поиска - полное совпадение.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FindAll(System.Int32@,System.Int64,NsgSoft.DataObjects.NsgSorting,System.Object)">
            <summary>
            Метод поиска в БД на полное совпадение по заданному полю поиска c ограничением 
             количества результатов. Для внутреннего пользования.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="count">Ограничение на количество объектов в результате.</param>
            <param name="sorting">Параметры сортировки.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FullTextSearch(System.Int32,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод поиска в БД на частичное совпадение по одному и более реквизитов
             c ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="count">Ограничение на количество объектов в результате.</param>
            
            <param name="compare">Параметры запроса.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FullTextSearch(System.Int32,System.String,System.Object)">
            <summary>
            Метод полнотекстового поиска в БД c ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="count">Ограничение на количество объектов в результате.</param>
            
            <param name="inName">Имя реквизита.</param>
            <param name="inValue">Значение для поиска. Условие поиска - полное совпадение.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.FullTextSearch(System.Int32,NsgSoft.Common.NsgDataFixedFields,System.Object)">
            <summary>
            Метод полнотекстового поиска в БД c ограничением количества результатов.
            </summary>
            <remarks>
            Результатом являются все строки, удовлетворяющие критериям поиска,
             но не более заданного предела.
            </remarks>
            <param name="count">Ограничение на количество объектов в результате.</param>
            
            <param name="inName">Идентификатор реквизита.</param>
            <param name="inValue">Значение для поиска. Условие поиска - полное совпадение.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.SelectCount">
            <summary>
            Метод получения количества объектов данного типа в базе данных.
            </summary>
            <returns>Возвращает количество объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.SelectCount(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения количества объектов данного типа в базе данных по условию.
            </summary>
            <param name="cmp">Условие.</param>
            <returns>Возвращает количество объектов, соответствующих условию.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetAll(System.Int64)">
            <summary>
            Метод получения всех объектов данного типа
            </summary>
            <param name="count">Количество извлекаемых объектов</param>
            <returns>Список объектов</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObject.GetAll">
            <summary>
            Метод получения всех объектов данного типа
            </summary>
            <returns>Список объектов</returns>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTransaction.tranList">
            <summary>
             Список транзакций всех менеджеров БД
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgTransaction.transConnections">
            <summary>
            Список хеш-кодов соединений всех транзакции
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTransaction.#ctor">
            <summary>
            Конструктор по умолчанию
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTransaction.#ctor(NsgSoft.Database.NsgDatabaseManager[])">
            <summary>
            Конструктор
            </summary>
            <param name="inDbManagerList">Список менеджеров БД</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTransaction.#ctor(NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Конструктор
            </summary>
            <param name="inDbManager">Менеджер БД</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTransaction.#ctor(NsgSoft.Database.NsgDatabaseManager,System.Data.IsolationLevel)">
            <summary>
            Конструктор
            </summary>
            <param name="inDbManager">Менеджер БД</param>
            <param name="isolLevel">Уровень изоляции транзакции</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTransaction.BeginTransaction(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Начало транзакции
            </summary>
            <param name="MO">Объект, объявляющий транзакцию</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTransaction.CheckTransacton">
            <summary>
            Проводятся проверки.
            1. В том же потоке используется, что и была объявлена
            2. Транзакция еще не завершена (tranCount > 0)
            </summary>
            <returns>true - транзакция корректна</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTransaction.CommitWithoutCheck">
            <summary>
            Завершить транзакцию, начатую напрямую через new NsgTransaction()
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTransaction.Commit(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Завершение транзакции
            </summary>
            <param name="MO">Объект, объявляющий транзакцию</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTransaction.Rollback">
            <summary>
            Откат транзакции
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTransaction.BeginNewTransaction(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Начинает новую транзакцию по объекту.
            Эта транзакция будет завершена, при подаче Commit этим объектом
            </summary>
            <param name="MO"></param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgPropertyDescriptor">
            <summary>
            Класс - шаблон для хранения свойства объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptor.#ctor(System.String,NsgSoft.DataObjects.NsgPropertyType,System.Type,System.Type)">
            <summary>
            Конструктор класса.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="propType">Тип свойства.</param>
            <param name="dataType">Тип данных свойства.</param>
            <param name="nsgType">Тип сопоставленного NSG простого объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptor.#ctor">
            <summary>
            Конструктор класса по умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptor.Tag">
            <summary>
            Ассоциированые данные.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptor.ReferentFullName">
            <summary>
            Получение и установка имени референта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptor.ReferentName">
            <summary>
            Получение и установка имени референта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptor.Filter">
            <summary>
            Получение и установка фильтра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptor.Length">
            <summary>
            Получение и установка длины.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptor.Precision">
            <summary>
            Получение и установка точности.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptor.PropertyType">
            <summary>
            Получение и установка псевдонима свойства.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptor.NSGType">
            <summary>
            Получение и установка NSG типа свойства.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptor.ToString">
            <summary>
            Перекрытый метод приведение к строке.
            </summary>
            <returns>Возвращает строковое представление объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptor.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgPropertyDescriptorCollection">
            <summary>
            Класс - коллекция хранения свойств объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.#ctor">
            <summary>
            Конструктор класса по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.#ctor(NsgSoft.DataObjects.NsgPropertyDescriptor[])">
            <summary>
            Конструктор класса с инициализацией свойств.
            </summary>
            <param name="properties">Массив свойств.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.OwnerName">
            <summary>
            Получение и установка имени владельца коллекции свойств.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.Properties">
            <summary>
            Получение всех описателей свойств в коллекции.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.Count">
            <summary>
            Получение количества свойств в коллекции.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.MaxPropertyDeep">
            <summary>
            Получение максимальной глубины свойств для данной коллекции. (a1.b2.c3 - глубина = 3).
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.Item(System.String)">
            <summary>
            Итератор коллекции по имени.
            </summary>
            <param name="propertyName">Имя свойства.</param>
            <returns>Свойство по имени.</returns>
            <exception cref="T:NsgSoft.Common.NsgLoggedException">Бросает исключение,
            если заданного свойства нет в коллекции.</exception>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.Item(System.Int32)">
            <summary>
            Итератор коллекции по индексу.
            </summary>
            <param name="propertyName">Индекс свойства.</param>
            <returns>Свойство по индексу.</returns>
            <exception cref="T:NsgSoft.Common.NsgLoggedException">Бросает исключение,
            если заданного свойства нет в коллекции.</exception>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.Contains(System.String)">
            <summary>
            Метод проверки существования свойства в списке по имени.
            </summary>
            <param name="propertyName">Имя свойства.</param>
            <returns>Возвращает true, если свойство найдено, или false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.IndexOf(System.String)">
            <summary>
            Метод проверки существования свойства в списке по имени.
            </summary>
            <param name="propertyName">Имя свойства.</param>
            <returns>Возвращает true, если свойство найдено, или false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.Add(NsgSoft.DataObjects.NsgPropertyDescriptor)">
            <summary>
            Метод добавления свойства в коллекцию.
            </summary>
            <param name="propDesc">Свойство для добаления.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.AddRange(NsgSoft.DataObjects.NsgPropertyDescriptor[])">
            <summary>
            Метод добавления массива свойств в коллекцию.
            </summary>
            <param name="propDescs">Массив свойств для добаления.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.GetEnumerator">
            <summary>
            Метод получения нумератора для прокрутки коллекции в foreach/
            </summary>
            <returns>Нумератор коллекции.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyDescriptorCollection.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgObjectDescriptor">
            <summary>
            Класс - шаблон объекта метаданных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectDescriptor.#ctor(System.String,System.String,System.String)">
            <summary>
            Конструтор класса NsgObjectDescriptor с параметрами.
            </summary>
            <param name="configName">Имя конфигурации.</param>
            <param name="metaDataName">Имя метаданных.</param>
            <param name="fullName">Полное имя объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectDescriptor.#ctor">
            <summary>
            Конструтор класса NsgObjectDescriptor по умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectDescriptor.ConfigurationName">
            <summary>
            Получение и установка имени конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectDescriptor.MetaDataName">
            <summary>
            Получение и установка имени метаданных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectDescriptor.FullName">
            <summary>
            Получение и установка полного имени объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectDescriptor.Equals(NsgSoft.Design.INsgMetaObjectDescriptor)">
            <summary>
            Метод сравнения двух описателей.
            </summary>
            <param name="desc">Описатель для сравнения с текущим.</param>
            <returns>Возвращает true, если равны, иначе false.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgPeportPropertyAttribute">
            <summary>
            Атрибут для свойства доступного в отчете.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgPeportPropertyAttribute.IsVisible">
            <summary>
            Получение видимости свойства.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMultipleObjectEventArgs">
            <summary>
            Параметр событий BeforePost, AfterPost, BeforeEdit, BeforeDelete содержит объект который будет обрабатываться 
            и дает возможность отменить обработку.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMultipleObjectEventArgs.eventReason">
            <summary>
            Изменение чего вызвало сообщение
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObjectEventArgs.Object">
            <summary>
            Объект который обрабатывается.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObjectEventArgs.Property">
            <summary>
            Свойство объекта, которое сгенерировало событие.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObjectEventArgs.Cancel">
            <summary>
            Позволяет отменить обработку объекта, для этого нужно присвоить значение true 
            в событии BeforePost, BeforeEdit или BeforeDelete, в событии AfterPost говорит о том был ли записан объект
            или нет.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObjectEventArgs.Reason">
            <summary>
            Причина отмены обработки, если она была отменена.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMultipleObjectEventArgs.Handled">
            <summary>
            Признак того что сообщение обработано, должно быть выставлено при обработке в true, иначе
            при некоторых видах ошибок будут появляться исключения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMultipleObjectEventArgs.#ctor(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса
            </summary>
            <param name="_object">Объект, помещаемый в свойство Object</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgObjectProperty">
            <summary>
            Измененное свойтсво реквизита
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectProperty.None">
            <summary>
            Неизвестно что поменялось
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectProperty.Visible">
            <summary>
            Изменена видимость
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectProperty.Value">
            <summary>
            Изменено значение
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgTableEventArgs">
            <summary>
            Параметр событий BeforeDeleteRow, AfterDeleteRow, BeforeInsertRow, AfterInsertRow 
            содержит объект который будет обрабатываться и дает возможность отменить обработку.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgTableEventArgs.Row">
            <summary>
            Строка, вызвавшая событие
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgTableEventArgs.#ctor(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgDataTableRow)">
            <summary>
            Конструктор класса
            </summary>
            <param name="_object">Объект, вызвавший событие</param>
            <param name="_row">Строка таблицы, вызвавшая событие</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgLockException">
            <summary>
            Класс исключения при блокировке.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgLockException.#ctor(System.String)">
            <summary>
            Конструктор класса.
            </summary>
            <param name="message">Сообщение.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgLock">
            <summary>
            Класс блокировок. Служит для синхронизации объектов по потокам.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgLock.Lock(System.Object)">
            <summary>
            Метод блокирования объекта на текущий поток.
            </summary>
            <param name="lockObject">Блокируемый объект.</param>
            <returns>Возвращает результат блокировки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgLock.Unlock(System.Object)">
            <summary>
            Метод разблокирования объекта с текущего потока.
            </summary>
            <param name="lockObject">Разблокируемый объект.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgLock.IsLocked(System.Object)">
            <summary>
            Метод проверки блокировки объекта.
            </summary>
            <param name="testObject">Проверяемый объект.</param>
            <returns>Возвращает true, если объект блокирован, иначе false.</returns>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgPropertyCollection.value">
            <summary>
            Значение корневого элемента
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgPropertyCollection.ExpandSingleValue">
            <summary>
            Показывать дерево если в нем только один элемент
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgPropertyCollection.ShowRoot">
            <summary>
            Видимость корневого элемента в PropertyGrid
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgPropertyCollection.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.fileName">
            <summary>
            имя файла для сохранения конфигурации
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.filePath">
            <summary>
            путь для сохранения конфигурации
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.description">
            <summary>
            Описание конфигурации
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.typename">
            <summary>
            имя типа
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.copyright">
            <summary>
            Копирайт конфигурации
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.version">
            <summary>
            Версия конфигурации
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.metaDataList">
            <summary>
            список всех метаданных
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.DatabaseManagerList">
            <summary>
            список всех менеджеров баз данных
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.databaseManagerNames">
            <summary>
            Список имен NsgDatabaseManager
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.lastSavedConfiguration">
            <summary>
            Последняя сохраненная конфигурация
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.languages">
            <summary>
            Список используемых языков
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.basicDllCollection">
            <summary>
            Список загружаемых dll.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfiguration.AnalizeForm">
            <summary>
            Форма анализа БД.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.LoadSettings">
            <summary>
            Загрузка настроек из комнадной строки и файла настроек
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.Prefics">
            <summary>
            Получение и установка префикса имен
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.CodeLanguage">
            <summary>
            Язык кодогенерации 
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.ObjectCount">
            <summary>
            Возвращает количество сложных объектов в конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.BasicDlls">
            <summary>
            Получение списка загружаемых dll.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.Languages">
            <summary>
            Получение списка используемых языков.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.LanguagesNames">
            <summary>
            Получение списка имен используемых языков.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.TypeName">
            <summary>
            Получение локализованного имени типа объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.DatabaseManagerNames">
            <summary>
            Получение списка имен менеджеров данных
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.TypeLocalName">
            <summary>
            Получение имени типа объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.Name">
            <summary>
            Получение и установка имени конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.FileName">
            <summary>
            Получение и установка имени файла конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.FilePath">
            <summary>
            Получение и установка пути к файлу конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.CodegenerationPath">
            <summary>
            Путь к папке, в которую производится кодогенерация
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.CodegenerationWebPath">
            <summary>
            Путь к папке, в которую производится кодогенерация для Web
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.AdvancedDatabaseDesign">
            <summary>
            Разрешать ли расширенные настройки работы с базами данных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.Description">
            <summary>
            Получение и установка описания конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.Copyright">
            <summary>
            Получение и установка Copyright конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.Version">
            <summary>
            Получение и установка версии конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.MetaDataList">
             <summary>
            Возвращаем массив всех объектов метаданных
             </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.TaskServerStartTime">
            <summary>
            Время начала работы сервера заданий
            Учитавается только время. Если значение равно MinDate, то время работы сервера неограниченно
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.TaskServerStopTime">
            <summary>
            Время окончания работы сервера заданий
            Учитавается только время. Если значение равно MinDate, то время работы сервера неограниченно
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.ExchangeMinutesCount">
            <summary>
            Периодичность обмена данными с внешними системами в минуту. Если равен нулю, обмен в автоматическом режиме не выполняется
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.ExchangeDBName">
            <summary>
            Название БД от которого производится обмен данными. Если значение пустое, то обмен не производится.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ExchangeTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Событие, вызываемое при срабатывании таймера обмена данными.
            Периодичность обмена можно задать в конфигурационном файле, указав параметр ExchangeMinutesCount
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ConnectToDB">
            <summary>
            Метод соединения с БД с загрузкой параметров из файла конфигурации.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ConnectToDB(System.String[])">
            <summary>
            Метод соединения с БД по заданным строковым параметрам.
            </summary>
            <param name="parameters">Список строковых параметров. 
            Формат { имя_сервера_БД (string),
            		 имя_БД (string),
            		 имя_пользователя (string),
            		 пароль_пользователя (string),
            		 IntegratedSecurity (bool),
            		 тип_БД (DatabaseType) }.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ConnectToDB(NsgSoft.Database.NsgDatabaseManagerInfo)">
            <summary>
            Метод соединения с БД по заданным параметрам.
            </summary>
             <param name="dbInfo">Информация о БД.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ConnectToDB(NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Метод соединения с БД по заданным параметрам.
            </summary>
             <param name="dbMngr">Менеджер БД.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.LoadDBSettings">
            <summary>
            Метод загрузки параметров БД из файла конфигурации.
            </summary>
            <returns>Возвращает структуру параметров БД.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.LoadDBSettings(System.String[])">
            <summary>
            Метод загрузки параметров БД из заданных аргументов.
            </summary>
            <param name="parameters">Список строковых параметров. 
            Формат { имя_сервера_БД (string),
            		 имя_БД (string),
            		 имя_пользователя (string),
            		 пароль_пользователя (string),
            		 IntegratedSecurity (bool),
            		 тип_БД (DatabaseType) }.</param>
            <returns>Возвращает структуру параметров БД.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.GetDatabaseManager">
             <summary>
            Возвращает менеджер баз данных по-умолчанию
             </summary>
             <returns>Менеджер баз данных по-умолчанию</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.GetDatabaseManagerList">
             <summary>
            Возвращает все менеджеры баз данных
             </summary>
             <returns>Менеджер баз данных по-умолчанию</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgConfiguration.DatabaseManagerCount">
             <summary>
            Возвращает количество определенных объектов менеджеров БД
             </summary>
             <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.GetDatabaseManager(System.String)">
            <summary>
            Возвращает объект менеджера БД по имени. Если такого имени нет - возвращает null
            </summary>
            <param name="name">имя запрашиваемого объекта менеджера БД</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.IsExistDatabaseManager(System.String)">
            <summary>
            Проверка на существование менеджера БД
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.AddDatabaseManager(NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Дабовляет переданный объект менеджера БД в список.
            </summary>
            <param name="metaData">Передаваемый объект менеджера БД</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.DeleteDatabaseManager(System.String)">
            <summary>
            Удаляет менеджер БД из списка по имени
            </summary>
            <param name="name">имя менеджера БД</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.DeleteDatabaseManager(NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Удаляет менеджер БД из списка.
            </summary>
            <param name="name">Удаляемый менеджер БД</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ClearDatabaseManagerList">
            <summary>
            Метод очистки списка менеджеров БД.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ContainsMetaData(System.String)">
             <summary>
            Проверяем нет ли объета метаданных с таким именем
             </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.GetMetaData">
            <summary>
            Метод получения метаданных по умолчанию.
            </summary>
            <returns>Объект метаданных.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.MetaDataCount">
            <summary>
            Метод озвращает количество определенных объектов метаданных.
            </summary>
            <returns>Количество определенных объектов метаданных.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.GetMetaData(System.String)">
            <summary>
            Метод получения объекта метаданных по имени.
            </summary>
            <param name="name">Имя запрашиваемого объекта метаданных.</param>
            <returns>Возвращает объект метаданных. Если такого имени нет - возвращает null.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.GetMetaData(System.Guid)">
            <summary>
            Метод получения объекта метаданных по идентификатору.
            </summary>
            <param name="name">Идентификатор запрашиваемого объекта метаданных.</param>
            <returns>Возвращает объект метаданных. Если такого имени нет - возвращает null.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.GetAllMetaData">
            <summary>
            Получить массив всех существующих метаданных
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.AddMetaData(NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Метод добавляет переданный объект метаданных в список.
            </summary>
            <param name="metaData">Передаваемый объект метаданных</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.AddMetaData(System.String)">
            <summary>
            Метод создает объект метаданных из файла с указанным именем и добавляет его
             в общий список метаданных.
            </summary>
            <param name="fileName">Имя файла для загрузки.</param>
            <returns>Возвращает прочитанный из файла объект метаданных. В случае ошибки возвращает null.
            </returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.DeleteMetaData(System.String)">
            <summary>
            Метод удаляет объект метаданных из списка по имени.
            </summary>
            <param name="name">Имя объекта метаданных для удаления.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.DeleteMetaData(NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Метод удаляет объект метаданных из списка.
            </summary>
            <param name="name">Удаляемый объект метаданных</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ClearMetaDataList">
            <summary>
            Метод очистки списка метаданных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.GetConfigurationType(System.Reflection.Assembly)">
            <summary>
            Метод получения типа конфигурации из сборки.
            </summary>
            <param name="asmCfg">Сборка с конфигурации.</param>
            <returns>Возвращает тип конфигурации.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.CreateConfiguration(System.Reflection.Assembly)">
            <summary>
            Метод создания объекта конфигурации из сборки.
            </summary>
            <param name="asm">Сборка.</param>
            <returns>Возвращает объект конфигурации.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ToString">
            <summary>
            Метод приведения к строке.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.LoadConfig(System.String)">
            <summary>
            Метод загрузки конфигурации и настроек из файла.
            </summary>
            <param name="inFilename">Имя файла для загрузки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.Load">
            <summary>
            Метод загрузки конфигурации и настроек из файла по умолчанию.
            </summary>
            <param name="inFilename">Имя файла для загрузки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.SaveToString">
            <summary>
            Метод сохранения конфигурации и настроек в XML в строку
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.SaveConfig(System.String,System.Boolean)">
            <summary>
            Метод сохранения структуры конфигурации и настроек в файл.
            </summary>
            <param name="inFilename">Имя файла для сохранения.</param>
            <param changesOnly="">Флаг записи только изменений.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.SaveConfig(System.Boolean)">
            <summary>
            Метод сохранения структуры конфигурации и настроек в файл по умолчанию.
            </summary>
            <param changesOnly="">Флаг записи только изменений.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.saveConfig(System.IO.Stream)">
            <summary>
            Метод сохранения структуры конфигурации и настроек в поток.
            </summary>
            <param name="inStream">Поток для сохранения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.SetDatabaseTableNames">
            <summary>
            Задает имена таблиц и полей для хранения в БД.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ClearAllList">
            <summary>
            Метод очистки всех списков в настройках.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.AnalizeDataBase(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Метод анализа БД
            </summary>
            <param name="transaction">Транзакция</param>
            <returns>Структуру изменения всех таблиц БД в соответсвии с метаданными </returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.CreateStorage(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Метод создания всех таблиц БД
            </summary>
            <param name="tables">Таблицы</param>
            <param name="transaction">Транзакция</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.DatabaseManagersConnect(NsgSoft.Database.NsgDatabaseManager[])">
            <summary>
            Метод установки соединения для указанных менеджеров БД. 
            </summary>
            <param name="mngrList">Список менеджеров БД. Если не указан, то используются все
             менеджеры конфигурации.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.DatabaseManagersConnect(System.Boolean,NsgSoft.Database.NsgDatabaseManager[])">
            <summary>
            Метод установки соединения для указанных менеджеров БД. 
            </summary>
            <param name="checkDBExisting">Проверять наличие баз данных.</param>
            <param name="mngrList">Список менеджеров БД. Если не указан, то используются все
             менеджеры конфигурации.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.DatabaseManagersDisconnect(NsgSoft.Database.NsgDatabaseManager[])">
            <summary>
            Метод завершения соединения для указанных менеджеров БД. 
            </summary>
            <param name="mngrList">Список менеджеров БД. Если не указан, то используются все
             менеджеры конфигурации.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.CheckDatabasesExisting">
            <summary>
            Метод проверки существования БД для всех соединений конфигурации.
            </summary>
            <returns>Возвращается список менеджеров БД, для которых БД физически не существует.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.RefillAllAccumTables(System.Boolean,NsgSoft.DataObjects.NsgDoWorkArgs)">
            <summary>
            Метод перезаполнения таблиц БД.
            </summary>
            <param name="runThread">Запускать поток сразу.</param>
            <param name="args">Аргументы.</param>
            <returns>Возвращает поток исполнения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.Analize(System.Boolean,NsgSoft.Database.NsgDatabaseManager[])">
            <summary>
            Метод анализа БД на наличие структурных изменений.
            </summary>
            <param name="runThread">Запустить поток сразу.</param>
            <param name="dbList">Список менеджеров БД для анализа. Если не задан - используются все.</param>
            <returns>Возвращает поток, на котором исполняется процедура анализа.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.Create(System.Boolean,NsgSoft.DataObjects.NsgDoWorkArgs)">
            <param name="runThread">Запустить поток сразу.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.AnalizeUserAssembly(System.Reflection.Assembly,System.String,System.Boolean,System.Type,System.Collections.Generic.List{System.Type})">
            <summary>
            Метод чтения через рефлексию пользовательской сборки с метаданными.
            </summary>
            <param name="assembly">Сборка с метаданными.</param>
            <param name="RootElement">Корень, от которого начинать чтение.</param>
            <param name="ShowRekvisits">Показывать ли реквизиты объектов.</param>
            <param name="typeFilter">Тип для фильтрации свойств.</param>
            <param name="excludedPropertiesList">Список исключенных типов для свойств.</param>
            <returns>Возвращает список узлов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ConnectDatabaseManagers">
            <summary>
            Присваивает DatabaseManager каждому объекту метаданных. 
            Функция должна вызываться после создания всех DatabaseManager перед первым обращением к базе данных
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgConfiguration.MOInObjectListCreate">
            <summary>
            Событие AfterHandle. Событие генерируется после проведения документа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgConfiguration.ReinitCodeLanguage">
            <summary>
            Установка в системе языка кода генерации в соответсвии с текущей конфигурацией
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataDateTime">
            <summary>
            Класс простого элемента данных - Момент времени.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.#ctor">
            <summary>
            Конструктор класса Момент времени по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.#ctor(System.String)">
            <summary>
            Конструктор класса Момент времени.
            </summary>
            <param name="name">Имя логического объекта Момент времени.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Момент времени из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDateTime.Format">
            <summary>
            Формат представления в строке.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDateTime.NullValue">
            <summary>
            Пустое значение объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDateTime.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDateTime.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.Validate">
            <summary>
            Метод проверки значения реквизита
            </summary>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:NsgSoft.DataObjects.NsgDataDateTime.Compare(System.Object)" -->
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.ToString">
            <summary>
            Метод приведения к строке. Если дата = минимальной, т.е. не установлена,
             то возвращается "НЕ ЗАДАНО". Если дата = максимальной, то возвращается 
             "МАКСИМАЛЬНОЕ ЗНАЧЕНИЕ".
            </summary>
            <returns>Строковое представление.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.OnToString(System.String)">
            <summary>
            Обработка преобразования к строке
            </summary>
            <param name="Text">результат внтреннего преобразования</param>
            <returns>результат</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDateTime.TimeClear">
            <summary>
            Очистка временной составляющей
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataDocument">
            <summary>
            Класс сложного элемента данных - Документ.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocument._JOURNALS">
            <summary>
            Список журналов, в которых регистрируется документ.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocument._USED_REGISTERS">
            <summary>
            Имена регистров связанных с документом и признак необходимо ли их блокировать.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocument._RELATED_REGISTERS">
            <summary>
            Регистры связанные с документом которые необходимо блокировать при проведении.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocument._NUMBER_PERIOD">
            <summary>
            Периодичность номера документа.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocument._SLAVE_DOCUMENTS">
            <summary>
            Документы, которые можно вводить на основании данного
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocument._HANDLE_WITHOUT_TRANSACTION">
            <summary>
            Периодичность номера документа.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataDocument.RegisterHandleRegime">
            <summary>
            Перечисление режима проведения документа.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocument.RegisterHandleRegime.None">
            <summary>
            неиспользуется
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocument.RegisterHandleRegime.Read">
            <summary>
            Разрешено чтение
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocument.RegisterHandleRegime.Write">
            <summary>
            Разрешена запись
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocument.RegisterHandleRegime.Block">
            <summary>
            Блокируется при начале проведения
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.#ctor">
            <summary>
            Конструктор класса Документ по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Документ первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Документ из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.BaseDocument">
            <summary>
            Получение и установка документа основания.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.SlaveDocuments">
            <summary>
            Список имен документов, которые можно создать на основании текущего.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.CanHandle">
            <summary>
            Может ли документ проводиться.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.UsedRegisters">
            <summary>
            Список регистров, по которым возможна запись движений данным документом.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.UsedRegistersInternal">
            <summary>
            Имена регистров связанных с документом и признак необходимо ли их блокировать. Внутрений.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.isOnBeforeHandleCompleted">
            <summary>
            Признак завершения метода OnBeforeHandle
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.HandleWithoutTransaction">
            <summary>
            Признак того, что документ проводится без транзакции
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.CheckRegisterUsage(System.String)">
            <summary>
            Проверка, используется ли регистр данным документом.
            </summary>
            <param name="RegisterName">Имя регистра</param>
            <returns>Режим использования регистра</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.UsedRegistersForConfigurator">
            <summary>
            Полный список регистров, для отображения в конфигураторе
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.NumberPeriod">
            <summary>
            Периодичность документа
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.Journals">
            <summary>
            Список журналов, в которых регистрируется документ.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.UseCommonJournal">
            <summary>
            Получение и установка флаг видимости только для администраторов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.RelatedRegisters">
            <summary>
            Регистры связанные с документом, которые необходимо блокировать при проведении.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.RelatedRegisterNames">
            <summary>
            Имена регистров связанных с документом и признак их использования.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.IsHandled">
            <summary>
            Признак того, что документ проведен
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.DateTime">
            <summary>
            Дата документа
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDocument.DontUseLazyPost">
            <summary>
            Не использовать позднее сохранение для данного документа, т.к. он уже используется в механизме позднего сохранения
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.FindSlaveDocuments">
            <summary>
            Поиск документов, введенных на основании данного
            </summary>
            <returns>Список документов</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.CanUseRekvisitInInterface(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Проверяет, можно ли использовать реквизит в интерфейсе
            </summary>
            <param name="SO">реквизит</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.AddUsedRegister(System.String,NsgSoft.DataObjects.NsgDataDocument.RegisterHandleRegime)">
            <summary>
            Добавление регистра
            </summary>
            <param name="name">имя регистра</param>
            <param name="regime">режим использования</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.GetTypesForAdding(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Метод получения списка доступных для добавления в объект типов по группе.
            </summary>
            <param name="group">Тип группы.</param>
            <returns>Список типов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.GetSubTypesForAdding">
            <summary>
            Метод получения списка групп доступных для добавления в объект типов.
            </summary>
            <returns>Список групп.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.FillNumber">
            <summary>
            Метод заполнения уникального номера документа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.CreateDefaultFields">
            <summary>
            Добавление рекомендованных реквизитов при создании из Конфигуратора
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.AddJournal(System.String)">
            <summary>
            Добавление журнала в список регистрации.
            </summary>
            <param name="journal">Имя журнала.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.BasePost">
            <summary>
            Метод изменения объекта в базе. Использует внешнюю транзакцию.
            </summary>
            <returns>Возвращает true при удачном изменении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.GetArray(System.Int32)">
            <summary>
            Метод получения массива пустых документов.
            </summary>
            <param name="count">Количество получаемых объектов.</param>
            <returns>Массив пустых объектов заданного типа.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.Delete(NsgSoft.DataObjects.NsgDataDocument[])">
            <summary>
            Метод удаления элеметов документа
            </summary>
            <param name="array">Массив элементов</param>
            <param name="transaction"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.Select(NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Метод получения курсора на выборку документов.
            </summary>
            <param name="comp">Объект сравнения.</param>
            <param name="sort">Объект сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.Select(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения курсора на выборку документов.
            </summary>
            <param name="comp">Объект сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.Select(NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Метод получения курсора на выборку документов.
            </summary>
            <param name="comp">Объект сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.GetNewCursor">
            <summary>
            Метод получения курсора на выборку документов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.New">
            <summary>
            Метод создания нового документа
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.Handling">
            <summary>
            Метод проведения документа, программист обязан его переопределить.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.Handle">
            <summary>
            Метод проведения документа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.BeginHandle">
            <summary>
            Метод должен быть вызван перед началом проведения документа.
            Создает транзакцию для проведения документа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.EndHandle">
            <summary>
            Метод должен быть вызван для фиксации проведения документа.
            Успешное завершение проведение документа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.EndHandle(System.String,System.Exception)">
            <summary>
            Метод вызывается при отмене проведения документа.
            </summary>
            <param name="reason">Причина отмены проведения документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.CancelHandle(System.String)">
            <summary>
            Вызывается пользователем для отмены проведения документа с указанием причины отмены.
            </summary>
            <param name="reason">Причина отмены проведения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.CancelHandle(System.String,System.Exception)">
            <summary>
            Вызывается пользователем для отмены проведения документа с указанием причины отмены.
            </summary>
            <param name="reason">Причина отмены проведения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.LockRegisters">
            <summary>
            Метод должен установить логическую блокировку на регистры по которым может 
            проводиться документ.
            </summary>
            <returns>true, если блокировка удалась, false иначе.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.UnLockRegister(NsgSoft.DataObjects.NsgDataRegister)">
            <summary>
            Освобождает указанный регистр снимая логическую блокировку.
            </summary>
            <param name="ndrToUnlock">Регистр который необходимо освободить.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.UnLockRegisters">
            <summary>
            Освобождает все занятые ригистры.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.DeleteMovements">
            <summary>
            Метод удаления движений документа во всех регистрах, в которых он регистрируется
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.DeleteMovements(NsgSoft.DataObjects.NsgDataRegister)">
            <summary>
             Метод удаления движении документа по заданному регистру
            </summary>
            <param name="register">Регистр, в котором регистрируются движения документа</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.DeleteMovements(NsgSoft.DataObjects.NsgDataRegister[])">
            <summary>
            Метод удаления движений документа в заданных регистрах
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.Unhandle">
            <summary>
            Матод отмены проведения документа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.BeginUnhandle">
            <summary>
            Метод должен быть вызван перед началом отмены проведения документа.
            Создает транзакцию для отмены проведения документа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.EndUnhandle">
            <summary>
            Метод должен быть вызван для фиксации отмены проведения документа.
            Успешное завершение отмены проведения документа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.EndUnhandle(System.String)">
            <summary>
            Метод вызывается при отмене проведения документа.
            </summary>
            <param name="reason">Причина отказа от отмены проведения документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.CancelUnhandle(System.String)">
            <summary>
            Вызывается пользователем для отказа от отмены проведения документа с указанием причины отмены.
            </summary>
            <param name="reason">Причина отмены проведения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.NewCopy">
            <summary>
            Метод создания новой строки объекта с копированными данными.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.OnAfterInsertInObjectList">
            <summary>
            Выполняется после вставки объекта в ObjectList метаданных
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.OnBaseAssigned">
            <summary>
            Вызывается после присвоения документа основания
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDocument.IsDateExpiredForEdit(System.Boolean)">
            <summary>
            Метод проверки даты запрета редактирования применительно к текущему объекту.
            </summary>
            <param name="throwError">Бросать исключение в случае несоответствия 
             текущего объекта дате запрета редактирования.</param>
            <returns>Возвращет true, если редактирование текущего объекта запрещено, иначе false.</returns>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgDataDocument.BeforeHandle">
            <summary>
            Событие BeforeHandle. Событие генерируется перед проведением документа.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgDataDocument.AfterHandle">
            <summary>
            Событие AfterHandle. Событие генерируется после проведения документа.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgDataDocument.BeforeUnhandle">
            <summary>
            Событие BeforeHandle. Событие генерируется перед отменой проведения документа.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgDataDocument.AfterUnhandle">
            <summary>
            Событие AfterUnhandle. Событие генерируется после отмены проведения документа.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.HandleEventArgs">
            <summary>
            Параметр событий BeforeHandle и AfterHandle, содержит документ который будет проводиться и дает
            возможность отменить проведение.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.HandleEventArgs.Document">
            <summary>
            Документ который будет проводиться.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.HandleEventArgs.Cancel">
            <summary>
            Позволяет отменить проведение документа, для этого нужно присвоить значение true 
            в событии BeforeHandle, в событии AfterHandle говорит о том был ли проведен документ
            или нет.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.HandleEventArgs.Reason">
            <summary>
            Причина отмены проведения документа, если проведение было отменено.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.HandleEventArgs.Handled">
            <summary>
            Признак того что сообщение обработано, должно быть выставлено при обработке в true, иначе
            при некоторых видах ошибок будут появляться исключения.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataFieldsContainer">
            <summary>
            Класс - Контейнер полей.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataFieldsContainer.DataFieldSet">
            <summary>
            Класс хранения связки полей.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFieldsContainer.DataFieldSet.ImplementName">
            <summary>
            Имя реализующего объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFieldsContainer.DataFieldSet.Mask">
            <summary>
            Маска заполнения поля.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFieldsContainer.DataFieldSet.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса.
            </summary>
            <param name="implementName">Имя реализующего объекта.</param>
            <param name="mask">Маска заполнения поля.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFieldsContainer.#ctor">
            <summary>
            Конструктор класса Контейнер полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFieldsContainer.#ctor(System.String)">
            <summary>
            Конструктор класса Контейнер полей.
            </summary>
            <param name="name">Имя логического объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFieldsContainer.#ctor(System.String,NsgSoft.DataObjects.NsgDataFieldsContainer.DataFieldSet[])">
            <summary>
            Конструктор класса Контейнер из кодогенерации
            </summary>
            <param name="fields">связка полей в контейнере.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFieldsContainer.#ctor(System.Xml.XmlElement)">
            <summary>
            Конструктор класса Контейнер полей из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFieldsContainer.Name">
            <summary>
            Получение имени.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFieldsContainer.Implements">
            <summary>
            Получение списка реализующих объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFieldsContainer.Item(System.String)">
            <summary>
            Получение и установка маски для соответствующего объекта.
            </summary>
            <param name="name">Полное имя реализующего объекта.</param>
            <returns>Возвращает маску соответствующего объекта.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFieldsContainer.Fields">
            <summary>
            Получение и установка всех связок полей в контейнере.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFieldsContainer.Clone">
            <summary>
            Возвращает клон объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFieldsContainer.ClearFieldsList">
            <summary>
            Метод очистки всего списка ассоциированных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFieldsContainer.AddField(System.String,System.String)">
            <summary>
            Метод добавления ассоциированного поля.
            </summary>
            <param name="name">Имя документа.</param>
            <param name="value">Значение маски.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFieldsContainer.DeleteField(System.String)">
            <summary>
            Метод удаления ассоциированного поля.
            </summary>
            <param name="field">Имя объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFieldsContainer.SaveConfig(System.Configuration.ConfigXmlDocument)">
            <summary>
            Переопределенный метод сохранения атрибутов элемента данных.
            </summary>
            <param name="writer">Объект записи XML текста.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataFloat">
            <summary>
            Класс простого элемента данных - Вещественное число.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataFloat._PRECISION">
            <summary>
            Точность после запятой.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataFloat._HIDE_ZERO">
            <summary>
            При преобразовании в строку не отображать нулевые значения
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.#ctor">
            <summary>
            Конструктор класса Вещественное число по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.#ctor(System.String)">
            <summary>
            Конструктор класса Вещественное число по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Вещественное число.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Конструктор класса Вещественное число.
            </summary>
            <param name="name">Имя логического объекта Вещественное число.</param>
            <param name="inLength">Длина целой части.</param>
            <param name="inPrecision">Точность после запятой.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Вещественное число из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFloat.Length">
            <summary>
            Получение и установка длины.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFloat.Precision">
            <summary>
            Получение и установка точности после запятой.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFloat.HideZero">
            <summary>
            Получение и установка точности после запятой.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFloat.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataFloat.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.Validate">
            <summary>
            Метод проверки значения реквизита
            </summary>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.GetDescriptor">
            <summary>
            Метод получения описателя для объекта.
            </summary>
            <returns>Возвращает описатель объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.ToDBField">
            <summary>
            Метод преобразования объекта к полю базы данных.
            </summary>
            <returns>Структуру, хранящую информацию о поле БД</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.Compare(System.Object)">
            <summary>
            Сравнение объекта с переданным объектом.
            </summary>
            <param name="obj">Объект с которым прорисходит сравнение.</param>
            <returns>Возвращает меньше ноля, если this меньше obj,
             ноль, если this равен obj,
             больше ноля, если this больше obj.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.CopyProperies(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Копирует значения свойств из переданного объекта.
            </summary>
            <param name="from">объект из которого копировать</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.Increment(System.Object)">
            <summary>
            Увеличивает значение Value на переданное значение
            Имеет смысл только для числовых типов данных.
            </summary>
            <param name="inValue">число</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataFloat.Decrement(System.Object)">
            <summary>
            Уменьшает значение Value на переданное значение
            Имеет смысл только для числовых типов данных.
            </summary>
            <param name="inValue">число</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataInteger">
            <summary>
            Класс простого элемента данных - Целое число.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataInteger.#ctor">
            <summary>
            Конструктор класса Целое число по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataInteger.#ctor(System.String)">
            <summary>
            Конструктор класса Целое число.
            </summary>
            <param name="name">Имя логического объекта Целое число.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataInteger.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Вещественное число из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataInteger.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataInteger.NullValue">
            <summary>
            Пустое значение объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataInteger.Length">
            <summary>
            Получение и установка длины
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataInteger.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataInteger.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataInteger.DefaultValue">
            <summary>
            Получение и установка значения по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataInteger.Validate">
            <summary>
            Метод проверки значения реквизита
            </summary>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataInteger.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataInteger.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataInteger.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:NsgSoft.DataObjects.NsgDataInteger.Compare(System.Object)" -->
        <member name="M:NsgSoft.DataObjects.NsgDataInteger.Increment(System.Object)">
            <summary>
            Увеличивает значение Value на переданное значение
            Имеет смысл только для числовых типов данных.
            </summary>
            <param name="inValue">число</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataInteger.Decrement(System.Object)">
            <summary>
            Уменьшает значение Value на переданное значение
            Имеет смысл только для числовых типов данных.
            </summary>
            <param name="inValue">число</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataJournal">
            <summary>
            Класс сложного элемента данных - Журнал документа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.#ctor">
            <summary>
            Конструктор класса Журнал по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Журнал первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Журнал из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataJournal.AvailableDocuments">
            <summary>
            Получение списка доступных для журнала документов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataJournal.AssociatedFields">
            <summary>
            Получение списка ассоциированных полей.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataJournal.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataJournal.Document">
            <summary>
            Возвращает документ, текущей записи журнала
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.GetInitializeCode(System.String)">
            <summary>
            Возвращает С# код для инициализации объектов
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.InternalPost(System.Collections.Generic.List{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{NsgSoft.DataObjects.NsgMultipleObject}})">
            <summary>
            Не имеет смысла у данного объекта, всегда возвращает true.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.BasePost">
            <summary>
            Не имеет смысла у данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.CreateDefaultFields">
            <summary>
            Добавление рекомендованных реквизитов при создании из Конфигуратора
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.SaveContent(System.Configuration.ConfigXmlDocument)">
            <summary>
            Метод записи объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.LoadContent(System.Xml.XmlElement)">
            <summary>
            Метод загрузки объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.AddDocument(System.String)">
            <summary>
            Метод добавления документа в список доступных для журнала.
            </summary>
            <param name="doc">Имя документа (полное).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.AddAssociatedField(System.String)">
            <summary>
            Метод добавления ассоциированного поля в список.
            </summary>
            <param name="fName">Имя ассоциированного поля.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.DeleteDocument(System.String)">
            <summary>
            Метод удаления документа из списка доступных для журнала.
            </summary>
            <param name="doc">Имя документа (полное).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.DeleteAssociatedField(System.String)">
            <summary>
            Метод удаления ассоциированного поля из списка.
            </summary>
            <param name="fName">Имя ассоциированного поля.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.GetAssociatedField(System.String)">
            <summary>
            Метод получения ассоциированного поля из списка по имени.
            </summary>
            <param name="fName">Имя ассоциированного поля.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.ReplaceAssociatedField(System.String,NsgSoft.DataObjects.NsgDataFieldsContainer)">
            <summary>
            Метод получения замены ассоциированного поля в списке по имени.
            </summary>
            <param name="fName">Имя ассоциированного поля.</param>
            <param name="field">Поле на замену.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.ClearDocumentsList">
            <summary>
            Метод удаления всех документов из списка доступных для журнала.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.ClearAFieldsList">
            <summary>
            Метод удаления всех ассоциированных полей из списка.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.Post(NsgSoft.DataObjects.NsgDataDocument)">
            <summary>
            Изменение объекта в базе.
            </summary>
            <param name="doc">Документ для регистрации в журнале.</param>
            <param name="transName">Имя открытой внешней транзакции.</param>
            <returns>Возвращает true при удачном изменении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataJournal.GetTypesForAdding(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Метод получения списка доступных для добавления в объект типов по группе.
            </summary>
            <param name="group">Тип группы.</param>
            <returns>Список типов.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgNumber">
            <summary>
            Класс простого элемента данных - Число.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgNumber._USE_CALCULATOR">
            <summary>
            Флаг использования калькулятора.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgNumber._MIN_VALUE">
            <summary>
            Минимальное значение.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgNumber._MAX_VALUE">
            <summary>
            Максимальное значение.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgNumber._DEFAULT_VALUE">
            <summary>
            Значение по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.#ctor">
            <summary>
            Конструктор класса Число по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.#ctor(System.String)">
            <summary>
            Конструктор класса Число.
            </summary>
            <param name="name">Имя логического объекта Число.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Число из XML.
            </summary>
            <param name="elem">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgNumber.NullValue">
            <summary>
            Пустое значение объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgNumber.DefaultValue">
            <summary>
            Получение и установка значения по умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgNumber.MinValue">
            <summary>
            Получение и установка минимального значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgNumber.MaxValue">
            <summary>
            Получение и установка максимального значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgNumber.Length">
            <summary>
            Получение и установка длины целой части.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgNumber.UseCalculator">
            <summary>
            Получение и установка использования калькулятора
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.ToDBField">
            <summary>
            Метод преобразования объекта к полю базы данных.
            </summary>
            <returns>Структуру, хранящую информацию о поле БД</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.CopyProperies(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Копирует значения свойств из переданного объекта.
            </summary>
            <param name="from">объект из которого копировать</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.Increment(System.Object)">
            <summary>
            Увеличивает значение Value на переданное значение
            Имеет смысл только для числовых типов данных.
            </summary>
            <param name="inValue">число</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.Multiply(System.Object)">
            <summary>
            умнажаем значение Value на переданное значение
            </summary>
            <param name="inValue">множитель</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgNumber.Decrement(System.Object)">
            <summary>
            Уменьшает значение Value на переданное значение
            Имеет смысл только для числовых типов данных.
            </summary>
            <param name="inValue">число</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgObject">
            <summary>
            Абстрактный класс логического объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObject._GROUPNAME">
            <summary>
            Имя группы для объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObject._DESCRIPTION">
            <summary>
            Описание логического объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObject._PRESENTATION">
            <summary>
            Представление для пользователя.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObject._EDITOR_ACCESS">
            <summary>
            Флаг видимости в редакторе.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObject._HISTORY">
            <summary>
            История использования.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObject._CLONECONTRUCTOR">
            <summary>
            Конструктор для операци Clone, заполняется и проверяется при вставке в Метаданные.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObject._METADATA">
            <summary>
            Метаданные.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObject._VISIBLE">
            <summary>
            Видимость.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.#ctor">
            <summary>
            Конструктор абстрактного класса логического объекта данных по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.#ctor(System.String)">
            <summary>
            Конструктор абстрактного класса логического объекта.
            </summary>
            <param name="name">Имя логического объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="root">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.Value">
            <summary>
            Абстрактное свойство получения и установки значения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.GetRuntimeCloneValue">
            <summary>
            Получение значения для клонирования, без каких либо пересчетов и анализов
            </summary>
            <returns></returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.CloneConstructor">
            <summary>
            Конструктор для операци Clone, заполняется и проверяется при вставке в Метаданные.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.Visible">
            <summary>
            Видимость объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.Name">
            <summary>
            Получение и установка имени логического объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.NameForObjectList">
            <summary>
            Получение имени для списка объектов (ключ).
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.Presentation">
            <summary>
            Получение и установка представления имени объекта для пользователя.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.UserPresentation">
            <summary>
            Полное представление для пользователей
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.Description">
            <summary>
            Получение и установка описания объекта для пользователя.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.EditorVisible">
            <summary>
            Получение и установка видимости и редактируемости объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.FullName">
            <summary>
            Получение полное имени логического объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.Self">
            <summary>
            Получение ссылки обекта на самого себя.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.Root">
            <summary>
            Получение объекта-владелеца.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.GroupName">
            <summary>
            Получение имени группы, в которой содержится объект.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.internalGroupName">
            <summary>
            Получение имени группы, в которой содержится объект.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.Standard">
            <summary>
            Получение эталонного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.CanPropertiesChange">
            <summary>
            Получение флага возможности модификации свойств объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.DatabaseManager">
            <summary>
            Получение объекта доступа к базе данных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.internalSetMetaData(NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Получение и установка объекта доступа к метаданным.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.MetaData">
            <summary>
            Получение и установка объекта доступа к метаданным.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.MetaDataName">
            <summary>
            Получение имени метаданных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.ConfigurationName">
            <summary>
            Получение имени конфигурации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.Clone">
            <summary>
            Получение копии данного объекта,
            в режиме конфигуратора возвращает сам объект.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObject.HistoryList">
            <summary>
            Получение списка истории для объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.OnBeforeInsertInObjectList(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Вызывается перед добавлением текущего объекта в ObjectList другого объекта.
            </summary>
            <param name="rootObject">Объект, в который идет добавление текущего.</param>
            <returns>Возвращает флаг продолжения операции добавления. Если true,
            добавление продолжается, иначе прерывается.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.OnBeforeObjectAddedInObjectList(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Вызывается перед добавлением в ObjectList текущуго объекта другого объекта.
            </summary>
            <param name="newObject">Добавляемый объект.</param>
            <returns>Возвращает флаг продолжения операции добавления. Если true,
            добавление продолжается, иначе прерывается.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.OnAfterInsertInObjectList">
            <summary>
            Вызывается когда объект добавлен в ObjectList
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.OnAfterObjectAddedInObjectList(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Вызывается когда в ObjectList добавлен объект
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.OnAfterRemoveFromObjectList(NsgSoft.DataObjects.INsgDataObjectList)">
            <summary>
            Вызывается когда объект удален из ObjectList
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.OnAfterReplaceInObjectList(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Вызывается когда объект заменен в ObjectListе
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.OnAfterObjectRemovedFromObjectList(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Вызывается когда в ObjectListе удален объект
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.SetNameWithoutCheck(System.String)">
            <summary>
            Установка имени логического объекта без проверки имени. Для внутреннего использования.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.SaveContent(System.Configuration.ConfigXmlDocument)">
            <summary>
            Метод записи объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.LoadContent(System.Xml.XmlElement)">
            <summary>
            Метод загрузки объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.GetHistory``1">
            <summary>
            Метод возвращает историю ввода указанного объекта.
            </summary>
            <returns>Список, содержащий историю ввода NsgDataObject.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.PutToHistory(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод добавления объекта в историю ввода.
            </summary>
            <param name="obj">Объект, который нужно внести в историю ввода.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.GetHashCode">
            <summary>
            Получение хэш кода.
            </summary>
            <returns>Значение хэш кода.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.Equals(System.Object)">
            <summary>
            Сравнение.
            </summary>
            <returns>Результат сравнения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ToInt">
            <summary>
            Возвращает значение как целое число
            </summary>
            <returns>Целое число</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ToFloat">
            <summary>
            Возвращает значение как вещественное число
            </summary>
            <returns>Вещественное число</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ToDecimal">
            <summary>
            Возвращает значение как вещественное число
            </summary>
            <returns>Вещественное число</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ToDateTime">
            <summary>
            Возвращает значение как дату
            </summary>
            <returns>Дата</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ToBoolean">
            <summary>
            Возвращает значение как булево
            </summary>
            <returns>булево</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ToBegin">
            <summary>
            Возвращает начальный остаток.
            Объект должен быть типа NsgDataCirculation
            </summary>
            <returns>Начальный остаток</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ToEnd">
            <summary>
            Возвращает конечный остаток.
            Объект должен быть типа NsgDataCirculation
            </summary>
            <returns>Начальный остаток</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ToCredit">
            <summary>
            Возвращает приход.
            Объект должен быть типа NsgDataCirculation
            </summary>
            <returns>Начальный остаток</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ToDebit">
            <summary>
            Возвращает расход.
            Объект должен быть типа NsgDataCirculation
            </summary>
            <returns>Начальный остаток</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ToReferent">
            <summary>
            Возвращает NsgReferencedObject - объект, на который ссылается данная ссылка
            </summary>
            <returns>NsgReferencedObject</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.To``1">
            <summary>
            Возвращает NsgReferencedObject - объект, на который ссылается данная ссылка, преобразованный к нужному типу данных
            </summary>
            <returns>NsgReferencedObject</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ValueToString">
            <summary>
            Возвращает значение как строку без искажений (разделители разрядов и пр.)
            </summary>
            <returns>Строковое представление значения</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.ToString">
            <summary>
            Возвращает значение как строку
            </summary>
            <returns>Строковое представление значения</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.LoadDataFromXML(System.Xml.XmlReader)">
            <summary>
            Восстановить значение объекта и всех его свойств из XML
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.op_Equality(NsgSoft.DataObjects.NsgObject,NsgSoft.DataObjects.NsgObject)">
            <summary>
            Перегрузка оператора сравнения (==) по ссылкам.
            </summary>
            <param name="one">Объект для сравнения.</param>
            <param name="two">Объект для сравнения.</param>
            <returns>Возвращает true, если объекты равны, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.op_Inequality(NsgSoft.DataObjects.NsgObject,NsgSoft.DataObjects.NsgObject)">
            <summary>
            Перегрузка оператора сравнения (!=) по ссылкам.
            </summary>
            <param name="one">Объект для сравнения.</param>
            <param name="two">Объект для сравнения.</param>
            <returns>Возвращает true, если объекты не равны, и false в противном случае.</returns>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgObject.NsgToString">
            <summary>
            Запрошено преобразование к строке
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.OnToString(System.String)">
            <summary>
            Обработка преобразования к строке
            </summary>
            <param name="Text">результат внтреннего преобразования</param>
            <returns>результат</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObject.OnToString(NsgSoft.DataObjects.NsgObject,System.String)">
            <summary>
            Обработка преобразования к строке
            </summary>
            <param name="Text">результат внтреннего преобразования</param>
            <returns>результат</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgThread">
            <summary>
            Класс потока.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgThread.ProgressEventsType">
            <summary>
            Перечисление типов сообщений о прогрессе.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgThread.ProgressEventsType.Synchronous">
            <summary>
            Синхронный.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgThread.ProgressEventsType.Asynchronous">
            <summary>
            Асинхронный.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgThread.ThreadSuspended">
            <summary>
            Событие, которое должен инициировать поток, если он отреагировал на команду приостановки
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgThread.Guid">
            <summary>
            Произвольный идентификатор, используется для группировки потоков в NsgThreadManager.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgThread.activeThreads">
            <summary>
            Список активных потоков.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.AllowStepSkipPending">
            <summary>
            Разрешение запроса пропустить действие
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgThread.StepSkipPending">
            <summary>
            Запрошен пропуск действия.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.#ctor">
            <summary>
            Конструктор по-умолчанию
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.#ctor(System.String,System.String,System.Object,NsgSoft.Common.NsgThreadType)">
            <summary>
            Конструктор потока.
            Для запуска требуется вызвать функцию Start.
            </summary>
            <param name="name">Имя потока</param>
            <param name="description">Описание потока</param>
            <param name="owner">Владелец потока</param>
            <param name="type">Тип потока</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.Thread">
            <summary>
            Ссылка на системный поток, связанные с данным объектом
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.Name">
            <summary>
            Имя потока.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.Description">
            <summary>
            Описание потока.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.Owner">
            <summary>
            Объект, к которому привязан поток.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.StartTime">
            <summary>
            время начала выполнения потока
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.EstimatedTime">
            <summary>
            ожидаемое оставшееся время исполнения
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.CancellationPending">
            <summary>
            Флаг - требование прерывания потока. Выполняемая процедура должна периодически проверять этот флаг
            и в случае его выставления, завершать свое выполнение, иначе поток будет завершен принудительно
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.MessageOnError">
            <summary>
            Флаг вывода сообщений при ошибках.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.SuspendPending">
            <summary>
            Флаг - требование приостановки потока. 
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.ThreadType">
            <summary>
            Тип потока. Характеризует выполняемую операцию и возможность прерывания.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.ThreadData">
            <summary>
            Данные, передаваемые в процедуру при запуске потока
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.WaitResults">
            <summary>
            Список ожидания окончания операций. Если задан, поток не начнет исполнение,
             пока не дождется окончания всех заданных асинхронных операций.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.CancelAvailable">
            <summary>
            Флаг разрешает прерывание исполнения потока.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.ThreadState">
            <summary>
            Текущее состояние потока.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.ThreadId">
            <summary>
            Идентификатор потока.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.IsRunning">
            <summary>
            Флаг рабочего состояния потока.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.ProgressEventType">
            <summary>
            Тип сообщений о изменении прогресса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.AsyncInvoker">
            <summary>
            Объект перевода событий на поток.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.CancelForbidden">
            <summary>
            Запретить отмену потока пользователем
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.CancelAsync(System.Int32)">
            <summary>
            Принудительно прекратить выполнение потока.
            Если время ожидания не ноль, то устанавливается флажок завершения потока,
            если за отведенное время поток не остановился, то он завершается принудительно
            </summary>
            <param name="milliseconds">Время ожидания в милисекундах.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.Join(System.Int32)">
            <summary>
            Дождаться завершения выполнения потока
            </summary>
            <param name="milliseconds">Время ожидания в милисекундах. Для (-1) бесконечно.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.Join">
            <summary>
            Дождаться завершения выполнения потока
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.Suspend(System.Int32)">
            <summary>
            Приостановить поток.
            Если время ожидания истекло, а поток не приостановлен, то функция вернет false.
            </summary>
            <param name="milliseconds">Время ожидания приостановки потока.</param>
            <returns>Возвращает true, если поток приостановлен, иначе - false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.RunWorkerAsync">
            <summary>
            Запуск потока на выполнение.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.RunWorkerAsync(System.String)">
            <summary>
            Запуск потока на выполнение с заданием имени.
            </summary>
            <param name="threadName">Имя системного потока.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.RunWorkerAsync(System.String,NsgSoft.DataObjects.NsgEventInvoker)">
            <summary>
            Запуск потока на выполнение с заданием имени.
            </summary>
            <param name="threadName">Имя системного потока.</param>
            <param name="invoker">Объект переброски событий на поток владелец.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.CheckStopPending">
            <summary>
            Выполняется проверка запросов на преравание или приостановку потока.
             Если выставлен флаг приостановки потока, то поток будет приостановлен,
             если выставлен флаг прерывания - будет сгенерировано событие прерывания потока.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.GetThreadID(System.Int32)">
            <summary>
            Метод получения ID NSG-потока по ID системного потока.
            </summary>
            <param name="systemThreadID">ID системного потока.</param>
            <returns>Возвращает ID NSG-потока, если не найден, то -1.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.Resume">
            <summary>
            Возобновляет выполнение приостановленного потока. 
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.addThreadToCash(System.Int32)">
            <summary>
            Метод добавления потока в кэш.
            </summary>
            <param name="systemID">ИД системного потока.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.start(System.Object)">
            <summary>
            Выполняется при запуске потока
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.removeCurrentThreadFromActiveList">
            <summary>
            Метод удаления текущего потока из списка активных потоков.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.OnDoWork(System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Метод вызова события обработки потока.
            </summary>
            <param name="e">Параметры потока.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.WorkCompleated(System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Генерация события завершения потока.
            </summary>
            <param name="e">Параметр для передачи в сообщение.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.compleatedReporterMethod(System.Object)">
            <summary>
            Вызывает генерацию события RunWorkerCompleted.
            </summary>
            <param name="arg">Аргументы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.GetNsgThread(System.Int32)">
            <summary>
            Получение NsgThread по идентификатору потока
            </summary>
            <param name="threadID">идентификатор потока</param>
            <returns>NsgTread, соответсвующий потоку</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.ActiveThreads">
            <summary>
            Список активных потоков.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.CurrentThread">
            <summary>
            Получение текущего NsgThread
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgThread.NsgDoWorkEventHandler">
            <summary>
            Делегат обработки потока.
            </summary>
            <param name="thread">Поток.</param>
            <param name="args">Параметры.</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThread.DoWork">
            <summary>
            Событие, вызываемое при начале выполнения потока. 
            Обработчик события должен реализовывать всю необходимую функциональность.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThread.RunWorkerCompleted">
            <summary>
            Событие, вызываемое при завершении работы потока. Выполняется в вызывающем потоке.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThread.RunWorkerCompletedSync">
            <summary>
            Событие, вызываемое при завершении работы потока. Выпоняется в фоновом потоке.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThread.RunWorkerCompletedFinal">
            <summary>
            Событие, вызываемое при завершении работы потока. Вызывается после всех действий.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.Dispose">
            <summary>
            Метод уничтожения объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.NsgSoft#Design#INsgLongOperation#ID">
            <summary>
            Идентификатор.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.NsgSoft#Design#INsgLongOperation#OperationDescription">
            <summary>
            Получение описания операции.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThread.BeginOperation">
            <summary>
            Событие о начале операции.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.OnBeginOperation">
            <summary>
            Метод вызова события о начале операции.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThread.EndOperation">
            <summary>
            Событие об окончании операции.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.OnEndOperation">
            <summary>
            Метод вызова события об окончании операции.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.NsgSoft#Design#INsgLongOperation#CancelOperation(System.Object)">
            <summary>
            Метод отмены операции.
            </summary>
            <param name="sender">Источник.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.MaxProgressValue">
            <summary>
            Максимальное значение прогресса. При присвоении будет пересчитано 
             значение процента исполнения и сгенерировано сообщение ProgressChanged,
             если его значение изменилось.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.CurrentProgressValue">
            <summary>
            Текущее значение прогресса. Приводится к проценту исполнения 
             относительно заданного максимального значения прогресса. 
             При присвоении будет пересчитано значение процента исполнения и
             сгенерировано сообщение ProgressChanged, если его значение изменилось.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.ProgressProcentage">
            <summary>
            Текущий процент исполнения. При присвоении будет сгенерировано
             сообщение ProgressChanged, если значение изменилось.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThread.ProgressObject">
            <summary>
            Объект состояние. При присвоении будет сгенерировано
             сообщение ProgressChanged, если значение изменилось.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThread.Started">
            <summary>
            Событие о запуске потока на исполнение.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.OnStarted">
            <summary>
            Метод вызова события о запуске потока на исполнение.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThread.Stoped">
            <summary>
            Событие об остановке исполнения потока.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.OnStoped">
            <summary>
            Метод вызова события об остановке исполнения потока.
            </summary>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThread.ProgressChanged">
            <summary>
            Событие, вызываемое при изменении прогресса
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Вызывает генерацию события ProgressChanged.
            </summary>
            <param name="e">Аргументы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.progressReporterMethod(System.Object)">
            <summary>
            Вызывает метод OnProgressChanged.
            </summary>
            <param name="arg">Аргументы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.ReportProgress">
            <summary>
            Метод вызывает генерацию события ProgressChanged.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.ReportProgress(System.Object)">
            <summary>
            Метод вызывает генерацию события ProgressChanged.
            </summary>
            <param name="progressObject">Пользовательский объект.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.ReportProgress(System.Int32)">
            <summary>
            Метод вызывает генерацию события ProgressChanged.
            </summary>
            <param name="progressProcentage">Текущее значение прогресса.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.ReportProgress(System.Int32,System.Object)">
            <summary>
            Метод вызывает генерацию события ProgressChanged.
            </summary>
            <param name="progressProcentage">Текущее значение прогресса.</param>
            <param name="progressObject">Пользовательский объект.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.ReportProgress(System.Int32,System.Object,System.Boolean)">
            <summary>
            Метод вызывает генерацию события ProgressChanged.
            </summary>
            <param name="progressProcentage">Текущее значение прогресса.</param>
            <param name="progressObject">Пользовательский объект.</param>
            <param name="checkEquals">Проверять равенство с установленными значениями. Если равны,
             генерация события не вызывается.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThread.NsgSoft#Common#INsgProgressProvider#CalculateProcent(System.Int32)">
            <summary>
            Метод подсчета процента с учетом внутренних параметров провайдера.
             Используется для вложенных процентов.
            </summary>
            <param name="proc">Процент прогресса.</param>
            <returns>Возвращает обсчитанный процент.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgThreadManager">
            <summary>
            Класс, управляющий потоками.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgThreadManager.ThreadStateChanging">
            <summary>
            Перечисление изменений состояния потока.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgThreadManager.ThreadStateChanging.Started">
            <summary>
            Запущен.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgThreadManager.ThreadStateChanging.Stoped">
            <summary>
            Остановлен.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgThreadManager.ThreadStateChanging.Progress">
            <summary>
            Прогресс.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgThreadManager.AddedNewThreadEventHandler">
            <summary>
            Делегат добавления нового потока в менеджер.
            </summary>
            <param name="sender">Источник.</param>
            <param name="newThread">Новый поток.</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThreadManager.AddedNewThread">
            <summary>
            Событие о добавлении нового потока в менеджер.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.OnAddedNewThread(NsgSoft.DataObjects.NsgThread)">
            <summary>
            Метод вызова события о добавлении нового потока в менеджер.
            </summary>
            <param name="newThread">Новый поток.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgThreadManager.DeletedThreadEventHandler">
            <summary>
            Делегат удаления потока из менеджера.
            </summary>
            <param name="sender">Источник.</param>
            <param name="delThread">Удаляемый поток.</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThreadManager.DeletedThread">
            <summary>
            Событие о удалении потока из менеджера.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.OnDeletedThread(NsgSoft.DataObjects.NsgThread)">
            <summary>
            Метод вызова события о удалении потока из менеджера.
            </summary>
            <param name="delThread">Удаляемый поток.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgThreadManager.ThreadStateChangedEventArgs">
            <summary>
            Класс аргументов события о изменении состояния потока.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.ThreadStateChangedEventArgs.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.ThreadStateChangedEventArgs.#ctor(NsgSoft.DataObjects.NsgThread,NsgSoft.DataObjects.NsgThreadManager.ThreadStateChanging)">
            <summary>
            Конструктор с параметрами.
            </summary>
            <param name="thread">Изменившийся поток.</param>
            <param name="changing">Изменение.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThreadManager.ThreadStateChangedEventArgs.Thread">
            <summary>
            Получение изменившегося потока.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThreadManager.ThreadStateChangedEventArgs.Changing">
            <summary>
            Получение изменения.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgThreadManager.ThreadStateChangedEventHandler">
            <summary>
            Делегат изменения состояния потока.
            </summary>
            <param name="sender">Источник.</param>
            <param name="args">Аргументы.</param>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgThreadManager.ThreadStateChanged">
            <summary>
            Событие о изменении состояния потока.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.OnThreadStateChanged(NsgSoft.DataObjects.NsgThread,NsgSoft.DataObjects.NsgThreadManager.ThreadStateChanging)">
            <summary>
            Метод вызова события о изменении состояния потока.
            </summary>
            <param name="thread">Поток.</param>
            <param name="changing">Изменение.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThreadManager.ThreadLimit">
            <summary>
            Максимальное число одновременно выполняющихся потоков
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThreadManager.RunningThreadCount">
            <summary>
            Количество выполняющихся в данный момент потоков
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThreadManager.ThreadListState">
            <summary>
            Состояние менеджера. Может быть:
            Aborted - выполнение прервано принудительно. Продолжение невозможно.
            Running - идет выполнение или ожидание новых заданий
            Suspended - поток остановлен, выполнение заданий можно продолжить
            Unstarted - выполнение еще не начиналось
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThreadManager.Threads">
            <summary>
            Массив всех имеющихся, еще не запущенных потоков
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgThreadManager.RunningThreads">
            <summary>
            Массив всех имеющихся, выполняющихся сейчас потоков
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.Enqueue(NsgSoft.DataObjects.NsgThread)">
            <summary>
            Поместить поток в очередь на исполнение.
            </summary>
            <param name="thread">Поток на исполнение.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.Dequeue(NsgSoft.DataObjects.NsgThread)">
            <summary>
            Удалить поток из очереди исполнения и прервать его исполнение,
             если необходимо.
            </summary>
            <param name="thread">Поток на удаление.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.DoNext">
            <summary>
            Запуск на выполнение следующего задания из очереди.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.MoveThreadFar(NsgSoft.DataObjects.NsgThread)">
            <summary>
            Метод перемещения потока по очереди дальше.
            </summary>
            <param name="thread">Поток для перемещения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.MoveThreadNear(NsgSoft.DataObjects.NsgThread)">
            <summary>
            Метод перемещения потока по очереди ближе.
            </summary>
            <param name="thread">Поток для перемещения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.thread_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Обработка события завершения выполнения потока из списка.
            </summary>
            <param name="sender">Источник события.</param>
            <param name="e">Параметры события.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.thread_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Обработка события изменения прогресса.
            </summary>
            <param name="sender">Источник события.</param>
            <param name="e">Параметры события.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.thread_Stoped(System.Object,System.EventArgs)">
            <summary>
            Обработка события при запуске потока.
            </summary>
            <param name="sender">Источник события.</param>
            <param name="e">Параметры события.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.thread_Started(System.Object,System.EventArgs)">
            <summary>
            Обработка события при остановке потока.
            </summary>
            <param name="sender">Источник события.</param>
            <param name="e">Параметры события.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.StartThreadListSync">
            <summary>
            Синхронный запуск потоков, находящихся в списке на выполнение
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.StartThreadListAsync">
            <summary>
            Асинхронный запуск потоков, находящихся в списке на выполнение
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.Suspend(System.Int32)">
            <summary>
            Приостановить поток.
            Если время ожидания истекло, а поток не приостановлен, то функция вернет false.
            </summary>
            <param name="milliseconds">Время ожидания приостановки потока</param>
            <returns>true, если поток приостановлен, иначе - false</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.Resume">
            <summary>
            Возобновляет выполнение приостановленного потока. 
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.LockExecute(System.Guid)">
            <summary>
            Метод блокировки начала исполнения потоков с заданным идентификатором.
             При добавлении в очередь потока с указанным Guid, он не запустится до 
             вызова парного метода UnlockExecute.
            </summary>
            <param name="id">Идентификатор потока.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.UnlockExecute(System.Guid)">
            <summary>
            Метод разблокировки начала исполнения потоков с заданным идентификатором.
            </summary>
            <param name="id">Идентификатор потока.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.IsLockedExecute(System.Guid)">
            <summary>
            Метод проверки блокировки потоков по идентификатору.
            </summary>
            <param name="id">Идентификатор потока.</param>
            <returns>true, если поток заблокирован, иначе - false</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.ThreadsCount(System.Guid)">
            <summary>
            Метод проверки количества потоков по идентификатору.
            </summary>
            <param name="id">Идентификатор потока.</param>
            <returns>количество потоков</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgThreadManager.CancelAsync(System.Int32)">
            <summary>
            Принудительно прекратить выполнение потока.
            Если время ожидания не ноль, то устанавливается флажок завершения потока,
            если за отведенное время поток не остановился, то он завершается принудительно.
            </summary>
            <param name="milliseconds">Время ожидания в милисекундах.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.Table.GetUsers">
            <summary>
            Получение списка пользователей, для которых есть загруженные права
            </summary>
            <returns>Список пользователей</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.Table.GetObjects(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Получение списка объектов, для которорых есть загруженные права указанного пользователя
            </summary>
            <param name="User">Пользователь</param>
            <returns>Список объектов</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.Table.GetActions(NsgSoft.DataObjects.NsgDataDictionary,System.String)">
            <summary>
            Получения списка действий, для которых есть права для указанного объекта и пользователя
            </summary>
            <param name="User">Пользователь</param>
            <param name="Object">Объект</param>
            <returns>Список действий</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.Table.Save(NsgSoft.DataObjects.NsgDataDictionary,System.String)">
            <summary>
            Запись прав для объекта
            </summary>
            <param name="User">Пользователь</param>
            <param name="Object">ОБъект</param>
            <returns>Сохраненные права</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.Table.Load(NsgSoft.DataObjects.NsgDataDictionary,System.String,System.String)">
            <summary>
            Загрузка прав для объекта
            </summary>
            <param name="User">Пользователь</param>
            <param name="Object">Объект</param>
            <param name="value">Права</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgUserRights.User">
            <summary>
            Пользовательские права.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.GetRoles(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Возвращает все роли пользователя
            </summary>
            <param name="user">Пользователь</param>
            <returns>Роли пользователя</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.GetUserStartObject(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Получить объект при запуске для пользователя.
            </summary>
            <param name="user">Пользователь.</param>
            <returns>Возвращает объект при запуске.</returns>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRights.usersStartObjectList">
            <summary>
            Список объектов при загрузке для пользователей (пользователь, объект).
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.GetUserStartObject(System.String)">
            <summary>
            Получить объект при запуске для пользователя.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <returns>Возвращает объект при запуске.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.IsAdministrator(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Метод проверки пользователя на административные права.
            </summary>
            <param name="userSet">Пользователь.</param>
            <returns>Возвращает булевый результат проверки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.IsCurrentUserAdministrator">
            <summary>
            Метод проверки текущего пользователя на административные права.
            </summary>
            <returns>Возвращает булевый результат проверки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.GetDefaultRights">
            <summary>
            Метод получения прав по умолчанию.
            </summary>
            <returns>Возвращает права.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.GetAvailableOpertionsForObject(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод получения доступных операций по объекту метаданных.
            </summary>
            <param name="metaObject">Объект метаданных.</param>
            <returns>Возвращает список перечисление операций.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgUserRights.GetAvailableOpertionsForObject(NsgSoft.DataObjects.NsgMultipleObjectDescriptor)">
            <summary>
            Метод получения доступных операций по объекту метаданных.
            </summary>
            <param name="metaDesc">Описатель объекта метаданных.</param>
            <returns>Возвращает список перечисление операций.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualDbManagerList.TypeName">
            <summary>
            Получение имени типа объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualObjectGroup.TypeName">
            <summary>
            Получение имени типа объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgVirtualObjectGroup.EditorVisible">
            <summary>
            Получение и установка видимости и редактируемости объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgDataObjectList.Root">
            <summary>
            Получение и установка объекта - владельца списка.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgDataObjectList.MetaData">
            <summary>
            Получение и установка метаданных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgDataObjectList.ObjectsNames">
            <summary>
            Получение списка имен всех вложенных объектов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgDataObjectList.GetObjectNamesByType(System.Type)">
            <summary>
            Получение списка имен объектов по типу.
            </summary>
            <param name="type">Тип для поиска.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgDataObjectList.Delete(System.String)">
            <summary>
            Метод удаления объекта из списка по имени.
            </summary>
            <param name="obj">Имя удаляемого логического объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.INsgDataObjectList.Clear">
            <summary>
            Метод очистки списка объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.INsgDataObjectList.Count">
            <summary>
            Получение количества элементов в списке.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataObjectList`2">
            <summary>
            Класс списка логических объектов данных.
            </summary>
            <typeparam name="Template">Тип хранимых объектов, наследников от NsgObject.</typeparam>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.#ctor">
            <summary>
            Конструктор класса списка логических объектов по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.#ctor(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса списка логических объектов.
            </summary>
            <param name="inRoot">Объект-владелец данного списка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.#ctor(NsgSoft.DataObjects.NsgMultipleObject,`0[])">
            <summary>
            Конструктор класса списка логических объектов.
            </summary>
            <param name="inRoot">Объект-владелец данного списка.</param>
            <param name="initArray">Набор объектов для инициализации списка.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.Root">
            <summary>
            Получение и установка объекта - владельца списка.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.All">
            <summary>
            Получение списка копий всех объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.Objects">
            <summary>
            Получение списка копий всех объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.Count">
            <summary>
            Получение количества элементов в списке.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.Item(System.Guid)">
            <summary>
            Получение копии объекта по его идентификатору.
            !!! Поиск ведется перебором !!!
            </summary>
            <param name="key">Идентификатор объекта.</param>
            <returns>Копия объекта из списка.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.Item(NsgSoft.DataObjects.INsgNameProvider)">
            <summary>
            Получение копии объекта по его имени.
            </summary>
            <param name="nameProvider">Объект, имеющий своство "Name",вляющееся именем объекта</param>
            <returns>Копия объекта из списка.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.Item(System.String)">
            <summary>
            Получение копии объекта по его имени.
            </summary>
            <param name="key">Имя объекта.</param>
            <returns>Копия объекта из списка.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.Item(NsgSoft.Common.NsgDataFixedFields)">
            <summary>
            Получение копии объекта по его идентификатору.
            </summary>
            <param name="key">Идентификатор объекта.</param>
            <returns>Копия объекта из списка.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.ObjectsNames">
            <summary>
            Получение списка имен всех вложенных объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.ObjectsValues">
            <summary>
            Получение списка значений всех вложенных объектов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.GetObjectNamesByType(System.Type)">
            <summary>
            Получение списка имен объектов по типу.
            </summary>
            <param name="type">Тип для поиска.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.GetObjectNamesByGroup(System.String)">
            <summary>
            Получение списка имен объектов по группе.
            </summary>
            <param name="group">Имя группы для поиска.</param>
            <returns>Список имен найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.GetObjectsByType(System.Type)">
            <summary>
            Получение списка объектов по типу.
            </summary>
            <param name="type">Тип для поиска.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.MetaData">
            <summary>
            Получение и установка метаданных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.GetDBName(System.String)">
            <summary>
            Возвращает имя объекта в базе данных.
            Для MultipleObject возвращается TableName, для SimpleObject - FieldName
            </summary>
            <param name="fullName">Полное имя</param>
            <returns>Для MultipleObject возвращается TableName, для SimpleObject - FieldName</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.ChangeKey(System.String,System.String)">
            <summary>
            Метод замены ключа в списке.
            </summary>
            <param name="oldName">Старое имя.</param>
            <param name="newName">Новое имя.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.GetAllDBManagersNames">
            <summary>
            Метод получения имен всех менеджеров БД в списке объектов.
            </summary>
            <returns>Возвращает массив имен.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.CreateObjectName(System.String,System.String)">
            <summary>
            Метод авто создания имени по образцу. ДОбавляет "_N" к образцу
            </summary>
            <param name="writer">Объект записи XML текста.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.LoadConfig(System.Xml.XmlElement)">
            <summary>
            Метод загрузки списка объектов из XML файла.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.AddWithRename(`0)">
            <summary>
            Метод добавления нового объекта в список с автоматической подгонкой имени
            </summary>
            <param name="obj">Новый логический объект.</param>
            <returns>Добавленный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Add(`0)">
            <summary>
            Метод добавления нового объекта в список.
            </summary>
            <param name="obj">Новый логический объект.</param>
            <returns>Добавленный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Replace(`0)">
            <summary>
            Метод добавления нового объекта в список, если существет объкт с таким именем, то он будет заменен.
            </summary>
            <param name="obj">Новый логический объект.</param>
            <returns>Добавленный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.AddRange(`0[])">
            <summary>
            Метод добавления новых объектов в список.
            </summary>
            <param name="objects">Новые логические объекты.</param>
            <returns>Добавленный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.AddRange(`0[],System.Boolean)">
            <summary>
            Метод добавления новых объектов в список.
            </summary>
            <param name="objects">Новые логические объекты.</param>
            <param name="withReplace">Замещать существующие.</param>
            <returns>Добавленный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.AddRange(System.Type[])">
            <summary>
            Метод добавления новых объектов в список.
            </summary>
            <param name="objects">Новые логические объекты.</param>
            <returns>Добавленный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.AddRange(System.Type[],System.Boolean)">
            <summary>
            Метод добавления новых объектов в список.
            </summary>
            <param name="objects">Новые логические объекты.</param>
            <param name="withReplace">Замещать существующие.</param>
            <returns>Добавленный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Delete(`0)">
            <summary>
            Метод удаления объекта из списка.
            </summary>
            <param name="obj">Удаляемый логический объект.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Delete(System.String)">
            <summary>
            Метод удаления объекта из списка по имени.
            </summary>
            <param name="name">Имя удаляемого логического объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Delete(System.Collections.Generic.List{System.String})">
            <summary>
            Метод удаления объектов из списка по именам.
            </summary>
            <param name="names">Имена удаляемых логических объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Delete(`0,System.Boolean)">
            <summary>
            Метод удаления объекта из списка.
            </summary>
            <param name="obj">Удаляемый логический объект.</param>
            <param name="isRekurse">Флаг рекурсивного вызова.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Delete(`0,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Метод удаления объекта из списка.
            </summary>
            <param name="obj">Удаляемый логический объект.</param>
            <param name="isRekurse">Флаг рекурсивного вызова.</param>
            <param name="ignoreReferences">Список ссылок которые игнорировать, для массового удаления.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.RenameObject(`0,System.String)">
            <summary>
            Переименование объекта в ObjectList, выполняется только в режиме Конфигуратора
            </summary>
            <param name="obj"></param>
            <param name="oldFullName"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Clear">
            <summary>
            Метод очистки списка объектов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.GetObjectByPath(System.String)">
            <summary>
            Метод получения объекта по его пути.
            </summary>
            <param name="path">Заданный путь объекта в метаданных.</param>
            <returns>Объект по заданному пути.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.GetObjectsByPath(System.String,System.Boolean)">
            <summary>
            Метод получения списка объектов по его пути.
            </summary>
            <param name="path">Заданный путь объекта в метаданных.</param>
            <param name="throwErrors">Флаг исключений.</param>
            <returns>Список объектов по заданному пути.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.CheckObjectByPath(System.String)">
            <summary>
            Проверяет наличие объекта по его пути.
            </summary>
            <returns>true, если объект найден</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.GetObjectTypeGuidByName(System.String)">
            <summary>
            Метод получения идентификатора типа объекта по его имени.
            </summary>
            <param name="inName">Имя объекта.</param>
            <returns>Тип объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.GetObjectTypeByName(System.String)">
            <summary>
            Метод получения типа объекта по его имени.
            </summary>
            <param name="inName">Имя объекта.</param>
            <returns>Тип объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.CheckTableSubTypeByName(System.String,NsgSoft.Common.NsgTableSubType)">
            <summary>
            Метод получение подтипа таблицы по ее имени
            </summary>
            <param name="inName">Имя таблицы</param>
            <returns>Подтип таблицы</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Contains(System.String)">
            <summary>
            Проверка наличия в списке реквизита с именем name
            </summary>
            <param name="name">имя реквизита</param>
            <returns>true - если реквизит найден, false - если нет</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Contains(System.String,System.Boolean)">
            <summary>
            Проверка наличия в списке реквизита с именем name
            </summary>
            <param name="name">имя реквизита</param>
            <param name="checkPredefined">Проверка через предопределенные поля.</param>
            <returns>true - если реквизит найден, false - если нет</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.ContainsPath(System.String)">
            <summary>
            Проверка возможности взять объект по пути из списка.
            </summary>
            <param name="path">Путь.</param>
            <returns>true - если реквизит найден, false - если нет</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Contains(NsgSoft.Common.NsgDataFixedFields)">
            <summary>
            Проверка наличия в списке предопределенного реквизита
            </summary>
            <param name="name">имя реквизита</param>
            <returns>true - если реквизит найден, false - если нет</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Метод копирования коллекции в массив. Не реализован.
            </summary>
            <param name="array">Массив для копирования.</param>
            <param name="arrayIndex">Начальный индекс.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.System#Collections#ICollection#Count">
            <summary>
            Получение количества объектов в коллекции.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.System#Collections#ICollection#IsSynchronized">
            <summary>
            Получение флага синхронизованности.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.System#Collections#ICollection#SyncRoot">
            <summary>
            Получение синхронизованного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Метод получения перечислителя коллекции.
            </summary>
            <returns>Возвращяет перечислитель.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataObjectList`2.Enumerator">
            <summary>
            Класс перечислитель элементов списка.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Enumerator.#ctor(NsgSoft.DataObjects.NsgDataObjectList{`0,`1})">
            <summary>
            Конструктор класса.
            </summary>
            <param name="collection">Коллекция.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataObjectList`2.Enumerator.System#Collections#IEnumerator#Current">
            <summary>
            Получение текущего объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Enumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Метод проверки на получение следующего элемента.
            </summary>
            <returns>Возвращает true при возвожности получения следующего элемента,
             иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataObjectList`2.Enumerator.System#Collections#IEnumerator#Reset">
            <summary>
            Метод сброса.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataDictionary">
            <summary>
            Класс данных Справочник
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDictionary._MAX_GROUP_LEVEL">
            <summary>
            Максимально допустимое количество групп для справочника.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDictionary._PERIODIC_TABLE">
            <summary>
            Имя таблицы для хранения периодических реквизитов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDictionary._HAS_OWNER">
            <summary>
            Имя таблицы для хранения периодических реквизитов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDictionary._DEFAULT_GROUP_FORM_NAME">
            <summary>
            Имя основной формы группы
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.#ctor">
            <summary>
            Конструктор класса Справочник по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Справочник первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Справочник из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.OnGetFormName(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Имя формы элемента
            </summary>
            <param name="subType"></param>
            <returns></returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDictionary.DefaultGroupFormName">
            <summary>
            Имя формы элемента, открываемая по-умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDictionary.Parent">
            <summary>
            Получение и установка родителя для данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDictionary.Owner">
            <summary>
            Получение и установка владельца для данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDictionary.IsFolder">
            <summary>
            Возвращает признак является ли элемент группой
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDictionary.Level">
            <summary>
            Возвращает уровень.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDictionary.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataDictionary.IsPredefined">
            <summary>
            Признак того, что данный элемент справочника является предопределенным
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.IsInGroup(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод проверки вхождения данного объекта в заданную группу
            </summary>
            <param name="group">Объект, который является группой</param>
            <returns>True, если объект входит в группу </returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.GetOwnersHierarchy(NsgSoft.DataObjects.NsgMultipleObject[],NsgSoft.DataObjects.NsgSorting)">
            <summary>
             Метод получения иерархии для заданных объектов
            </summary>
            <param name="targetObjects">Объекты для которых необходимо получить иерархию</param>
            <param name="orderNames">Параметры сортировки, по которой упорядочивается иерархия</param>
            <returns>Объекты в упорядоченном виде</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.BeforePostObjects(NsgSoft.DataObjects.NsgMultipleObject[])">
            <summary>
            Метод вызывается перед сохранением объекта и связанных объектов.
             Дает возможность провести какие-либо действия с объектами до сохранения.
             В список аргументов метода может входить и текущий объект.
            </summary>
            <param name="objects">Список объектов на сохранение.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.AfterPostAllObjects">
            <summary>
            Метод вызывается после сохранения объекта и всех связанных объектов.
             Дает возможность провести какие-либо действия после сохранения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.parent_ValueChanged(System.Object,NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Метод обработки изменения значения в объекте.
            </summary>
            <param name="sender">Источник.</param>
            <param name="arg">Параметры.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.GetSubTypesForAdding">
            <summary>
            Метод получения списка групп доступных для добавления в объект типов.
            </summary>
            <returns>Список групп.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.GetTypesForAdding(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Метод получения списка доступных для добавления в объект типов по группе.
            </summary>
            <param name="group">Тип группы.</param>
            <returns>Список типов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.FillNumber">
            <summary>
            Метод заполнения уникального номера справочника.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.CreateDefaultFields">
            <summary>
            Добавление рекомендованных реквизитов при создании из Конфигуратора
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.GetArray(System.Int32)">
            <summary>
            Метод получения массива пустых справочников.
            </summary>
            <param name="count">Количество получаемых объектов.</param>
            <returns>Массив пустых объектов заданного типа.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.Select(NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Метод получения курсора на выборку документов.
            </summary>
            <param name="comp">Объект сравнения.</param>
            <param name="sort">Объект сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.Select(NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Метод получения курсора на выборку документов.
            </summary>
            <param name="comp">Объект сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.Select(NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Метод получения курсора на выборку документов.
            </summary>
            <param name="comp">Объект сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.GetNewCursor">
            <summary>
            Метод получения курсора на выборку документов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.GetNewVirtualCursor(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Метод получения курсора на выборку документов.
            </summary>
            <param name="owner">Владелец подчиненного справочника.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.GetNewVirtualCursor">
            <summary>
            Метод получения курсора на выборку документов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.Delete(NsgSoft.DataObjects.NsgDataDictionary[])">
            <summary>
            Метод массового удаления элементов справочника
            </summary>
            <param name="array">Массив элементов, подлежащих удалению</param>
            <remarks>Данный метод следует использовать крайне осторожно, т.к. его исполнение может нарушить ссылочную целостность базы данных.
            В большинстве случаев, следует использовать метод пометки объекта на удаление SetDeleteMark(), а непосредственное удаление объектов из базы данных
            производить с помощью предназначенной для этого формы в интерактивном режиме.</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.NewFolder">
            <summary>
            Создает новый объект - группу справочника.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Запись атрибутов данного объекта в XML.
            Метод используется при записи конфигурации.
            </summary>
            <param name="elem">XmlElement, в который производится запись.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Чтение атрибутов объекта из XML.
            Метод используется при записи конфигурации.
            </summary>
            <param name="elem">XmlElement, из которого будут считываться атрибуты объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataDictionary.Find(System.Boolean,NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Метод поиска в БД по одному и более реквизитов c заполнением текущего объекта.
            </summary>
            <remarks>
            Результатом является первая попавшаяся строка, удовлетворяющая
             критериям поиска. Заполняет текущий объект в случае удачного поиска.
            </remarks>
            <param name="isFull">Флаг поиска по полному совпадению. Если true - то полное
             соответствие (быстрый поиск), если false - то частичное (медленный поиск).</param>
            <param name="compare">Дополнительные параметры запроса.</param>
            <returns>Возвращает true при удачном поиске и false в противном случае.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgReference">
            <summary>
            Класс простого элемента данных - Ссылка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgReference.ROOTGROUP">
            <summary>
            Любая группа.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgReference.ROOTNAME">
            <summary>
            Любое имя.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgReference._REFERENT_GROUP">
            <summary>
            Группа объекта, на который идет ссылка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgReference._REFERENT_NAME">
            <summary>
            Имя объекта, на который идет ссылка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgReference._OWNER_NAME">
            <summary>
            Поле того же MultipleObject, которое является владельцем относительно данного поля.
             Например, для поля РасчетныйСчет - Контрагент.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgReference._ALLOW_EMPTY_OWNER">
            <summary>
            Если задано в true, то выбой ссылки из подчиненного справочника будет разрешен
            даже если владелец (см. _OWNER_NAME) не задан.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.#ctor">
            <summary>
            Конструктор класса Ссылка по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.#ctor(System.String)">
            <summary>
            Конструктор класса Ссылка.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Ссылка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReference.ExpandableObject">
            <summary>
            Возвращает референта если этот объект требуется редактировать в дереве
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.ReferentType">
            <summary>
            Возвращает NSG-тип референта напрямую из метаданных, не вызывает клонирования и запросов в базу данных
            </summary>
            <returns>NSG-тип</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReference.ReferentFullName">
            <summary>
            Полное имя объекта на который указывает ссылка
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReference.ReferentGroup">
            <summary>
            Получение и установка объекта ссылки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReference.ReferentName">
            <summary>
            Получение и установка объекта ссылки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReference.Referent">
            <summary>
            NsgReferencedObject, на который ссылается данный объект
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.referent_ValueChanged(System.Object,NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Обработка события изменения значения у Referent
            </summary>
            <param name="sender">Объект, вызвавший событие</param>
            <param name="arg">Параметры</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReference.SaveInDatabase">
            <summary>
            Признак, хранится ли данное поле в БД или является виртуальным
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReference.OwnerName">
            <summary>
            Получение и установка свойства-владельца.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReference.AllowEmptyOwner">
            <summary>
            Разрешить выбор элемента подчиненного справочника без установленного владельца.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReference.RefID">
            <summary>
            Возвращает Guid объекта, на который ссылается данный reference
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReference.Selected">
            <summary>
            Возвращает true, если объект спозиционирован на конкретный объект БД
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgReference.ReferentSelected">
            <summary>
            Возвращает true, если ссылочный объект загружен, иначе false.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.Validate">
            <summary>
            Метод проверки значения реквизита
            </summary>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.GetCurrentUserCompare">
            <summary>
            Метод получения фильтра по референту для текущего пользователя.
            </summary>
            <returns>Возвращает фильтр на данный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.SetReferent(NsgSoft.DataObjects.NsgReferencedObject)">
            <summary>
            Установить в качестве Referent переданный MultipleObject
            </summary>
            <param name="mo">MultipleObject</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgReference.CopyProperies(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Копирует значения свойств из переданного объекта.
            </summary>
            <param name="from">объект из которого копировать</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataRegister">
            <summary>
            Класс сложного элемента данных - Регистр.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataRegister._REGISTER_TYPE">
            <summary>
            Тип регистра (остатки, обороты или вместе).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataRegister._ACCUM_TABLE_LIST">
            <summary>
            Список таблиц остатков.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataRegister._CIRCULATE_TABLE_LIST">
            <summary>
            Список таблиц оборотов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataRegister._QUANTITY_NAME">
            <summary>
            Имя измерения распределяемого количества
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataRegister._HANDLING_WARNINGS">
            <summary>
            Флаг комментирования проведения
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataRegister.MinNotActualDate">
            <summary>
            Минимальная дата неактуальности итогов регистра
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.#ctor">
            <summary>
            Конструктор класса Регистр по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Регистр первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.#ctor(NsgSoft.DataObjects.NsgDataDocument)">
            <summary>
            Конструктор класса Регистр для документа
            </summary>
            <param name="doc"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Регистр из XML.
            </summary>
            <param name="elem">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.AccumTableList">
            <summary>
            Список таблиц остатков.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.CirculatTableList">
            <summary>
            Список таблиц оборотов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.AccumTableCount">
            <summary>
            Количество таблиц накоплений, объявленных у регистра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.CirculatTableCount">
            <summary>
            Количество таблиц оборотов, объявленных к регистра
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.SearchFieldName">
            <summary>
            Имя поля, по которому по-умолчанию осуществляется подбор в полях ввода
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.RegisterType">
            <summary>
            тип регистра (остатки, обороты или вместе
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.QuantityName">
            <summary>
            Имя измерения распределяемого количества
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.HandlingWarnings">
            <summary>
            Флаг комментирования проведения
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.AllowNegativeRests">
            <summary>
            Разрешение отрицательного остатка при списании
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.HandlingCompare">
            <summary>
            Условие на проведение строки, если не выполняется строка будет пропущена
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.HandlingErrorCompare">
            <summary>
            Условие на проведение строки, если не выполняется будет выдана ошибка
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.HandlingWarningCompare">
            <summary>
            Условие на проведение строки, если не выполняется будет выдано предупреждение
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.OnBeforeHandle(NsgSoft.DataObjects.NsgRegisterMovement)">
            <summary>
            Вызывается перед проведение с использованием NsgRegisterMovement, в нем, в часности, можно проставить дополнительные регистры
            </summary>
            <example>Например, для регистра ОстаткиНоменклатуры это регистр Резервов, значения которого должны уменьшить остатки</example>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.Dimension">
            <summary>
            Список измерений регистра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.DimensionNames">
            <summary>
            Список имен ресурсов регистра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.Resource">
            <summary>
            Список ресурсов регистра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.ResourceNames">
            <summary>
            Список имен ресурсов регистра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.Property">
            <summary>
            Список свойств регистра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.PropertyNames">
            <summary>
            Список имен свойств регистра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.Value">
            <summary>
            Значение. Для регистра смысла не имеет.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.ObjectState">
            <summary>
            Получение и установка текущего состояния объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.Document">
            <summary>
            Получение / установка документа, вызвавшего движение
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.Sign">
            <summary>
            Получение / установка документа, вызвавшего движение
            "+1" - Приход; "-1" - Расход
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataRegister.DateTime">
            <summary>
            Получение / установка момента времени данного движения
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.OnAfterInsertInObjectList">
            <summary>
            Метод вызывается после вставки объекта в ObjectList
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.OnAfterRemoveFromObjectList(NsgSoft.DataObjects.INsgDataObjectList)">
            <summary>
            Метод вызывается после удаления объекта из ObjectList
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.createTables">
            <summary>
            Метод создает вспомогательные таблицы для регистра
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetInitializeCode(System.String)">
            <summary>
            Возвращает С# код для инициализации объектов
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.CheckPredefinedFields">
            <summary>
            Проверяет наличие необходимых предопределенных полей, 
            создает недостающие, удаляет лишние
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.FillMovementTable">
            <summary>
            Создание вспомогательной таблицы движений
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.FillTables">
            <summary>
            Заполнение вспомогательных таблиц
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.ConnectAdditionalTables">
            <summary>
            Подключение вспомогательных таблиц к переменным регистра.
            Используется при загрузке.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.CreateAdditionalAttributes">
            <summary>
            Создает необходимые сервисные таблицы, если их еще нет или производит их рестуктуризацию
            в соответствии с набором полей в ObjectList
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetReference(System.String)">
            <summary>
            Возвращает новую ссылку NsgDataTypedReference на данный объект
            </summary>
            <param name="Name">Имя ссылки</param>
            <returns>Новая ссылка на текущий объект</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.FindOptimalParams(System.DateTime,System.DateTime)">
            <summary>
            Метод поиска оптимальной таблицы(для вычисления остатков)
            </summary>
            <param name="dateTime">Дата</param>
            <param name="actualPoint">Точка актуальности.</param>
            <returns>Имя таблицы</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetRest">
            <summary>
            По заполненным измерениям регистра возвращает остатки на актуальную дату.
            Полученные результаты помещает в ресурсы регистра
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetRest(System.DateTime)">
            <summary>
            По заполненным измерениям регистра возвращает остатки.
            Полученные результаты помещает в ресурсы регистра
            </summary>
            <param name="dateTime"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetRests(System.String[])">
            <summary>
            По заполненным измерениям и свойствам регистра возвращает актуальные остатки
            и перечисленные в resultDimensions измерения, по остальным измерениям происходит 
            свертка.
            Полученные результаты помещает в возвращаемую таблицу.
            </summary>
            <param name="resultDimensions">Измерения которые необходимо вернуть в результате.</param>
            <remarks>Если resultDimensions == null или пустой массив, то возвращает все измерения регистра.</remarks>
            <returns>NsgMemoryTable содержащая остатки и перечисленные в resultDimensions измерения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetRests(System.DateTime,System.String[])">
            <summary>
            По заполненным измерениям и свойствам регистра возвращает остатки на дату dateTime
            и перечисленные в resultDimensions измерения, по остальным измерениям происходит 
            свертка.
            Полученные результаты помещает в возвращаемую таблицу.
            </summary>
            <param name="dateTime">Дата на которую необходимо получить остатки.</param>
            <param name="resultDimensions">Измерения которые необходимо вернуть в результате.</param>
            <remarks>Если resultDimensions == null или пустой массив, то возвращает все измерения регистра.</remarks>
            <returns>NsgMemoryTable содержащая остатки и перечисленные в resultDimensions измерения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetRests(NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Возвращает актуальные остатки по условию compare
            и перечисленные в resultDimensions измерения, по остальным измерениям происходит 
            свертка.
            Полученные результаты помещает в возвращаемую таблицу.
            </summary>
            <param name="compare">Содержит параметры в соответствии с которыми будут запрошены остатки.</param>
            <param name="resultDimensions">Измерения которые необходимо вернуть в результате.</param>
            <remarks>Если resultDimensions == null или пустой массив, то возвращает все измерения регистра.
            Если compare == null то условие накладывается по измененным измерениям и свойствам.</remarks>
            <returns>NsgMemoryTable содержащая остатки и перечисленные в resultDimensions измерения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetRests(System.DateTime,NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Возвращает актуальные остатки по условию compare
            и перечисленные в resultDimensions измерения, по остальным измерениям происходит 
            /// свертка.
            Полученные результаты помещает в возвращаемую таблицу.
            </summary>
            <param name="dateTime">Дата на которую запрашиваются остатки.</param>
            <param name="compare">Содержит параметры в соответствии с которыми будут запрошены остатки.</param>
            <param name="resultDimensions">Измерения которые необходимо вернуть в результате.</param>
            <remarks>Если resultDimensions == null или пустой массив, то возвращает все измерения регистра.
            Если compare == null то условие накладывается по измененным измерениям и свойствам.</remarks>
            <returns>NsgMemoryTable содержащая остатки и перечисленные в resultDimensions измерения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetRests(System.DateTime,System.String[],NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Возвращает актуальные остатки по условию compare
            и перечисленные в resultDimensions измерения, по остальным измерениям происходит 
            /// свертка.
            Полученные результаты помещает в возвращаемую таблицу.
            </summary>
            <param name="dateTime">Дата на которую запрашиваются остатки.</param>
            /// <param name="refTablenames">Ссылочные поля для дочитывания</param>
            <param name="compare">Содержит параметры в соответствии с которыми будут запрошены остатки.</param>
            <param name="resultDimensions">Измерения которые необходимо вернуть в результате.</param>
            <remarks>Если resultDimensions == null или пустой массив, то возвращает все измерения регистра.
            Если compare == null то условие накладывается по измененным измерениям и свойствам.</remarks>
            <returns>NsgMemoryTable содержащая остатки и перечисленные в resultDimensions измерения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetEmptyRestsMemoryTable(System.String[])">
            <summary>
            Получение пустой MemoryTable для записи в нее полученных остатков.
            </summary>
            <param name="fields">Список полей.</param>
            <returns>Возвращает MemoryTable.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetCirculate(System.DateTime,System.DateTime,NsgSoft.DataObjects.NsgCompare,System.String[])">
            <summary>
            Метод получения оборотов, с получением всех результатов (начальные и конечные остатки, приход, расход),
            в разрезе всех измерений.
            </summary>
            <param name="start">начало периода</param>
            <param name="end">конец периода</param>
            <param name="compare">условия выборки остатков</param>
            <param name="resultDimensions">массив измерений которые необходимо получить, по 
            остальным измерениям произойдет группировка</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetCirculate(System.DateTime,System.DateTime,System.TimeSpan,NsgSoft.DataObjects.NsgCompare,NsgSoft.Common.NsgRegisterResult,System.String[])">
            <summary>
            Метод получения оборотов 
            </summary>
            <param name="start">начало периода</param>
            <param name="end">конец периода</param>
            <param name="interval">интервал времени через который получать данные</param>
            <param name="compare">условия выборки остатков</param>
            <param name="needResult">необходимые результаты</param>
            <param name="resultDimensions">массив измерений которые необходимо получить, по 
            остальным измерениям произойдет группировка</param>
            <returns>NsgMemoryTable с результатами выборки</returns>
            <remarks>Если compare == null, то условием выборки будут измененные реквизиты и свойства.</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetCirculate(System.DateTime,System.DateTime,System.TimeSpan,NsgSoft.DataObjects.NsgCompare,NsgSoft.Common.NsgRegisterResult,System.String[],System.String[])">
            <summary>
            Метод получения оборотов 
            </summary>
            <param name="start">начало периода</param>
            <param name="end">конец периода</param>
            <param name="interval">интервал времени через который получать данные</param>
            <param name="compare">условия выборки остатков</param>
            <param name="needResult">необходимые результаты</param>
            <param name="refTblNames">Таблицы для дочитывания</param>
            <param name="resultDimensions">массив измерений которые необходимо получить, по 
            остальным измерениям произойдет группировка</param>
            <returns>NsgMemoryTable с результатами выборки</returns>
            <remarks>Если compare == null, то условием выборки будут измененные реквизиты и свойства.</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetCirculate(System.DateTime,System.DateTime,NsgSoft.Common.NsgPeriod,NsgSoft.DataObjects.NsgCompare,NsgSoft.Common.NsgRegisterResult,System.String[])">
            <summary>
            Метод получения оборотов 
            </summary>
            <param name="start">начало периода</param>
            <param name="end">конец периода</param>
            <param name="periodType">Вид периодичности</param>
            <param name="compare">условия выборки остатков</param>
            <param name="needResult">необходимые результаты</param>
            <param name="resultDimensions">массив измерений которые необходимо получить, по 
            остальным измерениям произойдет группировка</param>
            <returns>NsgMemoryTable с результатами выборки</returns>
            <remarks>Если compare == null, то условием выборки будут измененные реквизиты и свойства.</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetCirculate(System.DateTime,System.DateTime,NsgSoft.Common.NsgPeriod,NsgSoft.DataObjects.NsgCompare,NsgSoft.Common.NsgRegisterResult,System.String[],System.String[])">
            <summary>
            Метод получения оборотов 
            </summary>
            <param name="start">начало периода</param>
            <param name="end">конец периода</param>
            <param name="periodType">Вид периодичности</param>
            <param name="compare">условия выборки остатков</param>
            <param name="needResult">необходимые результаты</param>
            <param name="refTblNames">Таблицы для дочитывания</param>
            <param name="resultDimensions">массив измерений которые необходимо получить, по 
            остальным измерениям произойдет группировка</param>
            <returns>NsgMemoryTable с результатами выборки</returns>
            <remarks>Если compare == null, то условием выборки будут измененные реквизиты и свойства.</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetCirculate(System.DateTime,System.DateTime,NsgSoft.Common.NsgPeriod,System.Int32,NsgSoft.DataObjects.NsgCompare,NsgSoft.Common.NsgRegisterResult,System.String[],System.String[])">
            <summary>
            Метод получения оборотов 
            </summary>
            <param name="start">начало периода</param>
            <param name="end">конец периода</param>
            <param name="periodType">Вид периодичности</param>
            <param name="periodCount">Количество периодов</param>
            <param name="compare">условия выборки остатков</param>
            <param name="needResult">необходимые результаты</param>
            <param name="refTblNames">Таблицы для дочитывания</param>
            <param name="resultDimensions">массив измерений которые необходимо получить, по 
            остальным измерениям произойдет группировка</param>
            <returns>NsgMemoryTable с результатами выборки</returns>
            <remarks>Если compare == null, то условием выборки будут измененные реквизиты и свойства.</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetCirculate(System.DateTime,System.DateTime,NsgSoft.DataObjects.NsgCompare,NsgSoft.Common.NsgRegisterResult,System.String[])">
            <summary>
            Метод получения оборотов 
            </summary>
            <param name="start">начало периода</param>
            <param name="end">конец периода</param>
            <param name="compare">условия выборки остатков</param>
            <param name="needResult">необходимые результаты</param>
            <param name="resultDimensions">массив измерений которые необходимо получить, по 
            остальным измерениям произойдет группировка</param>
            <returns>NsgMemoryTable с результатами выборки</returns>
            <remarks>Если compare == null, то условием выборки будут измененные реквизиты и свойства.</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetCirculate(System.DateTime,System.DateTime,NsgSoft.DataObjects.NsgCompare,NsgSoft.Common.NsgRegisterResult,System.String[],System.String[])">
            <summary>
            Метод получения оборотов 
            </summary>
            <param name="start">начало периода</param>
            <param name="end">конец периода</param>
            <param name="compare">условия выборки остатков</param>
            <param name="needResult">необходимые результаты</param>
            <param name="refTblNames">Таблицы для дочитывания</param>
            <param name="resultDimensions">массив измерений которые необходимо получить, по 
            остальным измерениям произойдет группировка</param>
            <returns>NsgMemoryTable с результатами выборки</returns>
            <remarks>Если compare == null, то условием выборки будут измененные реквизиты и свойства.</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetCirculate(System.DateTime,System.DateTime,NsgSoft.Common.NsgPeriod,System.Int32,System.TimeSpan,NsgSoft.DataObjects.NsgCompare,NsgSoft.Common.NsgRegisterResult,System.String[],System.String[])">
            <summary>
            Метод получения оборотов 
            </summary>
            <param name="start">начало периода</param>
            <param name="end">конец периода</param>
            <param name="periodType">Вид периодичности</param>
            <param name="periodCount">Количество периодов</param>
            <param name="interval">интервал времени через который получать данные</param>
            <param name="compare">условия выборки остатков</param>
            <param name="needResult">необходимые результаты</param>
            <param name="refTblNames">Таблицы для дочитывания</param>
            <param name="resultDimensions">массив измерений которые необходимо получить, по 
            остальным измерениям произойдет группировка</param>
            <returns>NsgMemoryTable с результатами выборки</returns>
            <remarks>Если compare == null, то условием выборки будут измененные реквизиты и свойства.</remarks>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.onlyDimensions(System.String[],System.String@)">
            <summary>
            Проверяет только ли измерения содержатся в массиве
            </summary>
            <param name="resultDimensions">Проверяемый массив</param>
            <param name="errorField">Имя неподходящего поля</param>
            <returns>true если в массиве только измерения, false иначе.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetEmptyCirculateMemoryTable(System.Collections.Generic.List{System.String})">
            <summary>
            Создает таблицу по регистру для получения оборотов.
            </summary>
            <returns>Пустая таблица с соответствующими полями.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.OnFillNegativeRests(NsgSoft.DataObjects.NsgRegisterMovement,NsgSoft.DataObjects.NsgMemoryTableRow)">
            <summary>
            Заполнение строки с отрицательными остатками при проведении движения
            </summary>
            <param name="sender">Объект проведения</param>
            <param name="row">Сформированная строка движений по регистру</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.OnProcessRow(NsgSoft.DataObjects.NsgRegisterMovement,NsgSoft.DataObjects.INsgDataTableRow,System.Collections.Generic.List{NsgSoft.DataObjects.NsgMemoryTableRow})">
            <summary>
            Дополнительная обработка сформированных для проведения строк
            </summary>
            <param name="sender">Объект проведения</param>
            <param name="row">Строка документа, по которой делаются движения</param>
            <param name="rows">Сформированные строки движений по регистру</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.ClearRequisits">
            <summary>
            Метод сброса значений реквизитов
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetTypesForAdding(NsgSoft.Common.NsgRekvisitSubType)">
            <summary>
            Метод получения списка доступных для добавления в объект типов по группе.
            </summary>
            <param name="group">Тип группы.</param>
            <returns>Список типов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetSubTypesForAdding">
            <summary>
            Метод получения списка групп доступных для добавления в объект типов.
            </summary>
            <returns>Список групп.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.BasePost">
            <summary>
            Запись объекта в базу
            </summary>
            <returns>True, если запись завершилась успешно</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetAllFields">
            <summary>
            Метод получения обобщенного описания реквизитов объекта
            </summary>
            <param name="query">Тип запроса.</param>
            <returns>Список необходимых для запроса полей.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.AddMovement">
            <summary>
            Добавить движение. Данные берутся из текущего объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.AddMovement(NsgSoft.DataObjects.NsgDataRegister)">
            <summary>
            Добавить движение. Данные берутся из указанного объекта.
            </summary>
            <param name="reg">Объект с данными по движению.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.New">
            <summary>
            Метод создания новой строки объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.DeleteAllMovement">
            <summary>
            Удаляет все строки из всех сервисных таблиц регистра в памяти
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.DeleteMovements(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Удаление движений, сделанных документом в регистре
            </summary>
            <param name="nsgDataDocument">Документ, выполнивший движения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.Lock">
            <summary>
            Метод установки блокировки объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.LockWithWait">
            <summary>
            Метод установки блокировки объекта с ожиданием объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.UnLock">
            <summary>
            Метод снятия блокировки с объекта
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetActualPoint">
            <summary>
            Метод получения точки актуальности(т.е. ближайший срез)
            </summary>
            <returns>Дата актуальных остатков</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.OnBeforeCalcRests(NsgSoft.DataObjects.NsgRegisterMovement,NsgSoft.DataObjects.NsgCompare,System.Collections.Generic.List{System.String})">
            <summary>
            Вызывается перед получением остатков по регистру при проведении с использованием NsgRegisterMovement
            </summary>
            <param name="sender">Объект проведения</param>
            <param name="compare">Условие для получения остатков</param>
            <param name="restResults">Список реувизитов группировки результатов запроса</param>
            <returns>True - можно выполнять запрос остатков, False - запрос остатков выполняться не будет</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.OnAfterCalcRests(NsgSoft.DataObjects.NsgRegisterMovement)">
            <summary>
            Вызывается после получения остатков по регистру при проведении с использованием NsgRegisterMovement
            </summary>
            <param name="sender">Объект проведения</param>
            <param name="restResults">Список реувизитов группировки результатов запроса</param>
            <returns>True - можно выполнять запрос остатков, False - запрос остатков выполняться не будет</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.SetRekvisitInDatabase(System.String,System.Object,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Заполнение реквизитов в базе данных
            </summary>
            <param name="destinationName">имя заполняемого реквизита</param>
            <param name="value">значение</param>
            <param name="compare">условие</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.CopyRekvisitInDatabase(System.String,System.String,NsgSoft.DataObjects.NsgCompare,NsgSoft.DataObjects.NsgTransaction)">
            <summary>
            Копирование реквизитов в базе данных
            </summary>
            <param name="sourceName">имя реквизита источника</param>
            <param name="destinationName">имя заполняемого реквизита</param>
            <param name="compare">условие</param>
            <param name="transaction">транзакция</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetDateCheckingRestsForNsgRegisterMovement(System.DateTime)">
            <summary>
            Возвращает дату дла проверки остатков. Например, дату документа, конец дня или максимальную дату.
            </summary>
            <param name="docDate">Дата документа, для которого будут проверяться остатки</param>
            <returns>Дата, на которую будут проверяться остатки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetRestsCompare(NsgSoft.DataObjects.NsgDataRegister,NsgSoft.Common.NsgRenameTable,System.Collections.Generic.List{System.String},System.Boolean,NsgSoft.DataObjects.INsgTable,NsgSoft.DataObjects.HandlingParams,System.String)">
            <summary>
            Запрос условия для накладывания при запросе остатков при автоматическом проведении с помощью NsgRegisterMovement
            </summary>
            <param name="register">Регистр с заполненными полями для составления условия</param>
            <param name="renameTable">Таблица периименований</param>
            <returns>Составленное условие. Есле null, то условие будет составлено объектом NsgRegisterMovement автоматически</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataRegister.GetRestsForRow(NsgSoft.DataObjects.INsgDataTableRow)">
            <summary>
            Возвращает остатки из таблицы остатков для строки исходной таблицы при автоматическом проведении с помощью NsgRegisterMovement
            </summary>
            <param name="row">Строка исходной таблицы</param>
            <returns>Сстатки</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataString">
            <summary>
            Класс простого элемента данных - Строка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataString._LENGTH">
            <summary>
            Длина строки в символах.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.#ctor">
            <summary>
            Конструктор класса Строка по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.#ctor(System.String)">
            <summary>
            Конструктор класса Строка по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Строка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.#ctor(System.String,System.Int32)">
            <summary>
            Конструктор класса Строка.
            </summary>
            <param name="name">Имя логического объекта Строка.</param>
            <param name="inLength">Длина строки в символах.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Строка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataString.Length">
            <summary>
            Получение и установка длины строки в символах.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataString.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataString.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.Validate">
            <summary>
            Метод проверки значения реквизита
            </summary>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.ToColumns">
            <summary>
            TODO: Comment
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.FromDBField(NsgSoft.Database.NsgDBField)">
            <summary>
            TODO: Comment
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.GetDescriptor">
            <summary>
            Метод получения описателя для объекта.
            </summary>
            <returns>Возвращает описатель объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.ToDBField">
            <summary>
            Метод преобразования объекта к полю базы данных.
            </summary>
            <returns>Список заполненных полей БД.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataString.Compare(System.Object)">
            <summary>
            Сравнение объекта с переданным объектом.
            </summary>
            <param name="obj">Объект с которым прорисходит сравнение.</param>
            <returns>Возвращает меньше ноля, если this меньше obj,
             ноль, если this равен obj,
             больше ноля, если this больше obj.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataTable">
            <summary>
            Класс сложного элемента данных - Таблица.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataTable._REGISTER_PERIOD">
            <summary>
            Задает периодичность хранения итогов, если это вспомогательная таблица регистра.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataTable._REGISTER_PERIOD_COUNT">
            <summary>
            Задает количество дней, если периодичность хранения итогов задана в днях.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataTable._OWNER_FULLNAME">
            <summary>
            Задает имя объекта владельца табличной части.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.#ctor">
            <summary>
            Конструктор класса Таблица по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Таблица первого уровня.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="group">Имя группы объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор класса Таблица из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.Finalize">
            <summary>
            Деструктор класса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTable.OwnerFullName">
            <summary>
            Получение и установка имени владельца для данной таблицы
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTable.RegisterPeriod">
            <summary>
            Задает периодичность хранения итогов, если это вспомогательная таблица регистра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTable.RegisterPeriodCount">
            <summary>
            Задает количество дней, если периодичность хранения итогов задана в днях.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTable.TableSubType">
            <summary>
            Определяет подтип таблицы. Если None - просто табличная часть или таблица движений регистра,
             иначе - это специализированная таблица регистра (остатков или оборотов)
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTable.Value">
            <summary>
            Значение. Для таблицы смысла не имеет. Имеет смысл для строк таблицы
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.CreatePreDefinedFields">
            <summary>
            Метод создания предопределенных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.GetLogicType">
            <summary>
            Возвращает лочичесокий тип объекта 
            </summary>
            <returns>Лочичесокий тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.PostTable">
            <summary>
            Метод изменения таблицы в базе как сложного объекта (без строк).
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.Edit(System.String[])">
            <summary>
            Метод редактирования строки объекта.
            </summary>
            <param name="readReferents">Список ссылок для дочитывания.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.NewCopy">
            <summary>
            Метод создания новой таблицы с копированными строками.
            </summary>
            <returns>Возвращает новую копию.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.NewTable">
            <summary>
            Метод переключения таблицы в состояние New, включая все строки,
             с сохранением данных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.BasePost">
            <summary>
            Метод изменения объекта в базе. Использует внешнюю транзакцию.
            </summary>
            <returns>Возвращает true при удачном изменении, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.LoadFromDatabase(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgCompare)">
            <summary>
            Загружает все строки из базы данных
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.DeleteMovements(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод удаления строк табличной части 
            </summary>
            <param name="owner">Владелец табличной части</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.ToString">
            <summary>
            Метод получения строкового представления объекта.
            </summary>
            <returns>Стока представления.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.internalCollapse(System.String[],System.String[])">
            <summary>
            Функция, выполняющая сворачивание таблицы. Для внутреннего использования.
            </summary>
            <param name="collapsedFields">Список полей через запятую по которым производится сворачивание</param>
            <param name="sumFields">Список полей через запятую по которым производится суммирование</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.Collapse(System.String[],System.String[])">
            <summary>
            Сворачивание таблицы по указанным полям, при этом производится суммирование.
            </summary>
            <param name="collapsedFields">Список полей через запятую по которым производится сворачивание</param>
            <param name="sumFields">Список полей через запятую по которым производится суммирование</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.DeleteColumn(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Метод удаления колонки таблицу
            </summary>
            <param name="simpleObject">Образец удаляемого объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.Join(NsgSoft.DataObjects.NsgMemoryTable,System.String[],System.String[])">
            <summary>
            Объединение таблиц.
            Добавляются строки из переданной таблицы. Аналогичен LEFT JOIN в SQL
            </summary>
            <param name="table">Таблица с добавляемыми данными</param>
            <param name="findFieldNames">Имена полей через запятую, по кототрым будет проводится объединение</param>
            <param name="addFieldNames">Имена полей через запятую, которые будут перенесены из добавляемой таблицы.
                                     При совпадении имен, данные будут замещены.
            </param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTable.Join(NsgSoft.DataObjects.NsgDataTable,System.String[],System.String[])">
            <summary>
            Объединение таблиц.
            Добавляются строки из переданной таблицы. Аналогичен LEFT JOIN в SQL
            </summary>
            <param name="table">Таблица с добавляемыми данными</param>
            <param name="findFieldNames">Имена полей через запятую, по кототрым будет проводится объединение</param>
            <param name="addFieldNames">Имена полей через запятую, которые будут перенесены из добавляемой таблицы.
                                     При совпадении имен, данные будут замещены.
            </param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataTypes">
            <summary>
            Перечисление доступных в сборке типов объектов данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataTypes.SimpleObject">
            <summary>
            Простой объект.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataTypes.MultipleObject">
            <summary>
            Сложный объект.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataTypes.AbstractObject">
            <summary>
            Абстрактный объект.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataTypeAttribute">
            <summary>
            Класс атрибута типа данных. Исползуется только для типов. 
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTypeAttribute.CurrentType">
            <summary>
            Получение значения текущего типа для класса.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataTypedReference">
            <summary>
            Класс простого элемента данных - Типизированная Ссылка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataTypedReference._NEED_INIT">
            <summary>
            Устанавливается только функцией GetReference у MultipleObject,
             показывает что объект только что создан и требует инициализации,
             например, для RegisterTable требуется создать системную DataTable для регистра.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.#ctor">
            <summary>
            Конструктор класса Ссылка по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.#ctor(System.String)">
            <summary>
            Конструктор класса Ссылка по умолчанию.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса Ссылка по полному имени объекта для ссылки.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
            <param name="inReferentFullName">Полное имя объекта для ссылки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Ссылка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTypedReference.NullValue">
            <summary>
            Пустое значение объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTypedReference.NeedInit">
            <summary>
            Устанавливается только функцией GetReference у MultipleObject,
             показывает что объект только что создан и требует инициализации,
             например, для RegisterTable требуется создать системную DataTable для регистра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTypedReference.CanBeUsedInPredefined">
            <summary>
            Флаг возможности использования данного реквизита в предопределенных значениях.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTypedReference.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTypedReference.RefID">
            <summary>
            Возвращает Guid объекта, на который ссылается данный reference
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTypedReference.Value">
            <summary>
            Получение и установка значения.
            В качестве значения может быть только Guid или null
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataTypedReference.Selected">
            <summary>
            Возвращает true, если объект спозиционирован на конкретный объект БД
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.RenameReference">
            <summary>
            !!! Используется при автоматическом создании объектов в системной группе !!!
            Переименовывает объект в системной группе в соответствии с именем ссылающегося объекта и реквизита.
            Используется в табличных частях и таблицах регистров.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.ReferentFixedType">
            <summary>
            Возвращает допустимый тип референта, если задан иначе Null
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.GetDescriptor">
            <summary>
            Метод получения описателя для объекта.
            </summary>
            <returns>Возвращает описатель объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.LoadAttributes(System.Xml.XmlElement)">
            <summary>
            Метод чтения объектом своих атрибутов из XML текста.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.SaveAttributes(System.Xml.XmlElement)">
            <summary>
            Метод записи объектом своих атрибутов в XML текст.
            </summary>
            <param name="elem">Фрагмент XML документа.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataTypedReference.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgObjectsFilter">
            <summary>
            Класс фильтр объектов метаданных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectsFilter.#ctor(NsgSoft.DataObjects.NsgFiltration,System.String[])">
            <summary>
            Конструктор класса фильтра объектов.
            </summary>
            <param name="inFilterType">Тип фильтрации.</param>
            <param name="inParams">Список параметров фильтрации.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectsFilter.FiltrationType">
            <summary>
            Получение типа фильтрации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectsFilter.Parameters">
            <summary>
            Получение типа фильтрации.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectsFilter.Clear">
            <summary>
            Очистка фильтра
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectsFilter.Save(System.Configuration.ConfigXmlDocument)">
            <summary>
            Метод сохранения фильтра в XML.
            </summary>
            <param name="writer">Объект зфписи XML текста.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectsFilter.Load(System.Xml.XmlElement)">
            <summary>
            Метод загрузки фильтра из XML.
            </summary>
            <param name="writer">Объект чтения XML текста.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectsFilter.ToString">
            <summary>
            Метод приведения объекта к строке.
            </summary>
            <returns>Стороковое представление объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectsFilter.GetAvailableObjectNames(NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Метод получения всех доступных имен объектов для фильтра из метаданных.
            </summary>
            <param name="md">Метаданные.</param>
            <returns>Возвращает список объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectsFilter.GetAvailableObjects(NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Метод получения всех доступных объектов для фильтра из метаданных.
            </summary>
            <param name="md">Метаданные.</param>
            <returns>Возвращает список объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectsFilter.Clone">
            <summary>
            Метод клонирования.
            </summary>
            <returns>Возвращает клон объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectsFilter.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataUntypedReference">
            <summary>
            Класс простого элемента данных - Нетипизированная Ссылка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataUntypedReference._TYPE_SELECTOR_NAME">
            <summary>
            Поле того же MultipleObject, которое является владельцем относительно данного поля.
             Например, для поля РасчетныйСчет - Контрагент.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataUntypedReference._REFERENT_FILTER">
            <summary>
            Фильтр объектов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.#ctor">
            <summary>
            Конструктор класса Нетипизированная Ссылка по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.#ctor(System.String)">
            <summary>
            Конструктор класса Нетипизированная Ссылка по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.#ctor(System.String,NsgSoft.DataObjects.NsgObjectsFilter)">
            <summary>
            Конструктор класса Нетипизированная Ссылка.
            </summary>
            <param name="name">Имя логического объекта Ссылка.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор класса Нетипизированная Ссылка из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.ReferentTable">
            <summary>
            Имя таблицы БД объекта, на который идет ссылка.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.FullID">
            <summary>
            Полный идентификатор объекта (ID.TableName).
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.FilterTypeForConfigurator">
            <summary>
            Тип фильтра для конфигуратора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.FilterForConfigurator">
            <summary>
            Получение списка фильтров для конфигуратора
            </summary>
            [NsgView(NsgViewTypes.Configurator)]
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.ReferentName">
            <summary>
            Получение и установка объекта ссылки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.ReferentGroup">
            <summary>
            Получение и установка объекта ссылки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.Selected">
            <summary>
            Возвращает true, если объект спозиционирован на конкретный объект БД
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.Referent">
            <summary>
            Получение объекта ссылки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.TypeSelectorName">
            <summary>
            Автоматическая типизация по указанному полю.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.SetReferent(NsgSoft.DataObjects.NsgReferencedObject)">
            <summary>
            Установить в качестве Referent переданный MultipleObject
            </summary>
            <param name="mo">MultipleObject</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.RefID">
            <summary>
            Возвращает Guid объекта, на который ссылается данный reference
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.ToDBQueue(System.Collections.Generic.Queue{NsgSoft.Database.NsgDBField})">
            <summary>
            Метод добавления объекта в очередь
            </summary>
            <param name="dbQueue">Очередь</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.FromDBQueue(System.Collections.Generic.Queue{NsgSoft.Database.NsgDBField})">
            <summary>
            Метод извлечения объекта из очереди
            </summary>
            <param name="dbQueue">Очередь</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.ReferentsList">
            <summary>
            Получение списка объектов ссылки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.ReferentFilter">
            <summary>
            Метод получения фильтра для объекта в режиме Конфигуратора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.Filter">
            <summary>
            Метод получения динамического фильтра для объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataUntypedReference.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.GetDescriptor">
            <summary>
            Метод получения описателя для объекта.
            </summary>
            <returns>Возвращает описатель объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.IsFilteredIn(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод проверки вхождения объекта в условия фильтра.
            </summary>
            <param name="obj">Проверяемый объект.</param>
            <returns>Возвращает true при удачной проверке, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.LoadContent(System.Xml.XmlElement)">
            <summary>
            Метод загрузки объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.SaveContent(System.Configuration.ConfigXmlDocument)">
            <summary>
            Метод записи объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.FillRuntimeClone(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Метод заполнения пустого клона полями текущего объекта. Только для Runtime.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataUntypedReference.GetReferentsListFromProperty(System.Reflection.PropertyInfo)">
            <summary>
            Метод получения списка объектов для свойства по атрибутам.
            </summary>
            <param name="property">Свойство.</param>
            <returns>Возвращает список объектов или null.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgQuery">
            <summary>
            Класс Запрос.
            <example>
            NsgQuery query = NsgSettings.Configuration.GetMetaData().GetNewQuery();
            query.Query = "Выбрать Поставщик, Склад, КОЛИЧЕСТВО(Идентификатор) как их Из Документы.ПриходнаяНакладная " +
                " ГРУППИРОВАТЬ ПО Поставщик, Склад";
            NsgMemoryTable mt = query.Execute();
            </example>
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.sqlText">
            <summary>
            подготовленная строка запроса
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.query">
            <summary>
            исходная строка запроса
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.preQuery">
            <summary>
            предварительная строка запроса
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.postQuery">
            <summary>
            завершительная строка запроса
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.metaData">
            <summary>
            Метаданные на основе которых будет строиться выборка
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.UNIQPOSTFIX">
            <summary>
            Уникальный постфикс.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.dateInfo">
            <summary>
            Языковые настройки дат.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.PERIOD">
            <summary>
            Константа ПЕРИОД.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.END_DATE">
            <summary>
            Константа КОНЕЧНОЙ ДАТЫ.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.BEGIN_DATE">
            <summary>
            Константа НАЧАЛЬНОЙ ДАТЫ.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.sqlWords">
            <summary>
            Список соответствий пользовательских команд простым зарезервированным sql командам
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.sqlMultipleWords">
            <summary>
            Список соответствий пользовательских команд сложным зарезервированным sql командам
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.allSQLList">
            <summary>
            Список всех простых зарезервированных sql команд
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.REF">
            <summary>
            Выражение - ссылка.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgQuery.HierarchyParts">
            <summary>
            Структура хранения параметров построения иерархии в запросе.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.HierarchyParts.TempTable">
            <summary>
            Временная таблица значений.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.HierarchyParts.ONCondition">
            <summary>
            Условие объединения.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.HierarchyParts.SearchPlace">
            <summary>
            Where statement.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.HierarchyParts.#ctor(System.String,System.String,System.String)">
            <summary>
            Конструктор с инициализацией параметров.
            </summary>
            <param name="tempTable">Временная таблица значений.</param>
            <param name="oNCondition">Условие объединения.</param>
            <param name="searchPlace">Место для вставки JOIN.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts">
            <summary>
            Структура хранения параметров функции ОстаткиИОбороты в запросе.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.Goals">
            <summary>
            Перечисление целей запроса функции ОстаткиИОбороты.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.Goals.Rests">
            <summary>
            Остатки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.Goals.Circulations">
            <summary>
            Обороты.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.Source">
            <summary>
            Источник.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.Code">
            <summary>
            Исходная строка запроса.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.BeginDate">
            <summary>
            Начальная дата.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.EndDate">
            <summary>
            Конечная дата.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.Period">
            <summary>
            Период.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.Goal">
            <summary>
            Цель.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.Conditions">
            <summary>
            Условия.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.Dimensions">
            <summary>
            Измерения.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.Excluded">
            <summary>
            Список исключенных измерений.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.#ctor(NsgSoft.DataObjects.NsgMultipleObject,System.String,System.String,NsgSoft.Common.NsgPeriod,NsgSoft.DataObjects.NsgQuery.RestsAndCircParts.Goals,System.String,System.String[],System.String[],System.String)">
            <summary>
            Конструктор.
            </summary>
            <param name="source">Источник.</param>
            <param name="beginDate">Начальная дата.</param>
            <param name="endDate">Конечная дата.</param>
            <param name="period">Период.</param>
            <param name="conditions">Условия.</param>
            <param name="dimensions">Измерения.</param>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.hierarchyJoines">
            <summary>
            Список соединений для иерахии (источник,врем.таблица,условие связки)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.fieldAliases">
            <summary>
            Список псевдонимов реквизитам объектов (псевдоним,имя реквизита)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.sourceAliases">
            <summary>
            Список псевдонимов источников (имя источника, псевдоним)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.otherSourcesList">
            <summary>
            Список объектов - дополнительные источников (имя основного источника, список дополнительных)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.sourceReferenceList">
            <summary>
            Список соответствий источников полю ссылки, через которую идет связка
            (имя источника, (присоединяемый источник, список ссылок))
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.sourcesObjList">
            <summary>
            Список объектов - источников
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.fieldParent">
            <summary>
            Список соответствий ссылок источникам, на которые они ссылаются (имя поля, источник)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.sourcesDeniedList">
            <summary>
            Список имен запрещенных источников
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.parametersList">
            <summary>
            Список параметров в SQL запросе (имя параметра, строковое значение)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgQuery.restsAndCircList">
            <summary>
            Список замен функций ОстаткиИОбороты (имя временной таблицы, строка вызова функции)
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.#ctor(NsgSoft.DataObjects.NsgMetaData,System.String)">
            <summary>
            Конструктор Запроса со строкой запроса.
            </summary>
            <param name="inMetaData">Объект управления метаданными.</param>
            <param name="inQuery">Строка запроса пользователя.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.#ctor(NsgSoft.DataObjects.NsgMetaData)">
            <summary>
            Конструктор Запроса по умолчанию.
            </summary>
            <param name="inMetaData">Объект управления метаданными.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgQuery.SqlText">
            <summary>
            Подготовленная строка SQL запроса.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgQuery.Query">
            <summary>
            Исходная строка запроса пользователя.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgQuery.ParametersNames">
            <summary>
            Получение всех имен заданных для запроса параметров.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.Execute">
            <summary>
            Метод выполнения запроса в БД.
            </summary>
            <returns>Возвращает результирующую таблицу.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.delSQLFunc(System.String)">
            <summary>
            Метод удаления SQL включений.
            </summary>
            <param name="fName">Строка с SQL.</param>
            <returns>Возвращает нач.строку без SQL.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.getSimpleObjByFieldname(System.String)">
            <summary>
            Метод поиска простого объекта по списку.
            </summary>
            <param name="elemName">Имя поля БД для простого объекта.</param>
            <returns>Возвращает сростой объект, если он найден.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.createAndFillRestTempTable(NsgSoft.DataObjects.NsgQuery.RestsAndCircParts,System.DateTime,System.Boolean)">
            <summary>
            Метод создания временной таблицы.
            </summary>
            <param name="par">Параметры функции остатков.</param>
            <param name="date">Дата для запроса остатков.</param>
            <param name="isBegin">Флаг начальной даты.</param>
            <returns>Возвращает имя созданной таблицы.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.getInsertIntoStatement(System.String,System.String,System.Boolean,NsgSoft.DataObjects.NsgQuery.RestsAndCircParts)">
            <summary>
            Метод получения SQL выражения для копирования временной таблицы.
            </summary>
            <param name="mainTable">Основная таблица.</param>
            <param name="tmpTable">Копируемая таблица</param>
            <param name="isBegin">Наличие начальной даты.</param>
            <param name="par">Параметры функции остатков.</param>
            <returns>Возвращает строку выражения SQL.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.getInsertIntoJoinStatement(System.String,System.String,System.String,System.DateTime,NsgSoft.DataObjects.NsgQuery.RestsAndCircParts)">
            <summary>
            Метод получения SQL выражения для копирования временных таблиц с JOIN.
            </summary>
            <param name="mainTable">Основная таблица.</param>
            <param name="tmpTableBegin">Временная таблица начала периода.</param>
            <param name="tmpTableEnd">Временная таблица окончания периода.</param>
            <param name="beginPeriod">Дата начала периода.</param>
            <param name="par">Параметры функции остатков.</param>
            <returns>Возвращает строку выражения SQL.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.getCreateTableStatement(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,NsgSoft.DataObjects.NsgQuery.RestsAndCircParts)">
            <summary>
            Метод получения SQL выражения для создания временной таблицы.
            </summary>
            <param name="tabName">Имя таблицы.</param>
            <param name="isFinalTable">Флаг финальной таблицы.</param>
            <param name="hasBeginDate">Наличие начальной даты.</param>
            <param name="hasEndDate">Наличие конечной даты.</param>
            <param name="hasPeriod">Наличие периода.</param>
            <param name="par">Параметры функции остатков.</param>
            <returns>Возвращает строку выражения SQL.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.formatRestInc(System.String)">
            <summary>
            Метод форматирования инкремента.
            </summary>
            <param name="inc">Инкремент.</param>
            <returns>Возвращает форматированный инкремент.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.SetParameter(System.String,System.Object[])">
            <summary>
            Метод установки параметра для запроса. В случае, если такой параметр уже есть, заменяется
             его значение. Если его параметра с таким именем нет, то он добавляется.
            </summary>
            <param name="paramName">Имя параметра.</param>
            <param name="paramValues">Список значений параметра. Тип значений может быть либо простым
             (System.ValueType), либо типом из метаданных (NsgObject и его наследники).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.SetParameter(System.String,System.Object)">
            <summary>
            Метод установки параметра для запроса. В случае, если такой параметр уже есть, заменяется
             его значение. Если его параметра с таким именем нет, то он добавляется.
            </summary>
            <param name="paramName">Имя параметра.</param>
            <param name="paramValue">Значение параметра. Тип значения может быть либо простым
             (System.ValueType), либо типом из метаданных (NsgObject и его наследники).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.GetParameter(System.String)">
            <summary>
            Метод получения значение параметра запроса.
            </summary>
            <param name="paramName">Имя параметра.</param>
            <returns>Возвращает строковое представление значения параметра запроса. Если параметра с заданным именем
             не существует, возвращает null.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.Parse(System.String)">
            <summary>
            Метод преобразования запроса пользователя в SQL запрос.
            </summary>
            <param name="query">Строка запроса пользователя.</param>
            <returns>Возвращает SQL тескт.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.replaceSqlWord(System.String,System.String,System.String)">
            <summary>
            Метод замены в строке SQL выражений.
            </summary>
            <param name="query">Строка запроса для изменения.</param>
            <param name="state">Слово для замены в строке запроса.</param>
            <param name="sqlStmnt">SQL выражение для подстановки в запрос.</param>
            <returns>Изменненая строка запроса.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.replaceSQLFunctions(System.String)">
            <summary>
            Метод замены в строке всех SQL функций.
            </summary>
            <param name="source">Исходная строка.</param>
            <returns>Результирующая строка.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.fillSqlWords">
            <summary>
            Метод заполнения списка соответствий SQL команд командам пользователя.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.getSqlWord(System.String)">
            <summary>
            Метод получения SQL соответствия команде пользователя.
            </summary>
            <param name="userStatement">Команда пользователя в верхнем регистре.</param>
            <returns>Возвращает SQL команду, если такая не найдена, то null.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.unformatByTemplate(System.String)">
            <summary>
            Метод переформатирования строки запроса по шаблону.
            </summary>
            <param name="userQuery">Строка запроса.</param>
            <returns>Возвращает переформатированную строку запроса.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.unformatByTemplate(System.String,System.Boolean)">
            <summary>
            Метод переформатирования строки запроса по шаблону.
            </summary>
            <param name="userQuery">Строка запроса.</param>
            <param name="isSourceSubQuery">Флаг подзапроса в источнике.</param>
            <returns>Возвращает переформатированную строку запроса.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.isStatementValid(System.String)">
            <summary>
            Метод проверки выражение на валидность. Проверяется попадание поиска во вложенные 
             селекты.
            </summary>
            <param name="where">Строковое выражение WHERE.</param>
            <returns>Возвращает true при правильном выражении. Иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.prepareObjectsToDB(System.String[],System.String[],System.String,System.Boolean)">
            <summary>
            Метод подготовки подстроки запроса к использованию для БД, т.е. замена логических объектов на
             объекты БД.
            </summary>
            <param name="sources">Список источников</param>
            <param name="list">Список объектов замены.</param>
            <param name="matchValue">Стока для замены</param>
            <param name="canUseAliases">Флаг возможности использования псевдонимов.</param>
            <returns>Заменненая строка.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.addJoinSource(System.String,System.String)">
            <summary>
            Метод добавления источника в список JOIN'ов к основному.
            </summary>
            <param name="sourceOne">Основной источник.</param>
            <param name="addName">Присоединяемый.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.addRefToSource(System.String,System.String,System.String)">
            <summary>
            Метод добавления ссылки на источника в список ссылок присоединенных источников.
            </summary>
            <param name="source">Основной источник.</param>
            <param name="refSource">Присоединяемый источник.</param>
            <param name="reference">Ссылка для присоединения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.addToSourcesList(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод добавления сложного объекта к общему списку источников.
            </summary>
            <param name="sMo">Сложный объект метаданных.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.replaceStatement(System.String,System.String,System.String)">
            <summary>
            Метод замены выражения в части запроса.
            </summary>
            <param name="fromQueryPart">Часть SQL запроса.</param>
            <param name="oldStatement">Старое выражение.</param>
            <param name="newStatement">Новое выражение.</param>
            <returns>Возвращает результат замены.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.clearFromEntriesAndSQL(System.String)">
            <summary>
            Метод удаленения из строки всех вложенных подзапросов и SQL текста.
            </summary>
            <param name="condition">Запрос или его часть.</param>
            <returns>Результарующая строка.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgQuery.cutSelectStatement(System.String)">
            <summary>
            Метод получения первого SELECT выражения из строки запроса.
            </summary>
            <param name="result">Строка запроса или ее часть.</param>
            <returns>Строка вложенного SELECT выражения.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCompareParam">
            <summary>
            Класс параметр запроса.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCompareParam.CompareParamConverter">
            <summary>
            Конвертер типа параметра объекта сравнения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.CompareParamConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Метод получения свойств типа.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCompareParam.ComponentValueEditor">
            <summary>
            Класс редактор свойств объекта - источника для отчета.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.ComponentValueEditor.CheckComponentForAdding(System.Object,System.ComponentModel.IComponent)">
            <summary>
            Метод проверки компонентов на возможность привязки.
            </summary>
            <param name="sender">Инициатор проверки.</param>
            <param name="component">Компонент на проверку.</param>
            <returns>Возвращает true, если компонент доступен для привязки,
             иначе false.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCompareParam.ParamValueMode">
            <summary>
            Перечисление типов значения параметра.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCompareParam.ParamValueMode.Manual">
            <summary>
            Вводится вручную.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCompareParam.ParamValueMode.Component">
            <summary>
            Берется из компонента.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCompareParam.Enabled">
            <summary>
            Признак включения(выключения) условия 
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(System.String)">
            <summary>
            Конструктор класса параметр запроса сравнения на равенство значения параметра.
            </summary>
            <param name="inName">Имя параметра сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(System.String,NsgSoft.DataObjects.NsgMultipleObject,System.Object,NsgSoft.Database.NsgComparison)">
            <summary>
            Конструктор класса параметр запроса.
            </summary>
            <param name="inName">Имя параметра сравнения.</param>
            <param name="rootFullName">MultipleObject нужного типа</param>
            <param name="inParamValue">Значение параметра запроса</param>
            <param name="inCompOperator">Оператор сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(NsgSoft.DataObjects.NsgMultipleObject,System.Object,NsgSoft.Database.NsgComparison)">
            <summary>
            Конструктор класса параметр запроса.
            </summary>
            <param name="MO">Сложный объект</param>
            <param name="inParamValue">Значение</param>
            <param name="inCompOperator">Оператор сравнения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(System.String,System.Object)">
            <summary>
            Конструктор класса параметр запроса сравнения на равенство.
            </summary>
            <param name="inName">Имя параметра сравнения.</param>
            <param name="inParamValue">Значение параметра запроса.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(System.String,System.Object,NsgSoft.Database.NsgComparison)">
            <summary>
            Конструктор класса параметр запроса.
            </summary>
            <param name="inName">Имя параметра сравнения.</param>
            <param name="inParamValue">Значение параметра запроса.</param>
            <param name="inCompOperator">Оператор сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(NsgSoft.DataObjects.NsgSimpleObject,System.Object,NsgSoft.Database.NsgComparison)">
            <summary>
            Конструктор класса параметр запроса.
            </summary>
            <param name="inObj">Объект как параметр сравнения.</param>
            <param name="inParamValue">Значение параметра запроса.</param>
            <param name="inCompOperator">Оператор сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(NsgSoft.Common.NsgDataFixedFields,System.Object,NsgSoft.Database.NsgComparison)">
            <summary>
            Конструктор класса параметр запроса.
            </summary>
            <param name="inID">Идентификатор параметра сравнения.</param>
            <param name="inParamValue">Значение параметра запроса.</param>
            <param name="inCompOperator">Оператор сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(NsgSoft.DataObjects.NsgSimpleObject,System.Object)">
            <summary>
            Конструктор класса параметр запроса сравнения на равенство.
            </summary>
            <param name="inObj">Объект как параметр сравнения.</param>
            <param name="inParamValue">Значение параметра запроса.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(NsgSoft.Common.NsgDataFixedFields,System.Object)">
            <summary>
            Конструктор класса параметр запроса сравнения на равенство.
            </summary>
            <param name="inID">Идентификатор параметра сравнения.</param>
            <param name="inParamValue">Значение параметра запроса.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Конструктор класса параметр запроса сравнения на равенство значения параметра.
            </summary>
            <param name="inObj">Объект как параметр сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(NsgSoft.Common.NsgDataFixedFields)">
            <summary>
            Конструктор класса параметр запроса сравнения на равенство значения параметра.
            </summary>
            <param name="inID">Идентификатор параметра сравнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor">
            <summary>
            Конструктор класса параметр запроса по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.#ctor(NsgSoft.DataObjects.NsgReference,NsgSoft.DataObjects.NsgDataDictionary[])">
            <summary>
            Проверка на вхождение в иерархию группы.
            </summary>
            <param name="element">Элемент группы.</param>
            <param name="group">Группы на вхождение в которые будет проверка.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCompareParam.Key">
            <summary>
            Ключ для работы с коллекцией, для удобства выборки групп параметров
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCompareParam.ValueMode">
            <summary>
            Получение и установка типа значения параметра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCompareParam.ParameterValue">
            <summary>
            Получение и установка значения параметра.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCompareParam.ComparisonOperator">
            <summary>
            Получение и установка оператора сравнения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgCompareParam.Clone">
            <summary>
            Получение клона объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.NsgCompareParam_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Метод обработки изменения значения в параметре.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.ToString">
            <summary>
            Метод преобразования объекта к строке.
            </summary>
            <returns>Возвращает строковое представление объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.ToString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Метод преобразования объекта к строке с заменой имени.
            </summary>
            <returns>Возвращает строковое представление объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.ComparisonOperatorToString(NsgSoft.Database.NsgComparison)">
            <summary>
            Метод преобразования оператора сравнения к строке.
            </summary>
            <param name="compOperator">Оператор сравнения.</param>
            <returns>Возвращает строкое представление оператора сравнения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.CompareWithValue(System.Object)">
            <summary>
            Проверить, удовлетворяет ли переданное значение наложенному условию
            </summary>
            <param name="value">проверяемое значение</param>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgCompareParam.GetComparableObjectValue(System.Object)">
            <summary>
            Метод получения значения для сравнения.
            </summary>
            <param name="compareObj">Объект.</param>
            <returns>Возвращает значение для сравнения.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgSorting">
            <summary>
            Класс сортировки результатов выборки.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSorting.#ctor(NsgSoft.DataObjects.NsgSortingParam[])">
            <summary>
            Конструктор класса Сортировки.
            </summary>
            <param name="parameters">Список параметров сортировки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSorting.#ctor">
            <summary>
            Конструктор класса Сортировки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSorting.Count">
            <summary>
            Возвращает число параметров
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSorting.GetNsgType">
            <summary>
            Метод получения базового NSG-типа.
            </summary>
            <returns>Базовый NSG-тип.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSorting.Add(NsgSoft.DataObjects.NsgSortingParam)">
            <summary>
            Метод добавления параметра сортировки.
            </summary>
            <param name="parameter">Параметр на добавление.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSorting.ToTreeNode(NsgSoft.DataObjects.NsgDataObjectList{NsgSoft.DataObjects.NsgSimpleObject,NsgSoft.DataObjects.NsgSimpleObject})">
            <summary>
            Метод упаковки параметров сортировки в дерево
            </summary>
            <param name="ObjectList">Список реквизитов, объекта, в котором будет произведен дальнейший поиск</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSorting.op_Equality(NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Перегрузка оператора сравнения (==) по значениям.
            </summary>
            <param name="one">Объект для сравнения.</param>
            <param name="two">Объект для сравнения.</param>
            <returns>Возвращает true, если объекты равны, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSorting.op_Inequality(NsgSoft.DataObjects.NsgSorting,NsgSoft.DataObjects.NsgSorting)">
            <summary>
            Перегрузка оператора сравнения (!=) по ссылкам.
            </summary>
            <param name="one">Объект для сравнения.</param>
            <param name="two">Объект для сравнения.</param>
            <returns>Возвращает true, если объекты не равны, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSorting.GetHashCode">
            <summary>
            Получение хэш кода.
            </summary>
            <returns>Значение хэш кода.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSorting.Equals(System.Object)">
            <summary>
            Сравнение.
            </summary>
            <returns>Результат сравнения.</returns>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataVirtualObject">
            <summary>
            Виртуальный объект. Ссылается на несколько реальных полей базы данных
             и реализует работу с ними как с одним объектом.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataVirtualObject._ARRAY_FIELD">
            <summary>
            Список реальных полей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.#ctor">
            <summary>
            Конструктор без параметров. Использется в генерации кода совместно с функцией SetFieldsNames
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.#ctor(System.String)">
            <summary>
            Конструктор без параметров. Использется в генерации кода совместно с функцией SetFieldsNames
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.#ctor(System.String,System.String[])">
            <summary>
            Конструктор класса Виртуальный объект.
            </summary>
            <param name="name">Имя.</param>
            <param name="refFieldNames">Список входящих объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.#ctor(System.Xml.XmlElement,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Конструктор абстрактного класса простого логического объекта данных из XML.
            </summary>
            <param name="reader">Объект чтения XML текста.</param>
            <param name="inRoot">Владелец объекта. Null для родительских объектов.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.#ctor(NsgSoft.DataObjects.NsgObject)">
            <summary>
            Конструктор абстрактного класса логического объекта данных для использования в Clone.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataVirtualObject.ArrayField">
            <summary>
            Возвращает имена полей(из которых состоит вирт.поле)
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataVirtualObject.Value">
            <summary>
            Получение и установка значения.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgDataVirtualObject.CloneObject">
            <summary>
            Получение копии данного объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.CreateProperties">
            <summary>
            Метод создания свойств объекта. Только для эталонных.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.ToDBField(System.Boolean)">
            <summary>
            Преобразование в вид для БД
            </summary>
            <param name="forSortingParam">Если true, то преобразование проводится для параметров сортировки</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.ValueType">
            <summary>
            Возвращает тип значения объекта
            </summary>
            <returns>Тип значения объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.FillEmptyClone(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Переопределенный метод заполнения пустого клона полями текущего объекта.
            </summary>
            <param name="clone">Пустой клон.</param>
            <returns>Заполненный клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.SaveContent(System.Configuration.ConfigXmlDocument)">
            <summary>
            Метод записи объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.LoadContent(System.Xml.XmlElement)">
            <summary>
            Метод загрузки объектом вложенных в него объектов.
            </summary>
            <param name="doc">Документ XML текста (DOM).</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.GetLogicType">
            <summary>
            Возвращает логический тип объекта 
            </summary>
            <returns>Логический тип объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.GetValue">
            <summary>
            Метод получения значения в типизированном виде.
            </summary>
            <returns>Значение в типизированном виде.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.ResetValue">
            <summary>
            Метод сброса значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgDataVirtualObject.SaveDataToXML(NsgSoft.DataObjects.NsgDataXmlExporter)">
            <summary>
            Сохранение значения объекта и всех его свойств в XML
            </summary>
            <param name="importer">Объект экспорта данных в XML.</param>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgConfigurationTypes">
            <summary>
            ВИды конфигураций
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfigurationTypes.Base">
            <summary>
            Базовая конфигурация
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgConfigurationTypes.ExternalReports">
            <summary>
            Внешние отчеты
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgUserRegistrationActions">
            <summary>
            Перечисления действий пользователя, подлежащих регистрации.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.Create">
            <summary>
            Создание новых.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.Cancel">
            <summary>
            Отмена сохранения.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.Edit">
            <summary>
            Редактирование.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.View">
            <summary>
            Просмотр.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.Post">
            <summary>
            Сохранение.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.Remove">
            <summary>
            Удаление.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.SetDeleteMark">
            <summary>
            Пометка на удаление.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.UnsetDeleteMark">
            <summary>
            Снятие пометки на удаление.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.Handle">
            <summary>
            Проведение.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.Unhandle">
            <summary>
            Отмена проведения.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.PrintList">
            <summary>
            Печать списка
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgUserRegistrationActions.PrintObject">
            <summary>
            Печать объекта
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgProgressOperation">
            <summary>
            Вид операции в прогрессе
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.FormShowMode.None">
            <summary>
            Обычный
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.FormShowMode.Selection">
            <summary>
            Форма открыта для выбора
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.FormShowMode.MultiSelection">
            <summary>
            Форма открыта для подбора (множественный выбор)
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgFieldsFilter">
            <summary>
            Фильтр для выборки полей
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgFieldsFilter.NotPeriodic">
            <summary>
            Поля, у которых нет временной зависимости
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgFieldsFilter.SaveInDB">
            <summary>
            Поля, которые сохраняются в БД
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgFieldsFilter.NotSaveInDB">
            <summary>
            Поля, которые не сохряняются в БД
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgFieldsFilter.All">
            <summary>
            Все поля
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCmpMDResult">
            <summary>
            Вид результа сравнения МД
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCmpMDResult.EqlGuidMD">
            <summary>
            Guid'ы  равны.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCmpMDResult.NotEqlGuidMD">
            <summary>
            Guid'ы не равны.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCmpMDResult.EqlVer">
            <summary>
            Версии равны.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCmpMDResult.NotEqlVer">
            <summary>
            Версии не равны.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCmpMDResult.CompatiblyVer">
            <summary>
            Версии совместимы. Необходимо обновить БД.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCmpMDResult.NotCompatiblyVer">
            <summary>
            Версии не совместимы. Необходимо обновить программу.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgPropertyType">
            <summary>
            Тип свойства объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgPropertyType.Entry">
            <summary>
            Реквизит объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgPropertyType.Dynamic">
            <summary>
            Динамическое свойство.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMessageType">
            <summary>
            Тип сообщения
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMessageType._Notification">
            <summary>
            Оповещение
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMessageType._Warning">
            <summary>
            Предупреждение
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMessageType._Reminder">
            <summary>
            Напоминание
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgPriority">
            <summary>
            Приоритет
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgPriority._Minimum">
            <summary>
            Минимальный
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgPriority._Low">
            <summary>
            Низкий
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgPriority._Medium">
            <summary>
            Средний
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgPriority._High">
            <summary>
            Высокий
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgPriority._Maximum">
            <summary>
            Максимальный
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgServerJobAction">
            <summary>
            Тип действия в сервеной задаче
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgServerJobAction._Handle">
            <summary>
            Провести
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgServerJobAction._UnHandle">
            <summary>
            Отменить проведение
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgServerJobAction._SetDeleteMark">
            <summary>
            Пометить на удаление
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgServerJobAction._None">
            <summary>
            Нет действия
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgServerJobAction._Print">
            <summary>
            Печать
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgSQLRestsIncrement">
            <summary>
            SQL выражения инкременты для функции остатков.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLRestsIncrement.PERIOD">
            <summary>
            Период.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLRestsIncrement.INITIALREST">
            <summary>
            Начальный остаток.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLRestsIncrement.FINALREST">
            <summary>
            Конечный остаток.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgSQLMulpitleStatement">
            <summary>
            Сложные SQL выражения
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgSQLStatement">
            <summary>
            Простые SQL выражения
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgSQLFunction">
            <summary>
            SQL функции.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgUserSQLFunction">
            <summary>
            Пользовательские SQL функции.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgOperationInvalid">
            <summary>
            Виды некорректных операций.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgOperationInvalid.DeletePredefined">
            <summary>
            Удаление предопределенного поля.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgOperationInvalid.AddExisting">
            <summary>
            Добавление существующего объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgOperationInvalid.ChangeReadOnly">
            <summary>
            Изменение свойства, помеченного как ReadOnly
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgCursorError">
            <summary>
            Перечисление ошибок работы с курсором.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCursorError.NotCreated">
            <summary>
            Курсор еще не создан.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCursorError.AlreadyCreated">
            <summary>
            Курсор уже создан.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCursorError.NotOpened">
            <summary>
            Курсор еще не открыт.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCursorError.AlreadyDestroyed">
            <summary>
            Курсор уже разрушен.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgCursorError.AlreadyOpened">
            <summary>
            Курсор уже открыт.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgSQLParserError">
            <summary>
            Перечисление ошибок преобразования SQL текста.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.EmptyOrNullQuery">
            <summary>
            Пустой или незаданный запрос.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.UnknownField">
            <summary>
            Неизвестное поле.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.VeryLongReference">
            <summary>
            Слишком большая ссылка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.TemplateMissmatch">
            <summary>
            Несоответствие шаблону.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.NotReference">
            <summary>
            Это не ссылка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.NotReferenceInHierarchy">
            <summary>
            В иерархии используется не ссылка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.RestrictedQuery">
            <summary>
            Запрещенный запрос.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.UnknownSource">
            <summary>
            Неизвестный источник.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.InvalidSource">
            <summary>
            Недопустимый источник.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.ParameterExist">
            <summary>
            Такой параметр уже объявлен.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.ParameterValueTypeInvalid">
            <summary>
            Недопустимый тип значения параметра.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.WrongKeywordUsing">
            <summary>
            Неверное использование ключ.слова. (имя ключ.слова, выражение)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.TypesMissmatch">
            <summary>
            Несоответствие типов параметра {0} в источниках по ссылке {1}.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.InvalidPeriod">
            <summary>
            Неверно задан период (0 - период, 1 - текст вызова).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.InvalidGoal">
            <summary>
            Неверно задана цель (0 - цель, 1 - текст вызова).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.InvalidDimension">
            <summary>
            Неверно задано измерение (0 - измерение, 1 - текст вызова)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSQLParserError.InvalidRegister">
            <summary>
            Неверно задан регистр (0 - регистр, 1 - текст вызова).
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgExceptions">
            <summary>
            Перечисление исключений для сборки NsgSoft.DataObjects.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.AccessToOperationDenied">
            <summary>
            Доступ по операции (0 - операция) с объектом (1- объект) запрещен
             для пользователя (2 - пользователь).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.AccessToObjectDenied">
            <summary>
            Доступ к объекту (0 - объект) запрещен
             для пользователя (1 - пользователь).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ArgumentMustMultiple">
            <summary>
            Объект должен быть сложным.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ArgumentIncorrect">
            <summary>
            Параметр задан неверно.
             0 - имя аргумента.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ObjectNotFull">
            <summary>
            Обязательные поля объекта не заполнены.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ObjectIsDependent">
            <summary>
            На объект имеются ссылки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ObjectNotImplement">
            <summary>
            Объект не может реализовать интерфейсы.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ObjectHasWrongGroup">
            <summary>
            У объекта - 0 установлена неверная группа.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.WrongXmlSchema">
            <summary>
            Неверная логическая структура в XML. Ошибка в элементе - ...
             0 - имя элемента.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.WrongXmlByXsd">
            <summary>
            Логическая структура XML не совпадает с XSD описанием.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.XsdSchemaNotFound">
            <summary>
            Не найдена XSD.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.NullReference">
            <summary>
            Объект - пустая ссылка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.WrongPath">
            <summary>
            Неверный путь.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.IndexOutOfRange">
            <summary>
            Индекс за пределами допустимого диапазона
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.SameObjectExist">
            <summary>
            Такой объект уже существует.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ThisObjectNotExist">
            <summary>
            Такой объект не существует.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ObjectNotInList">
            <summary>
            Объекта нет в списке
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ObjectNotEdit">
            <summary>
            Попытка сохранить не редактированный объект
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ParamsCountMismatch">
            <summary>
            Неверное количество параметров
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.PermissionRefused">
            <summary>
            Недостаточно прав.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.InvalidObjectName">
            <summary>
            Недопустимое имя объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.InvalidOperation">
            <summary>
            Недопустимая операция.
             0 - описание операции.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.NotInFilter">
            <summary>
            Объект не соответствует фильтру.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.SQLParserError">
            <summary>
            Ошибка формирования SQL запроса.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.NotImplemented">
            <summary>
            Не реализован.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ObjectCannotBeFolder">
            <summary>
            Данный объект не может быть папкой (например, документ).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.NotDBConnected">
            <summary>
            Нет соединения с БД.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.NotInDatabase">
            <summary>
            MultipleObject не в состоянии Edit или Fill, т.е. не записан в БД
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.NotEqualObjectName">
            <summary>
            имя MultipleObject не соответствует имени присваемого ему объекта
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.DocumentAlreadyHandled">
            <summary>
            Попытка проведения документа который уже проводится. Видимо проблема с блокировками.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.AccessFromWrongThread">
            <summary>
            Попытка доступа к объекту, созданному в другом потоке
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.TransactionAlreadyCommit">
            <summary>
            Транзакция уже завершена
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.WrongIsolationLevel">
            <summary>
            Уже существует транзакция с другим уровнем изоляции
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.WrongNsgEnum">
            <summary>
            В объекте NsgDataEnum существуют записа с одинаковыми индексами (которые задаются в параметре Length)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.DBManagerAlreadyUsed">
            <summary>
            Один из менеджеров базы данных уже использован.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.IntMustBePositive">
            <summary>
            Значение должно быть положительным
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.InvalidMultipleObjectStandard">
            <summary>
            Значение Standard неверное
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.WrongObjectType">
            <summary>
            Объект неверного типа
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.RenameProhibition">
            <summary>
            Переименование данного объекта запрещено.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.InvalidTableReferent">
            <summary>
            Неправильная ссылка на табличную часть.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.InvalidMasterDetails">
            <summary>
            Неверное соединение master-details.
             0-master.
             1-details.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.RegisterSingNotAssigned">
            <summary>
            Не указан знак движения регистра.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.RegisterActiveNotAssigned">
            <summary>
            Попытка записи движения в регистр с нулевой активностью. Возможно, не был вызван метод New.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.RegisterDocumentNotAssigned">
            <summary>
            Не указан документ, производящий движения в регистр.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ThreadAlreadyRun">
            <summary>
            Поток уже запущен.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.BindingNotSet">
            <summary>
            Не задана связка.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.DictionaryHasNoOwner">
            <summary>
            Справочник не является подчиненным
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.DeletePredefined">
            <summary>
            Попытка удалить предопределенный объект
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.WrongDateAssigned">
            <summary>
            Присвоена неправильная дата
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.WrongRegisterUsed">
            <summary>
            При проведении используется регистр, запрещенный для данного документа
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ConstructorNotFound">
            <summary>
            Не найден конструктор с заданным набором параметров 
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.InvalidRowStructure">
            <summary>
            Неправильная структура строки таблицы (другой список реквизитов)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ReportError">
            <summary>
            Ошибка в отчете.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.BackgroundThreadError">
            <summary>
            Ошибка в фоновом потоке.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.FileAccessDenied">
            <summary>
            Ошибка доступа к файлу (0 - имя файла)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.FileImageInvalid">
            <summary>
            Файл с изображением (0 - имя файла) имеет неверный формат.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ValueOutOfRange">
            <summary>
            Недопустимое значение
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ChangeReadOnlyObject">
            <summary>
            Изменение объекта ТОЛЬКО ДЛЯ ЧТЕНИЯ.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ConfigurationNotFound">
            <summary>
            Не найдена конфигурация.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.LoginFailed">
            <summary>
            Неверная пара логин - пароль.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.FormCreatedOnBackgroundThread">
            <summary>
            Форма (0 - форма) созданная на дочернем потоке не может быть выведена в основном.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.RegimeConfiguratorNeeded">
            <summary>
            Для данной операции необходимо войти в режим "Конфигуратор".
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.CrossThreadOperation">
            <summary>
            Операция на дочернем потоке.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.MainThreadLockFailed">
            <summary>
            Попытка блокировки объекта на основном потоке превысило предел ожидания.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.DifferentTypesCompare">
            <summary>
            Сравнение объектов различных типов в методе NsgSettings.CompareObjetcs
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.DateExpiredForEdit">
            <summary>
            Дата объекта {0} находится за пределами даты запрета редактирования. Изменение запрещено.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.DuplicateControlNameDebug">
            <summary>
            В DEBUG - Свойство Name у Control не соответсвует имени переменной и встречается дважды, что не позволяет сохранять настройки пользователя
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.DuplicateControlName">
            <summary>
            Свойство Name у Control не соответсвует имени переменной и встречается дважды, что не позволяет сохранять настройки пользователя
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.ObjectNotContainsReport">
            <summary>
            Обработка не может быть зарегистрирована как печатная форма. Форма не содержит объекта печати.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.InvalidReportForm">
            <summary>
            Обработка не может быть зарегистрирована как печатная форма. Форма не отнаследована от NsgReportForm
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.LoadExternDllError">
            <summary>
            Ошибка загрузки внешней библиотеки  (0 - имя библиотеки).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.CodeGenerationNeeded">
            <summary>
            Изменена конфигурация предок, требуется перегенерация кода объекта (0 - имя объекта)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.WrongCodeLanguage">
            <summary>
            Объект с другим языком кодогенерации (0 - имя объекта)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgExceptions.EmptyDatabasePrefix">
            <summary>
            Не задан префикс бызы данных
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgObjectStates">
            <summary>
            Перечисление состояний объекта.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectStates.Empty">
            <summary>
            Объект только что создан
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectStates.New">
            <summary>
            Объект уже проинициализирован
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectStates.Edit">
            <summary>
            Объект редактируется
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgObjectStates.Fill">
            <summary>
            Объект сохранен в БД
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataDictionaryElementType">
            <summary>
            Перечисление признаков Элементов справочника (группа/элемент)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDictionaryElementType.Element">
            <summary>
            Это значение - элемент
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDictionaryElementType.Group">
            <summary>
            Это значение - группа
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataObjectEditorAccess">
            <summary>
            Определяет права на задание свойств объектов метаданных
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataObjectEditorAccess.Full">
            <summary>
            Можно все
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataObjectEditorAccess.NonRemovable">
            <summary>
            Можно изменять все, но нельзя удалять
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataObjectEditorAccess.Limited">
            <summary>
            Можно изменять только некоторые поля (описание, представление)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataObjectEditorAccess.ReadOnly">
            <summary>
            Ничего изменять нельзя
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataObjectEditorAccess.Hidden">
            <summary>
            Невиден в редакторе
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataObjectEditorAccess.Deprecated">
            <summary>
            Устарел
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgFiltration.Group">
            <summary>
            Фильтр по группе.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgFiltration.Type">
            <summary>
            Фильтр по типу.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgFiltration.List">
            <summary>
            Фильтр по списку объектов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgFiltration.None">
            <summary>
            Фильтр отключен.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgRigths">
            <summary>
            Перечисление прав доступа к объектам
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRigths.Read">
            <summary>
            чтение
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRigths.Write">
            <summary>
            запись
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRigths.Delete">
            <summary>
            удаление
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRigths.SetDeleteMark">
            <summary>
            пометка удаления
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRigths.RemoveDeleteMark">
            <summary>
            снятие пометки удаления
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRigths.New">
            <summary>
            создание нового
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRigths.Select">
            <summary>
            выбор
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgDataDocState">
            <summary>
            Состояние документа
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocState.Created">
            <summary>
            Создан и не записан
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocState.Saved">
            <summary>
            Без меток.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocState.Marked">
            <summary>
            Помечен на удаление
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocState.Template">
            <summary>
            Шаблон
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocState.Handled">
            <summary>
            Проведен
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgDataDocState.Predefined">
            <summary>
            Предопределенный
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgRegisterType">
            <summary>
            Признак реквизита в Регистре
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterType.Characteristics">
            <summary>
            Регистр характеристик
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterType.Accummulate">
            <summary>
            регистр итогов
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterType.Circulating">
            <summary>
            Регистр оборотов
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterType.CirculatingAccummulate">
            <summary>
            Регистр оборотов и итогов
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.CloneRowsState">
            <summary>
            Перечисление состяния строк при клонировании.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.CloneRowsState.CloneRows">
            <summary>
            Клонировать строки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.CloneRowsState.LeaveRows">
            <summary>
            Оставить старые строки.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.CloneRowsState.WithoutRows">
            <summary>
            Без строк.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgSimpleObjectValidateResult">
            <summary>
            Перечисление результатов валидации значения реквизита
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObjectValidateResult.Ok">
            <summary>
            Значение правильное
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObjectValidateResult.Empty">
            <summary>
            Значение пустое у обязательного к заполнению реквизита
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSimpleObjectValidateResult.DataRange">
            <summary>
            Значение не удовлетворяет наложенным ограничениям
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgRegisterDistributionType">
            <summary>
             Правило обработки измерений регистра
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterDistributionType.Filter">
            <summary>
            Фильтрация
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterDistributionType.Distribution">
            <summary>
            Распределение и фильтрация
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterDistributionType.Any">
            <summary>
            По среднему (измерение не учитывается)
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterDistributionType.FIFO">
            <summary>
            Первый пришедший списывается первым
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgRegisterDistributionType.LIFO">
            <summary>
            Последний пришедший списывается первым
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMetaData">
            <summary>
            Класс объекта управления метаданными.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgMetaData.IsUpdateDB">
            <summary>
            Признак обновления БД
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgMetaData.GetDateEventHandler">
            <summary>
            Делегат получения даты.
            </summary>
            <returns></returns>
        </member>
        <member name="E:NsgSoft.DataObjects.NsgMetaData.GetEditProhibitDate">
            <summary>
            Событие для получения даты запрета редактирования.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.#ctor(System.String)">
            <summary>
            Конструктор класса объекта управления метаданными.
            </summary>
            <param name="inName">Имя объекта метаданных.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.#ctor">
            <summary>
            Конструктор класса объекта управления метаданными по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.InitObjectListInternal">
            <summary>
            Инициализация списка объектов. Для внутреннего использования.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.EditProhibitDate">
            <summary>
            Дата запрета редактирования. Любые изменения данных ранее этой даты запрещены.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.BaseCodePath">
            <summary>
            Путь к коду предка
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.Guid">
            <summary>
            Получение и установка идентификатора объекта
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.ClassName">
            <summary>
            Имя класса в кодогенерации.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.DllName">
            <summary>
            Получение имени сборки, из которой загружены метаданные.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.Languages">
            <summary>
            Список используемых языков
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.LanguagesNames">
            <summary>
            Получение списка имен используемых языков.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.LanguagesForConfigurator">
            <summary>
            Получение и установка набора языков для конфигуратора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.PeriodicTable">
            <summary>
            TODO: Comment
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.DebugObjects">
            <summary>
            Тестовое свойство. Список объектов
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.SystemTables">
            <summary>
            Тестовое свойство. Список системных таблиц
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.SystemGroup">
            <summary>
            Группа для размещения системных объектов
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.ServiceGroup">
            <summary>
            Группа для размещения системных объектов
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.MultipleObjectTypes">
            <summary>
            Получение списка доступных типов сложных объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.SimpleObjectTypes">
            <summary>
            Получение списка доступных типов простых объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.ObjectList">
            <summary>
            Получение объекта управления списком логических объектов данных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.Item(System.String)">
            <summary>
            Получение любого объекта по его пути.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.FileName">
            <summary>
            Получение имени файла для чтения/сохранения метаданных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.FullVersionAsString1">
            <summary>
            Полная версия метаданных
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.FullVersionAsString">
            <summary>
            Полная версия метаданных
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.Version">
            <summary>
            Получение версии метаданных.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.ContainsUserInformation">
            <summary>
            Флаг, определяющий используются ли в данных метаданных объекты для работы с пользователями
            (список пользователей, права, настройки и пр.).
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.UserActionsRegisteration">
            <summary>
            Флаг, определяющий вести ли регистрацию действий пользователей в БД.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.UseUserMenu">
            <summary>
            Флаг, определяющий наличие меню в программе
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.Groups">
            <summary>
            Получение списка групп.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.RemoveReferencedObjectFromCache(System.String,System.Guid)">
            <summary>
            Получить объект из кэша. Кэш "живет" в пределах потока. По завершению потока будет очищен.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetReferencedObjectFromCache(System.String,System.Guid)">
            <summary>
            Получить объект из кэша. Кэш "живет" в пределах потока. По завершению потока будет очищен.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.PutReferencedObjectInCache(System.String,NsgSoft.DataObjects.NsgReferencedObject)">
            <summary>
            Добавить объект в кэш. Кэш "живет" в пределах потока. По завершению потока будет очищен.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ClearReferencedObjectsCache">
            <summary>
            Удалить из кэша все объекты по текущему потоку
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.GlobalLockReferencedObjectsCache">
            <summary>
            Блокировать использование кэша объектов во всех потоках
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.UseReferencedObjectsCache">
            <summary>
            Включить кэширование NsgReferencedObject по текущему потоку. По завершению потока, либо
            по установке значения свойства в false, cache будет автоматически сброшен.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetNsgType(System.String)">
            <summary>
            Возвращает NSG-тип объекта напрямую из списка объектов, не вызывает клонирования
            </summary>
            <param name="FullName"></param>
            <returns>NSG-тип</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.InitObjectList">
            <summary>
            Инициализация объектов метаданных при работе из кода
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CreateInstance(System.String,System.Object[])">
            <summary>
            Метод создания объекта заданного типа.
            </summary>
            <param name="typeName">Имя типа.</param>
            <returns>Созданный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CreateInstanceDomain(System.String,System.Object[])">
            <summary>
            Метод создания объекта заданного типа по всем сборкам.
            </summary>
            <param name="typeName">Имя типа.</param>
            <returns>Созданный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.FindTypeDomain(System.String)">
            <summary>
            Поиск заданного типа с поискам по всем доступным сборкам.
            </summary>
            <param name="typeName">Имя типа.</param>
            <returns>Тип.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CreateObjectDomain(System.String,System.Object[])">
            <summary>
            Метод создания объекта заданного типа с поискам по всем доступным сборкам.
            </summary>
            <param name="typeName">Имя типа.</param>
            <returns>Созданный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CompareTypes(System.Type,System.Type)">
            <summary>
            Метод сравнения типов.
            </summary>
            <param name="type">Проверяемый тип.</param>
            <param name="baseType">Тип, который ожидается равным или базовым для проверяемого.</param>
            <returns>Возвращает true при равенстве, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CompareMultipleObjects(NsgSoft.DataObjects.NsgMultipleObject,NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод сравнения двух MO с учетом реквизитов.
            </summary>
            <param name="one">Первый МО.</param>
            <param name="two">Второй МО.</param>
            <returns>Возвращает true, если равны, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CompareImages(System.Drawing.Image,System.Drawing.Image)">
            <summary>
            Метод сравнения картинок.
            </summary>
            <param name="one">Первая картинка.</param>
            <param name="two">Вторая картинка.</param>
            <returns>Возвращает результат сравнения.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.FindConstructor(System.Type,System.Type[])">
            <summary>
            Поиск конструктора класса по типам параметров
            </summary>
            <param name="type">Класс</param>
            <param name="args">Типы параметров</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CreateObject(System.Type,System.Object[])">
            <summary>
            Метод создания объекта заданного типа.
            </summary>
            <param name="type">Тип объекта</param>
            <param name="args">Набор аргументов</param>
            <returns>Созданный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CreateObject(System.String,System.Object[])">
            <summary>
            Метод создания объекта заданного типа.
            </summary>
            <param name="typeName">Имя типа создаваемого объекта</param>
            <param name="args">Набор аргументов</param>
            <returns>Созданный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CreateSimpleObject(System.String,System.Type,System.Object[])">
            <summary>
            Метод создания простого объекта по типу.
            </summary>
            <param name="name">Имя объекта.</param>
            <param name="type">Тип объекта.</param>
            <param name="objects">Список аргументов конструктора.</param>
            <returns>Возвращает созданный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CreateInstance(System.Type,System.Object[])">
            <summary>
            Метод создания экземпляра заданного типа, наследника от NsgObject.
            </summary>
            <param name="type">Тип создаваемого объекта</param>
            <param name="args">Набор аргументов</param>
            <returns>Созданный объект.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.AddGroup(System.String)">
            <summary>
            Метод добавления новой пустой группы.
            </summary>
            <param name="name">Имя новой группы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.RemoveGroup(System.String)">
            <summary>
            Метод удаления группы и всех ее элементов.
            </summary>
            <param name="name">Имя удаляемой группы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.RenameGroup(System.String,System.String)">
            <summary>
            Метод переименования группы.
            </summary>
            <param name="oldName">Старое имя группы.</param>
            <param name="newName">Новое имя группы.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.IsGroupExist(System.String)">
            <summary>
            Метод проверки существования группы в полном списке групп по имени.
            </summary>
            <param name="name">Имя проверяемой группы.</param>
            <returns>Возвращает true, если группа найдена в списке, иначе - false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ObjectNamesByGroup(System.String)">
            <summary>
            Получение списка имен объектов по группе.
            </summary>
            <param name="group">Имя группы для поиска.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ObjectsByGroup(System.String)">
            <summary>
            Получение списка объектов по группе.
            </summary>
            <param name="group">Имя группы для поиска.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ObjectNamesByType(System.Type)">
            <summary>
            Получение списка имен объектов по типу.
            </summary>
            <param name="type">Тип для поиска.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ObjectsByType(System.Type)">
            <summary>
            Получение списка объектов по типу.
            </summary>
            <param name="type">Тип для поиска.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ObjectNamesByType(System.String)">
            <summary>
            Получение списка имен объектов по имени типа.
            </summary>
            <param name="type">Имя типа для поиска.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ObjectsByType(System.String)">
            <summary>
            Получение списка объектов по имени типа.
            </summary>
            <param name="type">Имя типа для поиска.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.SaveConfig(System.IO.Stream,NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Метод сохранения логической схемы в поток по заданному менеджеру базы данных.
            </summary>
            <param name="stream">Поток для сохранения.</param>
            <param name="mngr">Менеджер базы данных.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.SaveConfig(System.IO.Stream)">
            <summary>
            Перегруженный метод сохранения логической схемы в поток.
            </summary>
            <param name="stream">Поток для сохранения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.SaveConfig(System.Configuration.ConfigXmlDocument,NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Перегруженный метод сохранения логической схемы в поток.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.SaveConfig(System.Configuration.ConfigXmlDocument)">
            <summary>
            Перегруженный метод сохранения логической схемы в поток.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetAllDBManagersNames">
            <summary>
            Метод получения имен всех менеджеров БД в метаданных.
            </summary>
            <returns>Возвращает массив имен.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.BeforeSaveMetaData">
            <summary>
            Метод подготовки метаданных к сохранению.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.LoadConfig(System.String)">
            <summary>
            Перегруженный метод загрузки логической схемы из файла.
            </summary>
            <param name="fileName">Имя файла для загрузки.</param>
            <returns>Загруженный объект метаданных.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.AfterLoad">
            <summary>
            Проверка и заполнение полей после загрузки метаданных в RunTime
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.AfterLoad(System.Boolean)">
            <summary>
            Проверка и заполнение полей после загрузки метаданных
            </summary>
            <param name="fromXML">Загрузка из XML.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnAfterLoad(System.Boolean)">
            <summary>
            Метод вызывается после загрузки метаданных.
            </summary>
            <param name="fromXML">Загрузка из XML.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.FillVirtualDependences">
            <summary>
            Метод заполнения зависимостей по виртуальным полям.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CheckSystemTables">
            <summary>
            Метод проверки системных объектов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CreatePredefinedMultipleObjects">
            <summary>
            Создание всех необходимых предопределенных системных таблиц
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetNewQuery">
            <summary>
            Метод получения нового Запроса.
            </summary>
            <returns>Объект Запрос.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetNewQuery(System.String)">
            <summary>
            Метод получения нового Запроса.
            </summary>
            <param name="query">Строка запроса.</param>
            <returns>Объект Запрос.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.AnalizeDataBase(NsgSoft.DataObjects.NsgDoWorkArgs@)">
            <summary>
            Метод анализа структуры БД
            </summary>
            <param name="args">Параметры</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.IsDatabaseManagerUsed(NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Метод проверки использования менеджера баз данных в текущих метаданных.
            </summary>
            <param name="mngr">Менеджера баз данных.</param>
            <returns>Возвращает true, если менеджер используется в текущих метаданных, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.Configuration_MOInObjectListCreate(System.Object,NsgSoft.DataObjects.ObjectListEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="arg"></param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.RefillAccumTabls(NsgSoft.DataObjects.NsgDataRegister)">
            <summary>
            Метод перезаполнения таблиц накоплений регистра
            </summary>
            <param name="reg">Объект регистр</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CreateStorage(NsgSoft.DataObjects.NsgDoWorkArgs)">
            <summary>
            Метод создания места физического хранения объектов метаданных.
            </summary>
            <param name="args">Параметры</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnBeforeCreateStorage(NsgSoft.DataObjects.NsgFullVersion,NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Метод вызывается перед началом обновления БД.
            </summary>
            <param name="beforeVersion">Предыдущая версия конфигурации.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnCreateStorageCompleted(NsgSoft.DataObjects.NsgFullVersion,NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Метод вызывается по окончанию обновления БД.
            </summary>
            <param name="beforeVersion">Предыдущая версия конфигурации.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CompareDatabaseTables(System.Collections.Generic.Dictionary{System.String,NsgSoft.Database.NsgDatabaseTable},System.Collections.Generic.Dictionary{System.String,NsgSoft.Database.NsgDatabaseTable},NsgSoft.DataObjects.NsgDoWorkArgs@)">
            <summary>
            Метод сравнения структуры таблиц БД с метаданными
            </summary>
            <param name="tables">Структуры таблиц из МД</param>
            <param name="inDataBaseTables">Структуры таблиц из БД</param>
            <param name="args">Аргументы потока, в котором был вызван метод сравнения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.RefillAllAccumTables(NsgSoft.DataObjects.NsgDoWorkArgs,System.Data.IDbTransaction)">
            <summary>
            Метод перезаполнения всех таблиц накоплений
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.RefillAllAccumTables(NsgSoft.DataObjects.NsgThread)">
            <summary>
            Метод перезаполнения всех таблиц накоплений
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CorrectDictionariesHierarchy(NsgSoft.Common.INsgProgressProvider)">
            <summary>
            Метод исправления иерархии справочников.
            </summary>
            <param name="progressProvider">Провайдер прогресса выполнения.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CorrectDictionaryHierarchy(NsgSoft.DataObjects.NsgDataDictionary)">
            <summary>
            Метод исправления иерархии заданного справочника.
            </summary>
            <param name="obj">Справочник для исправлений.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ConnectDatabaseManager(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Присваивает DatabaseManager объекту метаданных. 
            Функция должна вызываться после создания всех DatabaseManager перед первым обращением к базе данных
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ConnectDatabaseManagers">
            <summary>
            Присваивает DatabaseManager каждому объекту метаданных. 
            Функция должна вызываться после создания всех DatabaseManager перед первым обращением к базе данных
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CheckVersion(NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Метод сравнения версии текущих метаданных и версии метаданных в БД.
            </summary>
            <param name="mngr">Менеджер БД.</param>
            <returns>Возвращает результат проверки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.AddExternObjects">
            <summary>
            Метод добавления внешних объектов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.getNumberFromName(System.String)">
            <summary>
            удаляет из строки символьный префикс и возвращает цифровую правую часть в виде целого числа
            </summary>
            <param name="name">строка (имя таблицы, имя поля) для преобразования</param>
            <returns>цифровая часть</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetStandard(System.String)">
            <summary>
            Получение сложного эталонного объекта по его пути без клонирования
            </summary>
            <param name="path">путь к объекту</param>
            <returns></returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.UsersActionsJournal">
            <summary>
            Журнал действий пользователей.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.UsersDictionary">
            <summary>
            Справочник пользователей.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.SystemUpdateDictionary">
            <summary>
            Справочник обновлений системы.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgMetaData.UsersRights">
            <summary>
            Регистр прав пользователей.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CheckElementsInEnumByEnum(NsgSoft.DataObjects.NsgMultipleObject,System.Type,System.Enum[])">
            <summary>
            Метод проверки структуры элементов в объекте Перечисление по перечислению.
            </summary>
            <param name="mo">Объект метаданных.</param>
            <param name="enumType">Тип перечисления.</param>
            <param name="excluded">Список исключенных.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CheckEnumReferencesInObjectByEnum(NsgSoft.DataObjects.NsgMultipleObject,System.Type,System.String,NsgSoft.Common.NsgRekvisitSubType,System.Enum[])">
            <summary>
            Метод проверки структуры реквизитов-ссылок на Перечисление в произвольном объекте по перечислению.
            </summary>
            <param name="mo">Объект метаданных.</param>
            <param name="enumType">Тип перечисления.</param>
            <param name="enumReferent">Имя референта.</param>
            <param name="subType">Подтип реквизита.</param>
            <param name="excluded">Список исключенных.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ExcludeTypes(System.Type[],System.Type[])">
            <summary>
            Удаление типов из массива 
            </summary>
            <param name="array">Исходный массив</param>
            <param name="exclude">Массив типов, которые надо удалить</param>
            <returns>Итоговый массив типов</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.SetDatabaseTableNames">
            <summary>
            Задает имена таблиц и полей для хранения в БД.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetObjectListByFilter(NsgSoft.DataObjects.NsgObjectsFilter)">
            <summary>
            Метод получения списка объектов по фильтру.
            </summary>
            <param name="filter">Фильтр.</param>
            <returns>Возвращает список найденных в метаданных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetObjectListByFilters(NsgSoft.DataObjects.NsgObjectsFilter[])">
            <summary>
            Метод получения списка объектов по фильтрам.
            </summary>
            <param name="filters">массив фильтров.</param>
            <returns>Возвращает список найденных в метаданных объектов.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.getObjectsDictionaryByList(System.Collections.Generic.List{NsgSoft.DataObjects.NsgMultipleObject})">
            <summary>
            Метод получения словаря по списку объектов.
            </summary>
            <param name="list">Список объектов. Нельзя повторять объекты в списке.</param>
            <returns>Возвращает словарь.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetObjectNameByTableName(System.String)">
            <summary>
            Метод получения имени полного объекта по имени соответствующей ему таблицы БД.
            </summary>
            <param name="inTableName">Имя таблицы БД.</param>
            <returns>Полное имя объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CheckReferences(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Метод поиска ссылок на заданный объект.
            </summary>
            <param name="obj">Логический объект.</param>
            <returns>Список объектов имеющих ссылки на заданный.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CheckReferences(NsgSoft.DataObjects.NsgMultipleObject,System.Type[])">
            <summary>
            Метод поиска ссылок на заданный объект.
            </summary>
            <param name="obj">Логический объект.</param>
            <param name="includedTypes">Включающие типы, если указаны, то поиск только по ним.
             Если не указаны, то по всем метаданным.</param>
            <returns>Список объектов имеющих ссылки на заданный.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CheckDependence(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary> 
            Метод поиска объектов, ссылающихся на заданный.
            </summary>
            <param name="obj">Логический объект.</param>
            <returns>Список объектов имеющих ссылки на заданный.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CheckDependence(NsgSoft.DataObjects.NsgMultipleObject,System.Type[])">
            <summary>
            Метод поиска объектов, ссылающихся на заданный.
            </summary>
            <param name="obj">Логический объект.</param>
            <param name="includedTypes">Включающие типы, если указаны, то поиск только по ним.
             Если не указаны, то по всем метаданным.</param>
            <returns>Список объектов имеющих ссылки на заданный.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:NsgSoft.DataObjects.NsgMetaData.CheckDependence(NsgSoft.DataObjects.NsgMultipleObject,System.Type[],System.Boolean)" -->
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ConvertValueFromString(System.Type,System.String)">
            <summary>
            Метод конвертации значения к определенному типу.
            </summary>
            <param name="destinationType">Системный тип, к которому проводится конвертация.</param>
            <param name="value">Исходное значение.</param>
            <returns>Возвращает конвертированное значение.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetDefaultValue(System.Type)">
            <summary>
            Метод получения значения по умолчанию для типа данных.
            </summary>
            <param name="destinationType">Системный тип.</param>
            <returns>Возвращает значение по умолчанию.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ConvertNsgTypeToSystemType(System.Type)">
            <summary>
            Метод получения системного типа данных, соответсвующего NSG-типу метаданных.
            </summary>
            <param name="nsgType">Тип из метаданных, только для простых типов.</param>
            <returns>Системных тип данных.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ConvertNsgTypeToSystemType(NsgSoft.DataObjects.NsgSimpleObject)">
            <summary>
            Метод получения системного типа данных, соответствующего NSG-типу метаданных.
            </summary>
            <param name="sObj">Реквизит.</param>
            <returns>Системных тип данных.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ConvertSystemTypeToNsgType(System.Type)">
            <summary>
            Метод получения NSG-типа типа данных, соответсвующего системному.
            </summary>
            <param name="sysType">Системный тип..</param>
            <returns>NSG-тип данных.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CreateDefaultSorting(System.Type)">
            <summary>
            Функция для задания сортировки по умолчанию для заданного типа объекта.
            </summary>
            <param name="type">Тип объекта.</param>
            <returns>Возвращает объект сортировки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.CreateDefaultSorting(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Функция для задания сортировки по умолчанию для заданного объекта.
            </summary>
            <param name="type">Сложный объект.</param>
            <returns>Возвращает объект сортировки.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetDBName(System.String)">
            <summary>
            Возвращает имя объекта в базе данных.
            </summary>
            <param name="fullName">Полное имя</param>
            <returns>имя объекта в базе данных (TableName)</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetCharacteristicTableOwner(System.String)">
            <summary>
            Метод получения имени владельца таблицы движения(только для рег-ов) характеристик
            </summary>
            <param name="tableFullName"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.ConnectMovementTables">
            <summary>
            Подключить все таблицы движений регистров характеристик
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnProgramShown">
            <summary>
            Метод вызывается после старта программы на исполнение и 
             отображения основной формы программы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.FillExchangeDataTypes">
            <summary>
            Заполняет список объектов, предназначенных для обмена с другими базами данных
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetCharacteristicsRegisterTableOwners">
            <summary>
            Получение регистров характеристик по их таблицам движения
            </summary>
            <returns>Возрвращает пары строк  имя таблицы движения|имя регистра владельца этой таблицы</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnInteractiveNew(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Метод, вызываемый при интерактивном создании нового элемента.
             Может перекрываться в наследниках для начального заполнения полей объекта.
             Не вызывается при копировании и вводе на основании.
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnInteractiveEdit(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Метод, вызываемый при редактировании элемента.
             Не вызывается при копировании и вводе на основании и создании нового элемента.
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnAfterFind(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Метод вызывается после окончания чтения объекта из базы данных и после отработки команды New
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnBeforeDelete(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Событие генерируется перед пометкой на удаление объекта
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект
            Может быть отменено, если Cancel будет выставлен в true</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnAfterDelete(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Событие генерируется после пометки на удаление объекта
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnBeforePost(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Событие генерируется перед записью объекта в БД
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект
            Может быть отменено, если Cancel будет выставлен в true</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnAfterPost(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Событие генерируется после записи объекта в БД
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnBeforeHandle(NsgSoft.DataObjects.HandleEventArgs)">
            <summary>
            Событие генерируется перед началом проведения
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект
            Может быть отменено, если Cancel будет выставлен в true</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnAfterHandle(NsgSoft.DataObjects.HandleEventArgs)">
            <summary>
            Событие генерируется после окончания проведения
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnBeforeUnHandle(NsgSoft.DataObjects.HandleEventArgs)">
            <summary>
            Событие генерируется перед отменой проведения
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект
            Может быть отменено, если Cancel будет выставлен в true</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnAfterUnHandle(NsgSoft.DataObjects.HandleEventArgs)">
            <summary>
            Событие генерируется после окончания отмены проведения
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnBeforeEdit(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Событие генерируется перед началом редактирования объекта
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект
            Может быть отменено, если Cancel будет выставлен в true</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnEditCanceled(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Событие генерируется после окончания проведения
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnAfterEdit(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Событие генерируется после окончания перевода объекта в состояние редактирования
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnBeforeObjectListPropertyChanged(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Событие генерируется перед изменением свойства объекта
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnAfterObjectListPropertyChanged(NsgSoft.DataObjects.NsgMultipleObjectEventArgs)">
            <summary>
            Событие генерируется после изменения свойства объекта
            </summary>
            <param name="e">Параметр, содержащий обрабатываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnResetInterconnectedProperty(NsgSoft.DataObjects.NsgReference,NsgSoft.DataObjects.NsgReference)">
            <summary>
            Событие генерируется после интерактивного сброса связанного свойства объекта
            </summary>
            <param name="reference">Свойство объекта</param>
            <param name="owner">Владелец, инициировавший сброс</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.OnRequisiteRequestForEdit(NsgSoft.DataObjects.NsgMultipleObject,System.String)">
            <summary>
            Метод запроса реквизитом разрешения на редактирование.
            </summary>
            <param name="obj">Объект.</param>
            <param name="requisiteName">Имя реквизита.</param>
            <returns>Возвращает true, если редактирование разрешено, иначе false.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetPrintFormName(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Получить имя печатной формы из объекта описателя печатной формы
            </summary>
            <param name="MO"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetPrintFormReport(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Получить имя обработки печатной формы из объекта описателя печатной формы
            </summary>
            <param name="MO"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.GetPrintFormReportData(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Получить печатную форму из объекта описателя печатной формы
            </summary>
            <param name="MO"></param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgMetaData.LoadSettings(System.String[])">
            <summary>
            Загрузка настроек из комнадной строки и файла настроек
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgObjectPrefixAttribute">
            <summary>
            Класс атрибута типа данных. Исползуется только для типов. 
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgObjectPrefixAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="inPrefix"></param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgObjectPrefixAttribute.Prefix">
            <summary>
            Получение значения префикса для класса.
            </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgSettings">
            <summary>
            Сервисный класс настроек.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.ReferencedAssemblies">
            <summary>
            Список сборок, на которые ссылается программа
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.WorkingConfigurations">
            <summary>
            Список рабочих конфигураций.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.regime">
            <summary>
            Список режимов для потоков.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.HistoryStringsCount">
            <summary>
            Количество строк, выдаваемых пользователю при подборе из истории или БД
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.MaxRowsToFetch">
            <summary>
            Количество строк выбираемых из базы за одно обращение.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.AutoSavePeriod">
            <summary>
            периодичность автосохранения настроек пользователя, сек
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.AutoRefreshDataPeriod">
            <summary>
            периодичность автоматического обновления данных в элементах управления, сек
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.metaDataObjects">
            <summary>
            Полный список загруженных объектов метаданных (NsgMetaData, NsgObject).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.OwnerStringName">
            <summary>
            Локализованное имя Owner (Владелец).
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.DocumentsViewPeriod">
            <summary>
            Актуальный период просмотра документов. Задается для ограничения выборки списков документов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.ReportsViewPeriod">
            <summary>
            Актуальный период просмотра отчетов. Задается для ограничения выборки элементов в отчет.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.MaxDictionaryItemInComboBox">
            <summary>
            Максимальное количество элементов справочника которые могут быть выведены в выпадающем списке,
            если их больше, то открывается отдельное окно выбора.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.Configuration">
            <summary>
            Конфигурация
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.CashWindows">
            <summary>
            Кэшировать окна.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.CashCountPerType">
            <summary>
            Количество кэшируемых объектов на тип.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.fixedFields">
            <summary>
            Локализация Предопределеных полей.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.AdvancedDatabaseDesign">
            <summary>
            Разрешать ли расширенные настройки работы с базами данных.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.tranList">
            <summary>
            список объявленный транзакций
            int - идентификатор потока
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.mainForm">
            <summary>
            Основная форма приложения
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.#cctor">
            <summary>
            Статический конструктор клааса. Вызывается при первом обращении.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.InitializeFixedFields">
            <summary>
            Метод создания и и нициализации фиксированных полей объекта.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.ExchangeTypes">
            <summary>
            Cписок типов, обекты которых надо переносить в другие базы
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.ExchangeStopedDictionary">
             <summary>
            Возвращает ссылку на справочник баз, обмен с которыми в данный момент заблокирован, т.к. идет импорт информации из этих баз
             </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CreateXMLDocument">
            <summary>
            Создание XML документа с декларацией, корневым элементом, версией и т.д.
            корневой элемент получается через doc.DocumentElement.
            можно сразу писать значения
            </summary>
            <returns></returns>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.ReadOnly">
            <summary>
            Флаг возможности редактирования объектов в режиме конфигуратора
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.Regime">
            <summary>
            Режим работы.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.LocalizedString(System.Object)">
            <summary>
            Если obj это строка то вернет из ресурса строку с таким именем
            иначе локализованный вариант представления объекта
            Возвращаем ImageList для объектов
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.SaveExchangeObect(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Записать сохраняемый объект в таблицу для обмены с удаленными БД с проверкой на необходимость данного действия.
            Объект будет записан к обмену со всеми необходимыми БД
            </summary>
            <param name="mo">Записываемый объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.SaveExchangeObectDirectly(NsgSoft.DataObjects.NsgMultipleObject,System.Guid,System.Guid)">
            <summary>
            Записать сохраняемый объект в таблицу для обмены с удаленными БД без проверок на необходимость данного действия.
            </summary>
            <param name="mo">Записываемый объект</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.SmallImageList">
            <summary>
            Маленькие иконки для интерфейса
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.LargeImageList">
            <summary>
            Большие иконки для интерфейса
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.ComparisonImagelist">
            <summary>
            Иконки типа условия
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.DocumentsDefaultPeriod">
            <summary>
            Период выборки документов по умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.DocumentsCurrentPeriod">
            <summary>
            Текущий период для выборки документов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.ReportsDefaultPeriod">
            <summary>
            Период выборки для отчетов по умолчанию.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.ReportsCurrentPeriod">
            <summary>
            Текущий период для выборки отчетов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.WorkDate">
            <summary>
            Рабочая дата. Используется при создании новых документов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.WorkDateTime">
            <summary>
            Возвращает рабочую дату и текущее время
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.UseWorkDate">
            <summary>
            Использовать рабочую дату. Иначе используется текущая дата
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.DefaultPropertyVisible">
            <summary>
            Показывать ли реквизиты объектов для которых указана видимость по умолчанию.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ShowDebugMessage(System.Int32,System.String)">
            <summary>
            Высветить сообщение отладки
            </summary>
            <param name="message">Текст сообщения</param>
            <param name="messageType">Тип сообщения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ShowDebugMessage(System.Object,System.String)">
            <summary>
            Высветить сообщение отладки
            </summary>
            <param name="message">Текст сообщения</param>
            <param name="messageType">Тип сообщения</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ShowMessage(System.Exception)">
            <summary>
            Высветить сообщение
            </summary>
            <param name="exeption">Ошибка</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ShowMessage(System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Высветить сообщение
            </summary>
            <param name="message">Текст сообщения</param>
            <param name="messageType">Тип сообщения</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.MainForm">
            <summary>
            Ссылка на основную форму приложения.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.AddMetaDataObject(NsgSoft.DataObjects.NsgBaseObject)">
            <summary>
            Метод добавления объекта в кэш.
            </summary>
            <param name="obj">Объект.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.DeleteMetaDataObject(System.Guid)">
            <summary>
            Метод удаления объекта из кэша.
            </summary>
            <param name="guid">Идентификатор объекта.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetMetaDataObject(System.Guid)">
            <summary>
            Метод получения объекта из по идентификатору.
            </summary>
            <param name="guid">Идентификатор объекта.</param>
            <returns>Возвращает объект, для NsgMultipleObject возвращается его клон.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ContainsMetaDataObject(System.Guid)">
            <summary>
            Метод проверки наличия объекта в кэше по идентификатору.
            </summary>
            <param name="guid">Идентификатор объекта.</param>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ClearMetaDataObjects">
            <summary>
            Метод очистки кэша объектов.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ReloadObjects">
            <summary>
            Метод перегрузки в кеше.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.AlterDBAccess(NsgSoft.Database.DatabaseMode,System.Boolean)">
            <summary>
             Метод смены режима доступа к БД
            </summary>
            <param name="mode">Режим доступа</param>
            <param name="isImmediately">Если = true, то выполняется незамедлительно.
            Иначе получаем сообщение о невозможности выполнения данной операции</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetActiveUsers">
            <summary>
            Метод получения информации об активных пользователях
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetActiveUsersCount">
            <summary>
            Метод получения количества активных пользователей
            </summary>
            <returns>Количество активных пользователей</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetCurentTime">
            <summary>
            Метод возвращает текущее время на сервере
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetCurentTime(NsgSoft.Database.NsgDatabaseManager)">
            <summary>
            Метод возвращает текущее время на сервере
            </summary>
            <param name="mngr">Менеджер БД</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CreateDatabaseManager(NsgSoft.Database.NsgDatabaseManagerInfo)">
            <summary>
            Метод создания менеджера БД.
            </summary>
            <param name="dbManagerInfo">Тип БД.</param>
            <returns>Возвращает новый менеджер БД.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetAllReferencesField(NsgSoft.DataObjects.NsgReference,System.Collections.Generic.Queue{System.String},System.Boolean,System.Object,System.Boolean)">
            <summary>
            Рекурсивный метод получения всех уровней ссылки
            </summary>
            <param name="refer">Ссылка</param>
            <param name="path">Уточненный путь</param>
            <param name="isSort">"true" если метод используется для сортировки</param>
            <param name="value"></param>
            <param name="isPresentation">True -- если возвращаются  и элементы представления. Иначе анализируются только ссылки</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ParseReferencePath(System.Collections.Generic.Queue{System.String},System.Boolean,NsgSoft.DataObjects.NsgMultipleObject,System.Object,System.Boolean)">
            <summary>
            Метод разбора представления сложного объекта
            </summary>
            <param name="path">Уточненное имя объекта</param>
            <param name="isSort">True -- если используется для сортировки</param>
            <param name="MO">Сложный объект</param>
            <param name="value"></param>
            <param name="isPresentation">True -- если возвращаются  и элементы представления. Иначе анализируются только ссылки</param>
            <returns>Дерево-путь ссылок в представлении объекта</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CreateDynamicEnumInstance(System.String[])">
            <summary>
            Метод динамического создания экземпляра типа перечисление по заданным именам.
            </summary>
            <param name="names">Имена входящих в перечисление членов.</param>
            <returns>Экземпляр типа перечисление.</returns>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.AllowAccuracyChecks">
            <summary>
            Флаг, разрешения проверок имен. Имеет смысл только в режиме конфигуратора и в дизайне.
            В RunTime проверки не имеют смысла, только замедляют работу.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CheckNameAccuracy(System.String)">
            <summary>
            Метод проверки правильности имени.
            </summary>
            <remarks>
            В случае ошибок выбрасывает NsgWrongArgumentException. При положительном результате
             не производит никаких действий.
            </remarks>
            <param name="name">Имя для проверки.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CheckNameAccuracy(System.String,System.Object)">
            <summary>
            Метод проверки правильности имени.
            </summary>
            <remarks>
            В случае ошибок выбрасывает NsgWrongArgumentException. При положительном результате
             не производит никаких действий.
            </remarks>
            <param name="name">Имя для проверки.</param>
            <param name="object">объект</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.Translit(System.String)">
            <summary>
            Метод транслитерации строки.
            </summary>
            <param name="source">Строки источник.</param>
            <returns>Строка в транслите.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetNewFileStream(System.String)">
            <summary>
            Метод получения нового файлового потока для сохранения метаданных.
            </summary>
            <param name="inFilename">Имя файла для сохранения.</param>
            <returns>Возвращает новый файловый поток.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CheckCallingAssembly(System.Reflection.Assembly)">
            <summary>
            Метод проверки вызывающей сборки на права доступа при выполнении определнных операций.
            </summary>
            <param name="call">Сборка для проверки. Вызывать через Assembly.GetCallingAssembly().</param>
            <returns>Возвращает true, если сборка имеет права доступа, и false в противном случае.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetPredefinedName(NsgSoft.Common.NsgDataFixedFields)">
            <summary>
            Метод получения локализованного имени предопределенного поля по идентификатору.
            </summary>
            <param name="id">Идентификотор поля.</param>
            <returns>Локализованное имя поля.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetPredefinedName(NsgSoft.Common.NsgDataFixedFields,System.Type)">
            <summary>
            Метод получения локализованного имени предопределенного поля по идентификатору.
            </summary>
            <param name="id">Идентификотор поля.</param>
            <param name="type">Тип объекта.</param>
            <returns>Локализованное имя поля.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.BeginTransaction">
            <summary>
            Начинает транзакцию для текущего потока.
            Метод CommitTransaction должен быть вызван столько же раз, сколько был вызван метод BeginTransaction
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CommitTransaction">
            <summary>
            Фиксирует транзакцию для текущего потока.
            Метод CommitTransaction должен быть вызван столько же раз, сколько был вызван метод BeginTransaction
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CommitTransaction(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Фиксирует транзакцию для текущего потока и указанного объекта.
            </summary>
            <param name="MO">объект, фиксирующий транзакцию</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.RollbackTransaction">
            <summary>
            Отменяет транзакцию для текущего потока.
            Метод CommitTransaction должен быть вызван столько же раз, сколько был вызван метод BeginTransaction
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.RemoveTransaction">
            <summary>
            Удаляет транзакцию, открытую для текущего потока. Если такая транзакция существует - она отменяется.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.RollbackTransaction(NsgSoft.DataObjects.NsgThread)">
            <summary>
            Отменяет транзакцию для указанного потока.
            Если транзакции в указанном потоке нет - ничего не делает
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetTransaction(NsgSoft.DataObjects.NsgMultipleObject)">
            <summary>
            Возврашает транзакцию для текущего потока.
            Если транзакции нет, то она создается
            </summary>
            <param name="MO">Объект, вызывающий создание транзакции</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CheckTransaction">
            <summary>
            Проверяет, существует ли транзакция для текущего потока
            </summary>
            <returns>true - транзакция существует</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetTransactionWithoutLock">
            <summary>
            Получить действующую транзакцию для текущего потока.
            Новая транзакция не начинается
            </summary>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CreateObjectName(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Создание нового имени объекта добавлением номера.
            </summary>
            <param name="name">Начальное имя</param>
            <param name="names">Список имеющихся имен</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CreateNewObjectName(NsgSoft.Design.INsgObjectContainer)">
            <summary>
            Создание нового имени объекта добавлением номера.
            </summary>
            <param name="cont">Контейнер для добавления объекта.</param>
            <returns>Новое имя объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CreateNewObjectName(System.Collections.ICollection)">
            <summary>
            Создание нового имени объекта добавлением номера.
            </summary>
            <param name="cont">Контейнер для добавления объекта.</param>
            <returns>Новое имя объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.createNewObjectName(System.Object)">
            <summary>
            Создание нового имени объекта добавлением номера.
            </summary>
            <param name="cont">Контейнер для добавления объекта.</param>
            <returns>Новое имя объекта.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.IsContains(System.Collections.IEnumerable,System.Object)">
            <summary>
            Метод проверки наличия элемента в коллекции.
            </summary>
            <param name="container">Коллекция объектов.</param>
            <param name="value">Значение для поиска в коллекции.</param>
            <returns></returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ValidationEventHandler(System.Object,System.Xml.Schema.ValidationEventArgs)">
            <summary>
            Метод обработки ошибок чтения XML.
            </summary>
            <param name="sender">Источник события.</param>
            <param name="e">Параметры события.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CreateNsgSimpleObjectByValue(System.Object)">
            <summary>
            Создать NsgSimpleObject по значению
            </summary>
            <param name="value">Значение, по которому будет создат объект соответствующего типа</param>
            <returns>Созданный объект, содержащий переданное значение</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ValuesArrayToString(System.Object)">
            <summary>
            Метод преобразования массива значений в строку
            </summary>
            <param name="array">Массив значений</param>
            <returns>Строка</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetRestByCirculate(NsgSoft.DataObjects.NsgMemoryTable,NsgSoft.DataObjects.NsgMemoryTable,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Метод получения остатков по оборотам
            </summary>
            <param name="rest">Начальные остатки</param>
            <param name="circulate">Обороты</param>
            <param name="dimensions">Список змерений для которых производится расчет остатков
            Если передается null, то в расчете будут использоваться поля из rest, у которых SubType == NsgRekvisitSubType.Dimension
            </param>
            <param name="resources">Ресурсы</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CompareObjects(System.Object,System.Object,NsgSoft.Database.NsgComparison)">
            <summary>
            Проверить, удовлетворяет ли переданные значение наложенному условию.
            </summary>
            <param name="value1">Левый операнд</param>
            <param name="value2">Правый операнд</param>
            <param name="compOperator">Оператор сравнения</param>
            <returns>результат логического выражения</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ShowLogo(NsgSoft.Design.NsgBaseLogoForm,System.Int32,System.Boolean)">
            <summary>
            Метод отображения формы - логотипа.
            </summary>
            <param name="form">Форма.</param>
            <param name="milliseconds">Время запуска.</param>
            <param name="showInTaskbar">Отображать в панели задач.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ShowLogo(NsgSoft.Design.NsgBaseLogoForm,System.Int32)">
            <summary>
            Метод отображения логотипа.
            </summary>
            <param name="form">Форма.</param>
            <param name="milliseconds">Время запуска.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.ShowLogo(NsgSoft.Design.NsgBaseLogoForm)">
            <summary>
            Метод отображения логотипа.
            </summary>
            <param name="form">Форма.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.CloseLogo">
            <summary>
            Метод закрытия отображаемого логотипа.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.GetLogoForm">
            <summary>
            Метод получения формы Лого.
            </summary>
            <returns>Возвращает форму Лого, если она высвечена в данный момент, иначе null.</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.LogoReportProgress(System.String)">
            <summary>
            Метод вывода прогресса в Лого форму.
            </summary>
            <param name="msg">Сообщение прогресса.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.SetLoadedObjectsCount(System.Int32)">
            <summary>
            Метод задания количества загружаемых в конфигурацию объектов.
            </summary>
            <param name="count">Количество.</param>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.LoadedObjects">
            <summary>
            Количество загруженных объектов.
            </summary>
        </member>
        <member name="F:NsgSoft.DataObjects.NsgSettings.allObjectsCount">
            <summary>
            Всего объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.PercentLoaded">
            <summary>
            Процент загрузки объектов.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.ShowPercentMessages">
            <summary>
            Отображать сообщения о проценте загрузки.
            </summary>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.CachingActive">
            <summary>
            Кеширование объектов при загрузке из XML
            обнуления кеша выставить в false;
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.getFromCache(System.Guid,System.Guid)">
            <summary>
            Получение значение из кеша
            </summary>
            <param name="Type">Guid типа</param>
            <param name="Object">Guid объекта</param>
            <returns>Если нет в кеше то Guid.Empty</returns>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgSettings.putToCache(System.Guid,System.Guid,System.Guid)">
            <summary>
            Положить значение в кеш
            </summary>
            <param name="Type">Guid типа</param>
            <param name="Object">Guid объекта</param>
            <param name="Value">Значение</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgSettings.RegimeToString">
             <summary>
            Режим формирования ToString() у MO таким образом, как описано у нас в CompareTo
            Нужно для правильной работы метода DataTable.detailRows (у нас используется в StiDataSource)
            Из-за неправильного сравнения реализованногоу Microsoft в System.Data.Common.ObjetcStorage метода
            CompareValueTo, который в случае различных типов проводит сравнение по ToString()
             </summary>
        </member>
        <member name="T:NsgSoft.DataObjects.NsgWrongArgumentException">
            <summary>
            Класс исключения по неверно заданным аргументам.
            </summary>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgWrongArgumentException.#ctor(System.String,System.String)">
            <summary>
            Конструктор класса исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="paramName">Имя параметра, который вызвал исключение.</param>
        </member>
        <member name="M:NsgSoft.DataObjects.NsgWrongArgumentException.#ctor(System.String,System.String,NsgSoft.DataObjects.NsgReference[])">
            <summary>
            Конструктор класса исключения со списком связанных объектов.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="paramName">Имя параметра, который вызвал исключение.</param>
            <param name="objects">Список связанных объектов.</param>
        </member>
        <member name="P:NsgSoft.DataObjects.NsgWrongArgumentException.RelatedObjects">
            <summary>
            Получение списка связанных объектов.
            </summary>
        </member>
        <member name="T:NsgSoft.Design.NsgDataEnumConverter">
            <summary>
            Конвертер типа перечисление.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgDataEnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Метод проверки возможности конвертации в заданный в редакторе тип.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgDataEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Метод конвертиции в заданный в редакторе тип.
            </summary>
            <returns>Возвращает конвертированное значение.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgDataEnumConverter.getHost(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Метод получения хоста дизайнера.
            </summary>
        </member>
        <member name="T:NsgSoft.Design.NsgDataEnumEditor">
            <summary>
            Класс редактор перечислений.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgDataEnumEditor.#ctor(System.Type)">
            <summary>
            Конструктор класса.
            </summary>
            <param name="inType">Тип редатируемого объекта.</param>
        </member>
        <member name="M:NsgSoft.Design.NsgDataEnumEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Метод редактирования значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgArrayEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Метод редактирования объекта.
            </summary>
        </member>
        <member name="T:NsgSoft.Design.NsgCompareParamValueConverter">
            <summary>
            Конвертер типа параметра объекта сравнения.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgCompareParamValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Метод проверки возможности конвертации из заданного в редакторе значения.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgCompareParamValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Метод конвертиции из заданного в редакторе значения.
            </summary>
            <param name="value">Значение из редактора.</param>
            <returns>Возвращает конвертированное значение.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgCompareParamValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Метод проверки возможности конвертации в заданный в редакторе тип.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgCompareParamValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Метод конвертиции в заданный в редакторе тип.
            </summary>
            <returns>Возвращает конвертированное значение.</returns>
        </member>
        <member name="T:NsgSoft.Design.NsgConditionsConverter">
            <summary>
            Класс конвертер парметров поиска.
            </summary>
        </member>
        <member name="T:NsgSoft.Design.NsgConditionsConverter.ExpandableConverter">
            <summary>
            Подкласс конвертации раскрывающегося объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgConditionsConverter.ExpandableConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Метод получения свойств типа.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgConditionsConverter.ExpandableConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Разрешает получение свойств через метод GetProperties.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgConditionsConverter.ExpandableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Метод конвертации значения.
            </summary>
            <param name="value">Значение для конвертации.</param>
            <param name="destinationType">Тип, к которому приводится значение.</param>
            <returns>Отконвертированное значение.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgConditionsConverter.ExpandableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Метод проверки на возможность конвертации.
            </summary>
        </member>
        <member name="T:NsgSoft.Design.NsgConditionsConverter.NotExpandableConverter">
            <summary>
            Подкласс конвертации нераскрывающегося объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgConditionsConverter.NotExpandableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Метод конвертации значения.
            </summary>
            <param name="value">Значение для конвертации.</param>
            <param name="destinationType">Тип, к которому приводится значение.</param>
            <returns>Отконвертированное значение.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgConditionsConverter.NotExpandableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Метод проверки на возможность конвертации.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgConditionsConverter.ConvertToString(System.Object)">
            <summary>
            Метод конвертации значения.
            </summary>
            <param name="value">Значение для конвертации.</param>
            <param name="destinationType">Тип, к которому приводится значение.</param>
            <returns>Отконвертированное значение.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgDataTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Метод редактирования значения объекта.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgDataTypeEditor.GetDesignerHost(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
            <summary>
            Метод получения хоста дизайнера.
            </summary>
            <param name="context">Контекст.</param>
            <param name="provider">Провайдер сервисов.</param>
            <returns>Возвращает хост дизайнера.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgDataTypeEditor.FillTypesInEditorForm(NsgSoft.Design.NsgDesignHost,NsgSoft.Design.INsgObjectExplorerForm)">
            <summary>
            Метод заполнения формы редактора типами для добавления.
            </summary>
            <param name="host">Хост дизайнера.</param>
            <param name="form">Форма редактора.</param>
        </member>
        <member name="M:NsgSoft.Design.NsgDataTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Метод задания типа формы редактора.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgDynamicPropertiesEditor.#ctor(System.Type)">
            <summary>
            Конструтор класса.
            </summary>
            <param name="type">Тип редактируемого объекта.</param>
        </member>
        <member name="M:NsgSoft.Design.NsgDynamicPropertiesEditor.FillEditorFormList(NsgSoft.Design.INsgObjectExplorerForm)">
            <summary>
            Метод заполнения списка объектов в форме редактора.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgDynamicPropertiesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Метод редактирования объекта в форме редактора.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgDynamicPropertiesEditor.CreateInstance(System.Type)">
            <summary>
            Метод создания экземпляра объекта редактируемого массива.
            </summary>
            <param name="itemType">Тип элемента массива.</param>
            <returns>Возвращает созданный экземпляр массива.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgDynamicPropertiesEditor.DestroyInstance(System.Object)">
            <summary>
            Метод удаления экземпляра объекта редактируемого массива.
            </summary>
            <param name="instance">Удаляемый экземпляр массива.</param>
        </member>
        <member name="M:NsgSoft.Design.NsgDynamicPropertiesEditor.FillObject(System.Object,NsgSoft.Design.INsgObjectExplorerForm)">
            <summary>
            Метод заполнения созданного 'пустого' экземпляра объекта редактируемого массива из формы редактора.
            </summary>
            <param name="instance">'Пустой' экземпляр объекта редактируемого массива.</param>
            <param name="form">Форма редактирования.</param>
            <returns>Возвращает заполненый экземпляр объекта редактируемого массива.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgDynamicPropertiesEditor.GetDisplayText(System.Object)">
            <summary>
            Метод преобразования объекта к строке для вывода на экране.
            </summary>
            <param name="value">Объект - экземпляр массива.</param>
            <returns>Возвращает строковое редставление объекта.</returns>
        </member>
        <member name="T:NsgSoft.Design.NsgNameAccurancyConverter">
            <summary>
            Конвертер имени объекта с проверкой его правильности.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgNameAccurancyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Метод проверки возможности конвертации из заданного в редакторе значения.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgNameAccurancyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Метод конвертиции из заданного в редакторе значения.
            </summary>
            <param name="value">Значение из редактора.</param>
            <returns>Возвращает конвертированное значение.</returns>
        </member>
        <member name="T:NsgSoft.Design.NsgObjectsFilterConverter">
            <summary>
            Конвертер типа фильтра объектов.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgObjectsFilterConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Метод проверки возможности конвертации объекта к определенному типу.
            </summary>
            <param name="context">Контекст.</param>
            <param name="destinationType">Тип, к которому проверяется приведение.</param>
            <returns>Результат проверки.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgObjectsFilterConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Метод конвертации объекта к определенному типу.
            </summary>
            <param name="context">Контекст.</param>
            <param name="culture">Языковая культура.</param>
            <param name="value">Объект для приведения.</param>
            <param name="destinationType">Тип, к которому идет конвертация.</param>
            <returns>Отконвертированный вопрос.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgPropertyDescriptorCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Метод конвертации значения.
            </summary>
            <param name="value">Значение для конвертации.</param>
            <param name="destinationType">Тип, к которому приводится значение.</param>
            <returns>Отконвертированное значение.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgPropertyDescriptorCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Метод проверки на возможность конвертации.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgPropertyDescriptorCollectionConverter.concatProperties(NsgSoft.DataObjects.NsgPropertyDescriptor[])">
            <summary>
            Метод 'склеивания' параметров в строку.
            </summary>
            <param name="cols">Список параметров.</param>
            <returns>Строковое представление списка параметров.</returns>
        </member>
        <member name="T:NsgSoft.Design.NsgPropertyDescriptorConverter">
            <summary>
            Класс конвертер описателя свойства.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgPropertyDescriptorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Метод конвертации к строке.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgPropertyDescriptorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Метод проверки конвертации к строке.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgPropertyDescriptorConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Метод получения свойств типа.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgPropertyDescriptorConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Метод задания разрешения на получение свойств типа.
            </summary>
        </member>
        <member name="T:NsgSoft.Design.NsgSimpleObjectConverter">
            <summary>
            Класс конвертер простого объекта метаданных.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgSimpleObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Метод преобразования к строке.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgParamsEditor.#ctor(System.Type)">
            <summary>
            Конструтор класса.
            </summary>
            <param name="type">Тип редактируемого объекта.</param>
        </member>
        <member name="M:NsgSoft.Design.NsgParamsEditor.CreateInstance(System.Type)">
            <summary>
            Метод создания экземпляра объекта редактируемого массива.
            </summary>
            <param name="itemType">Тип элемента массива.</param>
            <returns>Возвращает созданный экземпляр масства.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgParamsEditor.GetObjectsFromInstance(System.Object)">
            <summary>
            Получение объектов из списка.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgParamsEditor.FillEditorFormList(NsgSoft.Design.INsgObjectExplorerForm)">
            <summary>
            Метод заполнения списка объектов в форме редактора.
            </summary>
        </member>
        <member name="M:NsgSoft.Design.NsgParamsEditor.FillObject(System.Object,NsgSoft.Design.INsgObjectExplorerForm)">
            <summary>
            Метод заполнения созданного 'пустого' экземпляра объекта редактируемого массива из формы редактора.
            </summary>
            <param name="instance">'пустого' экземпляр объекта редактируемого массива.</param>
            <param name="form">Форма редактирования.</param>
            <returns>Возвращает заполненый экземпляр объекта редактируемого массива.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgParamsEditor.CreateEditorForm">
            <summary>
            Метод создания формы редактора.
            </summary>
            <returns>Возвращает экземпляр формы редактора.</returns>
        </member>
        <member name="M:NsgSoft.Design.NsgParamsEditor.GetDisplayText(System.Object)">
            <summary>
            Метод преобразования объекта к строке для вывода на экране.
            </summary>
            <param name="value">Объект - экземпляр массива.</param>
            <returns>Возвращает строковое редставление объекта.</returns>
        </member>
    </members>
</doc>
